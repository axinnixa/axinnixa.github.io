<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/02/11/SpringBoot%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/02/11/SpringBoot%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>pve 安装多台Centos</li><li>docker-compose 安装rancher，harbor，gitlab，jenkins</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ImagePullBackOff (Back-off pulling image &quot;192.168.2.205/lsj/jeecg-boot-module-system&quot;)</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos8 利用fail2ban封禁恶意访问IP</title>
      <link href="/2023/02/01/2022-02-09-Centos-8-%E5%88%A9%E7%94%A8fail2ban%E5%B0%81%E7%A6%81%E6%81%B6%E6%84%8F%E8%AE%BF%E9%97%AEIP/"/>
      <url>/2023/02/01/2022-02-09-Centos-8-%E5%88%A9%E7%94%A8fail2ban%E5%B0%81%E7%A6%81%E6%81%B6%E6%84%8F%E8%AE%BF%E9%97%AEIP/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>nginx version: nginx/1.18.0</li><li>CentOS Linux release 8.3.2011</li><li>fail2ban 0.11.2</li><li>防火墙：firewalld</li></ul><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>nginx access.log 有许多恶意访问路径记录，导致日志文件过大，占用服务器资源<br>例：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">47.117.84.86 - - [18/Jun/2021:17:06:15 +0800] &quot;GET /phpMyAdmin/ HTTP/1.1&quot; 404 548 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safar</span><br><span class="line">i/537.36&quot;</span><br><span class="line">47.117.84.86 - - [18/Jun/2021:17:06:15 +0800] &quot;GET /phpmyadmin/ HTTP/1.1&quot; 404 548 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safar</span><br><span class="line">i/537.36&quot;</span><br></pre></td></tr></table></figure><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="安装-fail2ban"><a href="#安装-fail2ban" class="headerlink" title="安装 fail2ban"></a>安装 fail2ban</h4><p><code>sudo dnf install fail2ban</code></p><h4 id="启动-amp-设置开机启动-fail2ban"><a href="#启动-amp-设置开机启动-fail2ban" class="headerlink" title="启动&amp;设置开机启动 fail2ban"></a>启动&amp;设置开机启动 fail2ban</h4><p><code>sudo systemctl enable --now fail2ban</code></p><p>注：—now参数</p><ul><li>设置为开机自动：systemctl enable</li><li>设置为开机自动并现在立刻启动：systemctl enable —now</li></ul><p>配置 fail2ban<br>Fail2ban会按照以下顺序读取配置文件：</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">/etc/fail2ban/jail.conf</span><br><span class="line">/etc/fail2ban/jail.d/*.conf</span><br><span class="line">/etc/fail2ban/jail.local</span><br><span class="line">/etc/fail2ban/jail.d/*.local</span><br></pre></td></tr></table></figure><p>每个.local文件都会覆盖文件中的设置.conf。<br>示例配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[nginx-cc]</span><br><span class="line">enabled = true</span><br><span class="line">port = http,https</span><br><span class="line">filter = nginx-cc</span><br><span class="line">action = %(action_mwl)s</span><br><span class="line">maxretry = 3</span><br><span class="line">findtime = 60</span><br><span class="line">bantime = -1</span><br><span class="line">logpath = /home/wwwlogs/access.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ wwwroot]# fail2ban-client status nginx-cc</span><br><span class="line">Status for the jail: nginx-cc</span><br><span class="line">|- Filter</span><br><span class="line">|  |- Currently failed: 12</span><br><span class="line">|  |- Total failed:     338</span><br><span class="line">|  `- File list:        /home/wwwlogs/access.log</span><br><span class="line">`- Actions</span><br><span class="line">   |- Currently banned: 19</span><br><span class="line">   |- Total banned:     21</span><br><span class="line">   `- Banned IP list:   47.117.94.207 47.117.33.84 47.117.79.197 47.117.84.41 47.117.67.205 47.117.73.237 47.117.37.92 47.117.75.161 47.117.39.76 47.117.65.124 47.117.39.232 47.117.35.77 47.117.34.254 113.57.182.197 185.142.236.43 169.255.6.18 47.90.209.11 120.36.229.157 61.151.178.176</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Centos </category>
          
          <category> Fail2ban </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql Null值处理</title>
      <link href="/2023/02/01/2022-02-09-Mysql-Null%E5%80%BC%E5%A4%84%E7%90%86/"/>
      <url>/2023/02/01/2022-02-09-Mysql-Null%E5%80%BC%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="Mysql-表字段null值，更新为0值"><a href="#Mysql-表字段null值，更新为0值" class="headerlink" title="Mysql 表字段null值，更新为0值"></a>Mysql 表字段null值，更新为0值</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> axin_member</span><br><span class="line"><span class="keyword">SET</span> create_time <span class="operator">=</span> ( <span class="keyword">CASE</span> <span class="keyword">WHEN</span> IFNULL( create_time, <span class="string">&#x27;&#x27;</span> ) <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">THEN</span> <span class="number">0</span> <span class="keyword">ELSE</span> create_time <span class="keyword">END</span> )</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">create_time <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><h4 id="Mysql-表字段null值，更新为空字符串（即：’’，”EMPTY-STRING”）值"><a href="#Mysql-表字段null值，更新为空字符串（即：’’，”EMPTY-STRING”）值" class="headerlink" title="Mysql 表字段null值，更新为空字符串（即：’’，”EMPTY STRING”）值"></a>Mysql 表字段null值，更新为空字符串（即：’’，”EMPTY STRING”）值</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> axin_member</span><br><span class="line"><span class="keyword">SET</span> nickname <span class="operator">=</span> ( <span class="keyword">CASE</span> <span class="keyword">WHEN</span> IFNULL( nickname, <span class="string">&#x27;&#x27;</span> ) <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">ELSE</span> nickname <span class="keyword">END</span> )</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">nickname <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flutter 升级</title>
      <link href="/2023/02/01/2022-02-09-Flutter-%E5%8D%87%E7%BA%A7/"/>
      <url>/2023/02/01/2022-02-09-Flutter-%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>mac MoJave 10.14.5</li><li>旧版本：1.12.13+hotfix.8</li><li>新版本：2.2.3</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="flutter-upgrade-方式"><a href="#flutter-upgrade-方式" class="headerlink" title="flutter upgrade 方式"></a>flutter upgrade 方式</h4><p>看文档说直接执行<code>flutter upgrade</code> 即可升级</p><p>试试</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">axin @ AxindeMacBook-Pro <span class="keyword">in</span> /usr/local/flutter on git:stable x [17:02:04] C:141</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">flutter upgrade</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>死也不动，查看当前分支</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flutter channel</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">axin @ AxindeMacBook-Pro <span class="keyword">in</span> /usr/local/flutter on git:stable x [17:07:06] C:1</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">flutter channel</span></span><br><span class="line">Flutter channels:</span><br><span class="line">beta</span><br><span class="line">dev</span><br><span class="line">master</span><br><span class="line">* stable</span><br></pre></td></tr></table></figure><p>没毛病，开<code>FQ</code>(科学上网) try again</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">axin @ AxindeMacBook-Pro <span class="keyword">in</span> /usr/local/flutter on git:stable x [17:05:12] C:141</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">flutter upgrade</span></span><br><span class="line">Your flutter checkout has local changes that would be erased by upgrading. If</span><br><span class="line">you want to keep these changes, it is recommended that you stash them via &quot;git</span><br><span class="line">stash&quot; or else commit the changes to a local branch. If it is okay to remove</span><br><span class="line">local changes, then re-run this command with --force.</span><br></pre></td></tr></table></figure><p>说我本地有改动，试试强制升级</p><p><code>flutter upgrade --force</code></p><p>再试试</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">flutter upgrade --force</span><br><span class="line">Upgrading Flutter from /usr/local/flutter...</span><br><span class="line">fatal: unable to access &#x27;https://github.com/flutter/flutter.git/&#x27;: LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443</span><br></pre></td></tr></table></figure><p><code>FQ酸酸撸</code> 切全局再次执行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">flutter upgrade --force</span></span><br><span class="line">Upgrading Flutter from /usr/local/flutter...</span><br><span class="line">From https://github.com/flutter/flutter</span><br><span class="line"> + 0b8abb4724...f4abaa0735 stable                  -&gt; origin/stable  (forced update)</span><br><span class="line"> * [new branch]            CaseyHillers-patch-1    -&gt; origin/CaseyHillers-patch-1</span><br><span class="line"> * [new branch]            Hixie-patch-1           -&gt; origin/Hixie-patch-1</span><br><span class="line"> * [new branch]            Hixie-patch-2           -&gt; origin/Hixie-patch-2</span><br><span class="line"> ...</span><br><span class="line"> 很多内容...</span><br><span class="line"> ...</span><br><span class="line"> Flutter 2.2.3 • channel stable • https://github.com/flutter/flutter.git</span><br><span class="line">Framework • revision f4abaa0735 (7 days ago) • 2021-07-01 12:46:11 -0700</span><br><span class="line">Engine • revision 241c87ad80</span><br><span class="line">Tools • Dart 2.13.4</span><br><span class="line"></span><br><span class="line">Running flutter doctor...</span><br><span class="line">Doctor summary (to see all details, run flutter doctor -v):</span><br><span class="line">[✓] Flutter (Channel stable, 2.2.3, on Mac OS X 10.14.5 18F203 darwin-x64, locale zh-Hans-CN)</span><br><span class="line">[✓] Android toolchain - develop for Android devices (Android SDK version 29.0.2)</span><br><span class="line">[✗] Xcode - develop for iOS and macOS</span><br><span class="line">    ✗ Xcode installation is incomplete; a full installation is necessary for iOS development.</span><br><span class="line">      Download at: https://developer.apple.com/xcode/download/</span><br><span class="line">      Or install Xcode via the App Store.</span><br><span class="line">      Once installed, run:</span><br><span class="line">        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer</span><br><span class="line">        sudo xcodebuild -runFirstLaunch</span><br><span class="line">    ✗ CocoaPods not installed.</span><br><span class="line">        CocoaPods is used to retrieve the iOS and macOS platform side&#x27;s plugin code that responds to your plugin usage on the Dart side.</span><br><span class="line">        Without CocoaPods, plugins will not work on iOS or macOS.</span><br><span class="line">        For more info, see https://flutter.dev/platform-plugins</span><br><span class="line">      To install see https://guides.cocoapods.org/using/getting-started.html#installation for instructions.</span><br><span class="line">[✓] Chrome - develop for the web</span><br><span class="line">[✓] Android Studio (version 4.2)</span><br><span class="line">[✓] IntelliJ IDEA Ultimate Edition (version 2020.2.1)</span><br><span class="line">[✓] VS Code (version 1.57.1)</span><br><span class="line">[✓] Connected device (1 available)</span><br><span class="line"></span><br><span class="line">! Doctor found issues in 1 category.</span><br><span class="line"></span><br><span class="line">  ╔════════════════════════════════════════════════════════════════════════════╗</span><br><span class="line">  ║                 Welcome to Flutter! - https://flutter.dev                  ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ The Flutter tool uses Google Analytics to anonymously report feature usage ║</span><br><span class="line">  ║ statistics and basic crash reports. This data is used to help improve      ║</span><br><span class="line">  ║ Flutter tools over time.                                                   ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ Flutter tool analytics are not sent on the very first run. To disable      ║</span><br><span class="line">  ║ reporting, type &#x27;flutter config --no-analytics&#x27;. To display the current    ║</span><br><span class="line">  ║ setting, type &#x27;flutter config&#x27;. If you opt out of analytics, an opt-out    ║</span><br><span class="line">  ║ event will be sent, and then no further information will be sent by the    ║</span><br><span class="line">  ║ Flutter tool.                                                              ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ By downloading the Flutter SDK, you agree to the Google Terms of Service.  ║</span><br><span class="line">  ║ Note: The Google Privacy Policy describes how data is handled in this      ║</span><br><span class="line">  ║ service.                                                                   ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ Moreover, Flutter includes the Dart SDK, which may send usage metrics and  ║</span><br><span class="line">  ║ crash reports to Google.                                                   ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ Read about data we send with crash reports:                                ║</span><br><span class="line">  ║ https://flutter.dev/docs/reference/crash-reporting                         ║</span><br><span class="line">  ║                                                                            ║</span><br><span class="line">  ║ See Google&#x27;s privacy policy:                                               ║</span><br><span class="line">  ║ https://policies.google.com/privacy                                        ║</span><br><span class="line">  ╚════════════════════════════════════════════════════════════════════════════╝</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>额，终于成功。</p><h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><a href="https://docs.flutter.dev/development/tools/sdk/upgrading">Upgrading Flutter</a></p><p><a href="https://docs.flutter.dev/development/tools/sdk/releases?tab=macos#macos">Flutter SDK releases</a></p><p><a href="https://flutter.cn/docs/development/tools/sdk/upgrading">升级你的 Flutter 版本</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 中事务处理与案例</title>
      <link href="/2023/02/01/2022-02-09-PHP-%E4%B8%AD%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E4%B8%8E%E6%A1%88%E4%BE%8B/"/>
      <url>/2023/02/01/2022-02-09-PHP-%E4%B8%AD%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E4%B8%8E%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>SQL updqte 语句是返回更新的行记录数，需要注册更新0条记录的情况</li><li>库存，或数量等字段需要设置成无符号(unsigned)</li><li>Mysql 表存储引擎必须为innodb</li><li>更新库存、或数量时，update语句需要加上where条件。</li><li>事务必须是在同一个数据库连接中才能生效，thinkphp模型属性中如果配置了$connection就会导致这个问题</li></ul><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>Thinkphp6</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Db</span>::<span class="title function_ invoke__">startTrans</span>();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 业务一</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="title class_">BusinesService</span>::<span class="title function_ invoke__">businessAction</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;业务一，失败！&quot;</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$msg</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 业务二</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="title class_">OrderService</span>::<span class="title function_ invoke__">businessAction</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;业务二，失败！&quot;</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$msg</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 业务三</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="title class_">CouponService</span>::<span class="title function_ invoke__">businessAction</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;业务三，失败！&quot;</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$msg</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 业务n</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="title class_">OtherService</span>::<span class="title function_ invoke__">businessAction</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$res</span>) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;业务n，失败！&quot;</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$msg</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Db</span>::<span class="title function_ invoke__">commit</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (HttpException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="comment">// 业务异常</span></span><br><span class="line">        <span class="title class_">Db</span>::<span class="title function_ invoke__">rollback</span>();</span><br><span class="line">        <span class="title function_ invoke__">fail</span>(<span class="variable">$e</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="title class_">Db</span>::<span class="title function_ invoke__">rollback</span>();</span><br><span class="line">        <span class="title function_ invoke__">abort</span>(<span class="title class_">Result</span>::<span class="variable">$error_log</span>, <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 日志输出</title>
      <link href="/2023/02/01/2022-02-09-PHP-%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA/"/>
      <url>/2023/02/01/2022-02-09-PHP-%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日志输出</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $contents</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">writeLog</span>(<span class="params"><span class="variable">$contents</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../../runtime/timer/timer_&#x27;</span> . <span class="title function_ invoke__">date</span>(<span class="string">&#x27;y-m-d&#x27;</span>) . <span class="string">&#x27;.log&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="comment">// 如果文件不存在，则创建一个新文件。</span></span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>, <span class="string">&#x27;&#x27;</span>, FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$contents</span>)) &#123;</span><br><span class="line">        <span class="variable">$contents</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>) . <span class="string">&#x27;:&#x27;</span> . <span class="title function_ invoke__">json_encode</span>(<span class="variable">$contents</span>, JSON_UNESCAPED_UNICODE) . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$contents</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>) . <span class="string">&#x27;:&#x27;</span> . <span class="variable">$contents</span> . <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>, <span class="variable">$contents</span>, FILE_APPEND);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$now</span>      = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;y-m-d&#x27;</span>, <span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&#x27;log/tongbu_&#x27;</span> . <span class="variable">$now</span> . <span class="string">&#x27;.log&#x27;</span>;</span><br><span class="line"><span class="variable">$file</span>     = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;a+&quot;</span>);   <span class="comment">//a+表示文件可读写方式打开</span></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$file</span>, <span class="string">&#x27;开始写入&#x27;</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="variable">$time</span>   = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$res</span>    = <span class="string">&quot;www.axinblog.com&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$file</span>, <span class="variable">$time</span> . <span class="string">&quot;\t&quot;</span> . <span class="variable">$res</span> . <span class="string">&quot;\t&quot;</span> . <span class="variable">$result</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$file</span>, <span class="string">&#x27;写入完成&#x27;</span> . <span class="string">&quot;\n&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">writeLog</span>(<span class="params"><span class="variable">$contents</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$now</span>      = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;y-m-d&#x27;</span>, <span class="title function_ invoke__">time</span>());</span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;log/tongbu_&#x27;</span> . <span class="variable">$now</span> . <span class="string">&#x27;.log&#x27;</span>;</span><br><span class="line">    <span class="variable">$time</span>     = <span class="title function_ invoke__">time</span>();</span><br><span class="line">    <span class="variable">$re</span>       = <span class="string">&quot;www.axinblog.com&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span>   = <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">error_log</span>(<span class="variable">$time</span> . <span class="string">&quot;\t&quot;</span> . <span class="variable">$re</span> . <span class="string">&quot;\t&quot;</span> . <span class="variable">$result</span> . <span class="string">&quot;\n&quot;</span>, <span class="number">3</span>, <span class="variable">$filename</span>);<span class="comment">// 3表示消息被发送到后面的文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery Validate 无法验证chosen select标签的解决方法</title>
      <link href="/2023/02/01/2022-02-09-jQuery-Validate-%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81chosen-select%E6%A0%87%E7%AD%BE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/01/2022-02-09-jQuery-Validate-%E6%97%A0%E6%B3%95%E9%AA%8C%E8%AF%81chosen-select%E6%A0%87%E7%AD%BE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
          <category> Validate </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>netstat与lsof命令</title>
      <link href="/2023/02/01/2022-02-09-netstat%E4%B8%8Elsof%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/02/01/2022-02-09-netstat%E4%B8%8Elsof%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h4 id="Netstat-命令"><a href="#Netstat-命令" class="headerlink" title="Netstat 命令"></a>Netstat 命令</h4><p>安装</p><p><code>Ubuntu：sudo apt install net-tools</code></p><p><code>netstat -a</code></p><p>查看所有套接字</p><p><code>netstat -ap</code></p><p>查看所有的套接字与PID</p><p>注：</p><pre><code>-a, --all               display all sockets (default: connected)-p, --programs          display PID/Program name for sockets</code></pre><p>netstat -ap | grep 端口号</p><p>查看某端口</p><h4 id="lsof命令"><a href="#lsof命令" class="headerlink" title="lsof命令"></a>lsof命令</h4><p>lsof(list open files)是一个列出当前系统打开文件的工具</p><p>lsof 查看端口占用语法格式：</p><p><code>lsof -i:端口号</code></p><p>示例：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  $ lsof -i</span><br><span class="line">列出当所有端口占用</span><br><span class="line">➜  $ lsof -i:80</span><br><span class="line">查看80端口占用情况</span><br><span class="line">COMMAND  PID    USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">nginx   7271 vagrant   26u  IPv4  81023      0t0  TCP *:http (LISTEN)</span><br><span class="line">nginx   7272 vagrant   26u  IPv4  81023      0t0  TCP *:http (LISTEN)</span><br><span class="line">nginx   7273 vagrant   26u  IPv4  81023      0t0  TCP *:http (LISTEN)</span><br><span class="line">nginx   7274 vagrant   26u  IPv4  81023      0t0  TCP *:http (LISTEN)</span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>错误：执行netstat命令报错: command not found: netstat</p><p>环境：Ubuntu</p><p>解决：sudo apt install net-tools</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.runoob.com/w3cnote/linux-check-port-usage.html">Linux 查看端口占用情况</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/02/01/2022-02-09-%E5%8D%87%E7%BA%A7/"/>
      <url>/2023/02/01/2022-02-09-%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信支付：JSAPI支付</title>
      <link href="/2023/02/01/2022-02-09-%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%EF%BC%9AJSAPI%E6%94%AF%E4%BB%98/"/>
      <url>/2023/02/01/2022-02-09-%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%EF%BC%9AJSAPI%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p><strong>做支付前，请先过一遍官方文档理解整个流程</strong><br><strong>做支付前，请先过一遍官方文档理解整个流程</strong><br><strong>做支付前，请先过一遍官方文档理解整个流程</strong></p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p><a href="https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F">微信支付平台</a></p><p>产品中心-&gt;我的产品-&gt;支付产品-&gt;JSAPI支付</p><p><a href="https://mp.weixin.qq.com/">微信公众平台</a></p><h4 id="错误解决"><a href="#错误解决" class="headerlink" title="错误解决"></a>错误解决</h4><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_9&amp;index=7">支付常见问题</a></p><h5 id="redirect-uri-域名与后台配置不一致，错误码：10003"><a href="#redirect-uri-域名与后台配置不一致，错误码：10003" class="headerlink" title="redirect_uri 域名与后台配置不一致，错误码：10003"></a>redirect_uri 域名与后台配置不一致，错误码：10003</h5><ul><li>检查代码中的AppId与AppSecret是否与微信公众平台一致，如果公司有多个公众号容易出现该问题</li><li>检查微信公众平台网页授权域名是否填写</li><li>前端请求地址与网页授权域名填写的是否一致</li></ul><blockquote><p>微信公众平台-&gt;公众号设置-&gt;功能设置-&gt;网页授权域名</p></blockquote><h5 id="微信支付提示下单账号与支付账号不一致"><a href="#微信支付提示下单账号与支付账号不一致" class="headerlink" title="微信支付提示下单账号与支付账号不一致"></a>微信支付提示下单账号与支付账号不一致</h5><ul><li>检查是否前端，或后端是否做了openid缓存</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/api/index.html">普通商户接入</a></p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_3">官方JSAPI文档</a></p><p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html">微信官方文档-公众号-网页授权</a></p><p><a href="https://www.easywechat.com/">easywechat</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos 使用VM虚拟机安装，显示无法ping通报Name or service not known错误</title>
      <link href="/2023/02/01/2022-02-10-Centos-%E4%BD%BF%E7%94%A8VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%EF%BC%8C%E6%98%BE%E7%A4%BA%E6%97%A0%E6%B3%95ping%E9%80%9A%E6%8A%A5Name-or-service-not-known%E9%94%99%E8%AF%AF/"/>
      <url>/2023/02/01/2022-02-10-Centos-%E4%BD%BF%E7%94%A8VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%EF%BC%8C%E6%98%BE%E7%A4%BA%E6%97%A0%E6%B3%95ping%E9%80%9A%E6%8A%A5Name-or-service-not-known%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>win10 专业版</li><li>VMware 14.1.2</li><li>Centos 7-Minimal-1708</li></ul><h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><ul><li>VMware 14.1.2没有以管理员方式运行</li><li>Centos 未配置网络</li></ul><h3 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h3><h4 id="以管理员方式运行VMware"><a href="#以管理员方式运行VMware" class="headerlink" title="以管理员方式运行VMware"></a>以管理员方式运行VMware</h4><blockquote><p>注：不以管理员运行会出现：需要具备管理员特权才能修改网络配置的警告</p></blockquote><p><img src="/images/centos_vm_1.png" alt=""></p><h4 id="配置VMware虚拟网络"><a href="#配置VMware虚拟网络" class="headerlink" title="配置VMware虚拟网络"></a>配置VMware虚拟网络</h4><p><img src="/images/centos_vm_2.png" alt=""></p><blockquote><p>这里桥接的网卡选择可以在网络和共享中心-&gt;网络连接 中找到</p></blockquote><p><img src="/images/centos_vm_3.png" alt=""></p><h4 id="更改Centos-网络配置"><a href="#更改Centos-网络配置" class="headerlink" title="更改Centos 网络配置"></a>更改Centos 网络配置</h4><p>编辑Centos网络配置</p><p><code>vi /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>以下参数设置你们按自己的局域网络IP设置。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ONBOOT=”yes” #网络设备开机启动</span><br><span class="line">IPADDR=”192.168.50.100” #IP</span><br><span class="line">NETMASK=”255.255.255.0” #子网掩码</span><br><span class="line">GATEWAY=”192.168.50.1” #网关IP</span><br></pre></td></tr></table></figure><h4 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h4><p><code>$ service network restart</code></p><h4 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h4><p><code>ping www.baidu.com</code></p><p><img src="/images/centos_vm_4.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker中mongo副本集一直Restarting处理过程</title>
      <link href="/2023/02/01/2022-02-10-Docker%E4%B8%ADmongo%E5%89%AF%E6%9C%AC%E9%9B%86%E4%B8%80%E7%9B%B4Restarting%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/02/01/2022-02-10-Docker%E4%B8%ADmongo%E5%89%AF%E6%9C%AC%E9%9B%86%E4%B8%80%E7%9B%B4Restarting%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>docker-composedocker-compose version 1.24.1, build 4667896b</li><li>dockerDocker version 19.03.11, build 42e35e61f3</li><li>mongov4.2.7</li><li>centosCentOS Linux release 7.8.2003 (Core)</li></ul><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>docker mongo副本集无法启动（如下）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  axinblog docker-compose ps   </span><br><span class="line">Name                      Command                 State                       Ports</span><br><span class="line">-------------------------------------------------------------------------------------------------------------</span><br><span class="line">...                                      </span><br><span class="line">mongodb_primary     bash -c chmod 400 /data/mo ...   Restarting                                       </span><br><span class="line">mongodb_replica_1   bash -c chmod 400 /data/mo ...   Up           0.0.0.0:27018-&gt;27017/tcp            </span><br><span class="line">mongodb_replica_2   bash -c chmod 400 /data/mo ...   Up           0.0.0.0:27019-&gt;27017/tcp            </span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><p>docker ps 先找到出问题的容器ID</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  containers docker ps</span><br><span class="line">CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS                           PORTS                                      NAMES</span><br><span class="line">4736e67fbd2b        mongodb_primary   &quot;bash -c &#x27;chmod 400 …&quot;   4 months ago        Restarting (14) 34 seconds ago                                              mongodb_primary</span><br></pre></td></tr></table></figure><p>方式1：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line">vim 4736e67fbd2bf513a70c115312f2bc208a1767fb4da9a23937227ddbc5bff1c0-json.log</span><br></pre></td></tr></table></figure><p>方式2:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker logs -f -t --since=&quot;日期&quot; --tail=日志记录数 容器ID</span><br><span class="line"></span><br><span class="line">docker logs -f -t --since=&quot;2020-11-13&quot; --tail=1000 4736e67fbd2b</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2020-11-13T09:01:16.191606239Z 2020-11-13T09:01:16.191+0000 I  CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols &#x27;none&#x27;</span><br><span class="line">2020-11-13T09:01:16.196272875Z 2020-11-13T09:01:16.196+0000 W  ASIO     [main] No TransportLayer configured during NetworkInterface startup</span><br><span class="line">2020-11-13T09:01:16.287181977Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=4736e67fbd2b</span><br><span class="line">2020-11-13T09:01:16.287216770Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] db version v4.2.7</span><br><span class="line">2020-11-13T09:01:16.287221031Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] git version: 51d9fe12b5d19720e72dcd7db0f2f17dd9a19212</span><br><span class="line">2020-11-13T09:01:16.287224322Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.1  11 Sep 2018</span><br><span class="line">2020-11-13T09:01:16.287249167Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] allocator: tcmalloc</span><br><span class="line">2020-11-13T09:01:16.287253400Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] modules: none</span><br><span class="line">2020-11-13T09:01:16.287256698Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] build environment:</span><br><span class="line">2020-11-13T09:01:16.287259765Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten]     distmod: ubuntu1804</span><br><span class="line">2020-11-13T09:01:16.287262814Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten]     distarch: x86_64</span><br><span class="line">2020-11-13T09:01:16.287265993Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten]     target_arch: x86_64</span><br><span class="line">2020-11-13T09:01:16.287268955Z 2020-11-13T09:01:16.286+0000 I  CONTROL  [initandlisten] options: &#123; net: &#123; bindIp: &quot;*&quot; &#125;, replication: &#123; replSet: &quot;mongos&quot; &#125;, security: &#123; authorization: &quot;enabled&quot;, keyFile: &quot;/data/mongodb.key&quot; &#125; &#125;</span><br><span class="line">2020-11-13T09:01:16.287274257Z 2020-11-13T09:01:16.286+0000 E  NETWORK  [initandlisten] Failed to unlink socket file /tmp/mongodb-27017.sock Operation not permitted</span><br><span class="line">2020-11-13T09:01:16.287290311Z 2020-11-13T09:01:16.286+0000 F  -        [initandlisten] Fatal Assertion 40486 at src/mongo/transport/transport_layer_asio.cpp 684</span><br><span class="line">2020-11-13T09:01:16.287293285Z 2020-11-13T09:01:16.286+0000 F  -        [initandlisten] </span><br><span class="line">2020-11-13T09:01:16.287295907Z </span><br><span class="line">2020-11-13T09:01:16.287298537Z ***aborting after fassert() failure</span><br></pre></td></tr></table></figure><h4 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h4><p>Failed to unlink socket file /tmp/mongodb-27017.sock Operation not permitted 这问题看起来是没有权限的问题谷歌一下</p><h4 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h4><h5 id="方法一：映射tmp-使mongodb-27017文件拥有相应权限"><a href="#方法一：映射tmp-使mongodb-27017文件拥有相应权限" class="headerlink" title="方法一：映射tmp 使mongodb-27017文件拥有相应权限"></a>方法一：映射tmp 使mongodb-27017文件拥有相应权限</h5><p>修改docker-compose.yml，增加 ./db/mongodb/primary/tmp:/tmp卷映射</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">vim docker-compose.yml</span></span><br><span class="line">mongodb_primary:</span><br><span class="line"> container_name: mongodb_primary</span><br><span class="line"> build:</span><br><span class="line">   context: ./db/mongodb/docker/</span><br><span class="line"> ports:</span><br><span class="line">   - &quot;27017:27017&quot;</span><br><span class="line"> restart: always</span><br><span class="line"> environment:</span><br><span class="line">   MONGO_INITDB_ROOT_USERNAME: $&#123;MONGO_INITDB_ROOT_USERNAME&#125;</span><br><span class="line">   MONGO_INITDB_ROOT_PASSWORD: $&#123;MONGO_INITDB_ROOT_PASSWORD&#125;</span><br><span class="line">   MONGO_DATA_DIR: $&#123;MONGO_DATA_DIR&#125;</span><br><span class="line">   MONGO_LOG_DIR: $&#123;MONGO_LOG_DIR&#125;</span><br><span class="line"> volumes:</span><br><span class="line">   - ./db/mongodb/primary/data:/data/db</span><br><span class="line">   - ./db/mongodb/primary/example_db:/data/example_db</span><br><span class="line">   - ./db/mongodb/primary/logs:/data/logs</span><br><span class="line">   - ./db/mongodb/mongodb.key:/data/mongodb.key</span><br><span class="line">   - ./db/mongodb/primary/tmp:/tmp</span><br></pre></td></tr></table></figure><p>重新build启动容器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ docker-compose stop</span><br><span class="line">// 注：停止正在运行的容器，可以通过docker-compose start 再次启动</span><br><span class="line">$ docker-compose down --volumes</span><br><span class="line">// 注：–volumes，删除已经在compose文件中定义的和匿名的附在容器上的数据卷</span><br><span class="line">docker-compose build --no-cache</span><br><span class="line">// 注：–no-cache 构建镜像过程中不使用缓存</span><br><span class="line"></span><br><span class="line">到你的tmp目录中查看是否有mongodb-27017.sock，有表示成功</span><br><span class="line">➜  tmp ll</span><br><span class="line">total 0</span><br><span class="line">srwx------ 1 polkitd ssh_keys 0 Nov 13 17:43 mongodb-27017.sock</span><br></pre></td></tr></table></figure><p>如果发现重新build没有目录生成一般都是权限不足</p><p>首先进入容器查看mongo用的权限是什么</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">docker-compose <span class="built_in">exec</span> mongodb_primary bash</span></span><br><span class="line">root@f52e93626d9f:/# cat /etc/pa</span><br><span class="line">···</span><br><span class="line">mongodb:x:999:999::/home/mongodb:/bin/sh</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>设置你本地目录权限与mongo一致就行了</p><p><code>chown 999:999 tmp</code></p><h5 id="方法二：删除mongodb-27017-sock，重启mongo服务"><a href="#方法二：删除mongodb-27017-sock，重启mongo服务" class="headerlink" title="方法二：删除mongodb-27017.sock，重启mongo服务"></a>方法二：删除mongodb-27017.sock，重启mongo服务</h5><p><code>sudo rm /tmp/mongodb-27017.sock</code></p><p>因为我这边是进不了容器的，所以无法使用</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/JHC23/article/details/81099281">docker 下的mongodb 日志查看</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用操作</title>
      <link href="/2023/02/01/2022-02-10-Git-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/02/01/2022-02-10-Git-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="取消文件跟踪"><a href="#取消文件跟踪" class="headerlink" title="取消文件跟踪"></a>取消文件跟踪</h3><h4 id="对所有文件都取消跟踪"><a href="#对所有文件都取消跟踪" class="headerlink" title="对所有文件都取消跟踪"></a>对所有文件都取消跟踪</h4><ul><li>不删除本地文件：git rm -r -cached</li><li>删除本地文件：git rm -r —f</li></ul><h4 id="对指定文件取消跟踪"><a href="#对指定文件取消跟踪" class="headerlink" title="对指定文件取消跟踪"></a>对指定文件取消跟踪</h4><p>删除.env文件跟踪，保留文件</p><p><code>git rm --cached .env</code></p><p>删除.env文件跟踪，并删除文件</p><p><code>git rm --f .env</code></p><blockquote><p>注意：如果创建.gitignore文件就已经push过项目，那么加入新的规则也不会起作用<br>.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。</p></blockquote><p>那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rm -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#x27;update .gitignore&#x27;</span><br></pre></td></tr></table></figure><blockquote><p>不要误解了 .gitignore 文件的用途，该文件只能作用于 Untracked Files，也就是那些从来没有被 Git 记录过的文件（自添加以后，从未 add 及 commit 过的文件）。<br>如果文件曾经被 Git 记录过，那么.gitignore 就对它们完全无效</p></blockquote><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>取消跟踪目录</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">git <span class="built_in">rm</span> -r --cached 目录名/</span></span><br><span class="line">rm &#x27;public/目录名/api_data.js&#x27;</span><br><span class="line">rm &#x27;public/目录名/api_data.json&#x27;</span><br><span class="line">rm &#x27;public/目录名/api_project.js&#x27;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.cnblogs.com/zhuchenglin/p/7128383.html">git取消文件跟踪</a></p><p><a href="https://www.cnblogs.com/kevingrace/p/5690241.html">Git忽略提交规则 - .gitignore配置运维总结</a></p><p><a href="https://blog.csdn.net/pengchaozhang111/article/details/51438881">Git——跟踪或取消跟踪文件</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Go 打包生成二进制文件</title>
      <link href="/2023/02/01/2022-02-10-Go-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/"/>
      <url>/2023/02/01/2022-02-10-Go-%E6%89%93%E5%8C%85%E7%94%9F%E6%88%90%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>开发环境：mac</li><li>go 1.16.2</li><li>生产环境：Ubuntu 20.04.1 LTS</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>go build</p><p><code>$ go build [-o output] [-i] [build flags] [packages]</code></p><blockquote><p>-o 参数可以指定输出目录与打包后的文件名，例：$ go build -o gorse main.go</p></blockquote><p>进入main.go文件目录进行</p><p><code>CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</code></p><p>等待一会，可以看到目录中生成了main二进制文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">axin @ AxindeMacBook-Pro <span class="keyword">in</span> ~/workspace/goProject/gorse/cmd/gorse-master on git:release-0.2 x [11:54:38]</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</span></span><br></pre></td></tr></table></figure><p>Windows平台打包命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set CGO_ENABLED=0</span><br><span class="line">set GOOS=linux</span><br><span class="line">set GOARCH=amd64</span><br><span class="line">go build</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>CGO_ENABLED 表示不使用cgo</li><li>GOOS 表示目标平台系统（Windows，linux，darwin「mac os」等等）</li><li>GOARCH 表示目标系统架构（arm arm64 386 amd64 等等）</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>如果一个目录有多个go文件，打包命令使用</p><p><code>go build .</code></p><p><code>go build main.go</code> 它只编译 <code>main.go</code></p><p>执行程序</p><p><code>go run main.go</code></p><p>一个文件夹下有多个go程序，每个都含有main函数</p><p><code>go run 指定的go程序名</code></p><p><code>go build 文件名</code></p><h3 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h3><p>上传二进制文件到服务器 &amp; 赋予可执行权限</p><p><code>chmod +x ./main 或 chmod 773 ./main</code></p><p>运行 <code>./main</code> 或 <code>nohup ./main &gt;runing.log 2&gt;&amp;1 &amp;</code></p><p><code>2&gt;&amp;1</code> 解释：</p><p>将标准错误 2 重定向到标准输出 &amp;1 ，标准输出 &amp;1 再被重定向输入到 runing.log 文件中。</p><p>0 – stdin (standard input，标准输入)<br>1 – stdout (standard output，标准输出)<br>2 – stderr (standard error，标准错误输出)</p><p>&amp; 解释：</p><p>后台运行</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 链式调用太长如何折行</title>
      <link href="/2023/02/01/2022-02-10-Golang-%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E5%A4%AA%E9%95%BF%E5%A6%82%E4%BD%95%E6%8A%98%E8%A1%8C/"/>
      <url>/2023/02/01/2022-02-10-Golang-%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E5%A4%AA%E9%95%BF%E5%A6%82%E4%BD%95%E6%8A%98%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>写链式时会有以下情况，可是强迫症犯了，想多行显示方便阅读。</p><p>示例：</p><p><code>s.dao.Mgo.SetDatabase(&quot;****&quot;).SetCollection(&quot;***&quot;).InsertOne(bson.M&#123;&quot;name&quot;: &quot;axin&quot;, &quot;remark&quot;: &quot;嘿嘿嘿。。。&quot;&#125;)</code></p><p>改为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">res := s.dao.Mgo.SetDatabase(&quot;dapeimall_prod&quot;).</span><br><span class="line">    SetCollection(&quot;numbers&quot;).</span><br><span class="line">    InsertOne(bson.M&#123;&quot;name&quot;: &quot;axin&quot;, &quot;value&quot;: &quot;嘿嘿嘿&quot;&#125;)</span><br><span class="line"></span><br><span class="line">fmt.Println(res)</span><br></pre></td></tr></table></figure><p>就可以了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA之解决各种奇葩问题</title>
      <link href="/2023/02/01/2022-02-10-IntelliJ-IDEA%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%90%84%E7%A7%8D%E5%A5%87%E8%91%A9%E9%97%AE%E9%A2%98/"/>
      <url>/2023/02/01/2022-02-10-IntelliJ-IDEA%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%90%84%E7%A7%8D%E5%A5%87%E8%91%A9%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Mac</li><li>Gradle</li><li>Idea 2019.2.4 </li></ul><h4 id="idea包名明明存在，却出现红色报错"><a href="#idea包名明明存在，却出现红色报错" class="headerlink" title="idea包名明明存在，却出现红色报错"></a>idea包名明明存在，却出现红色报错</h4><p>解决办法</p><blockquote><p>删除项目目录的.idea文件，重启项目</p></blockquote><h4 id="idea运行时报错提示”找不到或无法加载主类”"><a href="#idea运行时报错提示”找不到或无法加载主类”" class="headerlink" title="idea运行时报错提示”找不到或无法加载主类”"></a>idea运行时报错提示”找不到或无法加载主类”</h4><p>解决办法</p><blockquote><p>file-&gt;invalidate Cache/restart-&gt;Invalidate and Restart</p></blockquote><h4 id="idea一直Indexing"><a href="#idea一直Indexing" class="headerlink" title="idea一直Indexing"></a>idea一直Indexing</h4><p>解决办法</p><blockquote><p>file-&gt;invalidate Cache/restart-&gt;Invalidate and Restart</p></blockquote><h4 id="idea找不到类文件"><a href="#idea找不到类文件" class="headerlink" title="idea找不到类文件"></a>idea找不到类文件</h4><p>解决办法</p><blockquote><p>Reimport All Gradle Projects<br>或<br>终端中输入gradle clean(命令说明：清理所有中间编译结果)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> IntelliJ IDEA </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin实现Java静态方法</title>
      <link href="/2023/02/01/2022-02-10-Kotlin%E5%AE%9E%E7%8E%B0Java%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/01/2022-02-10-Kotlin%E5%AE%9E%E7%8E%B0Java%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="伪实现：companion-object"><a href="#伪实现：companion-object" class="headerlink" title="伪实现：companion object"></a>伪实现：companion object</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">doStaticAction</span><span class="params">()</span></span> &#123;</span><br><span class="line">            println(<span class="string">&quot;do doStaticAction&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">doAction</span><span class="params">()</span></span> &#123;</span><br><span class="line">        println(<span class="string">&quot;do doAction&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类中定义伴生类：调用Util.doStaticAction()</p><h3 id="注解实现-JvmStatic"><a href="#注解实现-JvmStatic" class="headerlink" title="注解实现@JvmStatic"></a>注解实现@JvmStatic</h3><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Util</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@JvmStatic</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">doStaticAction</span><span class="params">()</span></span> &#123;</span><br><span class="line">            println(<span class="string">&quot;do doStaticAction&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">doAction</span><span class="params">()</span></span> &#123;</span><br><span class="line">        println(<span class="string">&quot;do doAction&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@JvmStatic 只能加在单例类与companion object中</p><h3 id="顶层方法"><a href="#顶层方法" class="headerlink" title="顶层方法"></a>顶层方法</h3><p>Kotlin 编译器会将所有的顶层方法全部编译成静态方法</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">do</span><span class="params">()</span></span> &#123;</span><br><span class="line">  println(<span class="string">&quot;这是顶层方法&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Java中如何调用</p><p>因为Java中没有顶层方法该概念，所以Java中调用Kotlin中顶层方法方式如下</p><p>文件名.方法名</p><p><code>HelperKt.do()</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode Go 之解题</title>
      <link href="/2023/02/01/2022-02-10-LeetCode-Go-%E4%B9%8B%E8%A7%A3%E9%A2%98/"/>
      <url>/2023/02/01/2022-02-10-LeetCode-Go-%E4%B9%8B%E8%A7%A3%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h3><blockquote><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p></blockquote><p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><p>示例:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class="line">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure></p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><blockquote><p>使用hash表存储目标值与数组元素之差（key）和该数组元素的索引（value），当剩余的素组中有元素是hash表中的，则找到了一组符合题目要求的解。</p></blockquote><h4 id="具体思路"><a href="#具体思路" class="headerlink" title="具体思路"></a>具体思路</h4><ol><li>开始循环给定数组nums，获得其中元素的索引index、值num；</li><li>在Hash表中查找是否有值为num的key，若有则找到题解，若没有执行下一步</li><li>将key=target-num,value=index存入Hash表</li><li>进入下一次循环</li></ol><p>注意：将第2步放在第三步前是为了满足“你不能重复利用这个数组中同样的元素”这个条件</p><h4 id="步骤实现"><a href="#步骤实现" class="headerlink" title="步骤实现"></a>步骤实现</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">nums := []int&#123;2, 7, 11, 15&#125;</span><br><span class="line">target := 9</span><br><span class="line">fmt.Println(sum(nums, target))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func sum(nums []int, target int) []int &#123;</span><br><span class="line">hM := make(map[int]int, len(nums))</span><br><span class="line">for index, num := range nums &#123;</span><br><span class="line">if value, ok := hM[num]; ok &#123;</span><br><span class="line">nums = nums[:2]</span><br><span class="line">nums[0] = value</span><br><span class="line">nums[1] = index</span><br><span class="line">return nums</span><br><span class="line">&#125;</span><br><span class="line">hM[target-num] = index</span><br><span class="line">&#125;</span><br><span class="line">return nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Lnmp 多版本PHP切换</title>
      <link href="/2023/02/01/2022-02-10-Lnmp-%E5%A4%9A%E7%89%88%E6%9C%ACPHP%E5%88%87%E6%8D%A2/"/>
      <url>/2023/02/01/2022-02-10-Lnmp-%E5%A4%9A%E7%89%88%E6%9C%ACPHP%E5%88%87%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos</li><li>Lnmp 1.7</li><li>PHP7.1.33切换到PHP7.4.12</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Lnmp-安装PHP7-4"><a href="#Lnmp-安装PHP7-4" class="headerlink" title="Lnmp 安装PHP7.4"></a>Lnmp 安装PHP7.4</h4><p>进入lnmp1.7目录执行</p><p><code>sudo ./install.sh mphp</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|          LNMP V1.7 for CentOS Linux Server, Written by Licess          |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|        A tool to auto-compile &amp; install LNMP/LNMPA/LAMP on Linux       |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|           For more information please visit https://lnmp.org           |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">===========================</span><br><span class="line">You have 9 options for your PHP install.</span><br><span class="line">1: Install PHP 5.2.17</span><br><span class="line">2: Install PHP 5.3.29</span><br><span class="line">3: Install PHP 5.4.45</span><br><span class="line">4: Install PHP 5.5.38</span><br><span class="line">5: Install PHP 5.6.40</span><br><span class="line">6: Install PHP 7.0.33</span><br><span class="line">7: Install PHP 7.1.33</span><br><span class="line">8: Install PHP 7.2.34</span><br><span class="line">9: Install PHP 7.3.23</span><br><span class="line">10: Install PHP 7.4.12</span><br><span class="line">Enter your choice (1, 2, 3, 4, 5, 6, 7, 8, 9 or 10): 10</span><br><span class="line">You will install PHP 7.4.12</span><br><span class="line"></span><br><span class="line">Press any key to install...or Press Ctrl+c to cancel</span><br></pre></td></tr></table></figure><p>我这里选择PHP7.4.12输入：10，回车；</p><p>等待10分钟左右结果如下，升级完成</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">+-------------------------------------------+</span><br><span class="line">|    Manager for LNMP, Written by Licess    |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|              https://lnmp.org             |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">Starting LNMP...</span><br><span class="line">Starting nginx...  done</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">Starting php-fpm  done</span><br><span class="line">Starting php-fpm  done</span><br><span class="line">===========================================</span><br><span class="line">You have successfully install php-7.4.12 </span><br><span class="line">===========================================</span><br></pre></td></tr></table></figure><p>执行</p><p><code>ps -ef | grep php-fpm</code></p><p>可以看到多版本 PHP 运行情况</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# ps -ef | grep php-fpm</span><br><span class="line">root      818812       1  0 00:16 ?        00:00:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)</span><br><span class="line">root      818845       1  0 00:16 ?        00:00:00 php-fpm: master process (/usr/local/php7.4/etc/php-fpm.conf)</span><br></pre></td></tr></table></figure><h4 id="修改vhoust"><a href="#修改vhoust" class="headerlink" title="修改vhoust"></a>修改vhoust</h4><p>增加以下内容</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">include enable-php-pathinfo.conf;</span></span><br><span class="line">include enable-php7.4.conf;</span><br></pre></td></tr></table></figure><p>检查项目是否已经使用7.4PHP</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>更改环境变量的PHP</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/bin</span><br><span class="line">sudo rm -rf ./php</span><br><span class="line">cd /usr/bin</span><br><span class="line">sudo ln -s /usr/local/php7.4/bin/php /usr/bin/php</span><br></pre></td></tr></table></figure><p>如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# ll /usr/bin/ | grep php</span><br><span class="line">lrwxrwxrwx  1 root root          23 Apr 11 13:03 pear -&gt; /usr/local/php/bin/pear</span><br><span class="line">lrwxrwxrwx  1 root root          23 Apr 11 13:03 pecl -&gt; /usr/local/php/bin/pecl</span><br><span class="line">lrwxrwxrwx  1 root root          22 Apr 11 13:03 php -&gt; /usr/local/php/bin/php</span><br><span class="line">lrwxrwxrwx  1 root root          27 Apr 11 13:03 php-fpm -&gt; /usr/local/php/sbin/php-fpm</span><br><span class="line">lrwxrwxrwx  1 root root          25 Apr 11 13:03 phpize -&gt; /usr/local/php/bin/phpize</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# cd /usr/bin/</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ bin]# rm -rf ./php</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ bin]# ll /usr/bin/ | grep php</span><br><span class="line">lrwxrwxrwx  1 root root          23 Apr 11 13:03 pear -&gt; /usr/local/php/bin/pear</span><br><span class="line">lrwxrwxrwx  1 root root          23 Apr 11 13:03 pecl -&gt; /usr/local/php/bin/pecl</span><br><span class="line">lrwxrwxrwx  1 root root          27 Apr 11 13:03 php-fpm -&gt; /usr/local/php/sbin/php-fpm</span><br><span class="line">lrwxrwxrwx  1 root root          25 Apr 11 13:03 phpize -&gt; /usr/local/php/bin/phpize</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ bin]# sudo ln -s /usr/local/php7.4/bin/php /usr/bin/php </span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ bin]# ll /usr/bin/ | grep php                          </span><br><span class="line">lrwxrwxrwx  1 root root          23 Apr 11 13:03 pear -&gt; /usr/local/php/bin/pear</span><br><span class="line">lrwxrwxrwx  1 root root          23 Apr 11 13:03 pecl -&gt; /usr/local/php/bin/pecl</span><br><span class="line">lrwxrwxrwx  1 root root          25 Apr 23 00:38 php -&gt; /usr/local/php7.4/bin/php</span><br><span class="line">lrwxrwxrwx  1 root root          27 Apr 11 13:03 php-fpm -&gt; /usr/local/php/sbin/php-fpm</span><br><span class="line">lrwxrwxrwx  1 root root          25 Apr 11 13:03 phpize -&gt; /usr/local/php/bin/phpize</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ bin]# php -v</span><br><span class="line">PHP 7.4.12 (cli) (built: Apr 22 2021 23:57:38) ( NTS )</span><br><span class="line">Copyright (c) The PHP Group</span><br><span class="line">Zend Engine v3.4.0, Copyright (c) Zend Technologies</span><br></pre></td></tr></table></figure><p>错误提示：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">- Installing myclabs/php-enum (1.8.0): Extracting archive</span><br><span class="line">   The Process class relies on proc_open, which is not available on your PHP installation.</span><br><span class="line">   The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems)</span><br><span class="line">   Unzip with unzip command failed, falling back to ZipArchive class</span><br><span class="line"> - Installing symfony/deprecation-contracts (v2.4.0): Extracting archive</span><br><span class="line">   The Process class relies on proc_open, which is not available on your PHP installation.</span><br><span class="line">   The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems)</span><br><span class="line">   Unzip with unzip command failed, falling back to ZipArchive class</span><br><span class="line"> - Upgrading symfony/http-foundation (v4.4.20 =&gt; v5.2.4): Extracting archive    The Process class relies on proc_open, which is not available on your PHP installation.</span><br><span class="line">   The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems)</span><br><span class="line">   Unzip with unzip command failed, falling back to ZipArchive class</span><br><span class="line"></span><br><span class="line"> - Upgrading symfony/psr-http-message-bridge (v1.3.0 =&gt; v2.1.0): Extracting archive    The Process class relies on proc_open, which is not available on your PHP installation.</span><br><span class="line">   The archive may contain identical file names with different capitalization (which fails on case insensitive filesystems)</span><br><span class="line">   Unzip with unzip command failed, falling back to ZipArchive class</span><br><span class="line">   ...          </span><br><span class="line"> [ErrorException]          </span><br><span class="line"> Undefined index: process  </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">; This directive allows you to disable certain functions for security reasons.</span><br><span class="line">; It receives a comma-delimited list of function names.</span><br><span class="line">; http://php.net/disable-functions</span><br><span class="line">disable_functions = passthru,exec,system,chroot,chgrp,chown,shell_exec,proc_open,proc_get_status,popen,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ pig]# composer install                      </span><br><span class="line"></span><br><span class="line">                                                            </span><br><span class="line">  [ErrorException]                                          </span><br><span class="line">  proc_get_status() has been disabled for security reasons  </span><br><span class="line">                                                            </span><br><span class="line"></span><br><span class="line">PHP Fatal error:  Uncaught ErrorException: proc_get_status() has been disabled for security reasons in phar:///usr/local/bin/composer/vendor/symfony/process/Process.php:1279</span><br><span class="line">Stack trace:</span><br><span class="line"><span class="meta">#</span><span class="language-bash">0 [internal <span class="keyword">function</span>]: Composer\Util\ErrorHandler::handle(2, <span class="string">&#x27;proc_get_status...&#x27;</span>, <span class="string">&#x27;phar:///usr/loc...&#x27;</span>, 1279, Array)</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">1 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(1279): proc_get_status(Resource <span class="built_in">id</span> <span class="comment">#337)</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(700): Symfony\Component\Process\Process-&gt;updateStatus(<span class="literal">false</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">3 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(752): Symfony\Component\Process\Process-&gt;isRunning()</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">4 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(167): Symfony\Component\Process\Process-&gt;stop(0)</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">5 [internal <span class="keyword">function</span>]: Symfony\Component\Process\Process-&gt;__destruct()</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">6 &#123;main&#125;</span></span><br><span class="line">  thrown in phar:///usr/local/bin/composer/vendor/symfony/process/Process.php on line 1279</span><br><span class="line"></span><br><span class="line">Fatal error: Uncaught ErrorException: proc_get_status() has been disabled for security reasons in phar:///usr/local/bin/composer/vendor/symfony/process/Process.php:1279</span><br><span class="line">Stack trace:</span><br><span class="line"><span class="meta">#</span><span class="language-bash">0 [internal <span class="keyword">function</span>]: Composer\Util\ErrorHandler::handle(2, <span class="string">&#x27;proc_get_status...&#x27;</span>, <span class="string">&#x27;phar:///usr/loc...&#x27;</span>, 1279, Array)</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">1 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(1279): proc_get_status(Resource <span class="built_in">id</span> <span class="comment">#337)</span></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">2 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(700): Symfony\Component\Process\Process-&gt;updateStatus(<span class="literal">false</span>)</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">3 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(752): Symfony\Component\Process\Process-&gt;isRunning()</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">4 phar:///usr/local/bin/composer/vendor/symfony/process/Process.php(167): Symfony\Component\Process\Process-&gt;stop(0)</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">5 [internal <span class="keyword">function</span>]: Symfony\Component\Process\Process-&gt;__destruct()</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">6 &#123;main&#125;</span></span><br><span class="line">  thrown in phar:///usr/local/bin/composer/vendor/symfony/process/Process.php on line 1279</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 中homebrew-core的.git文件过大问题解决</title>
      <link href="/2023/02/01/2022-02-10-Mac-%E4%B8%ADhomebrew-core%E7%9A%84-git%E6%96%87%E4%BB%B6%E8%BF%87%E5%A4%A7%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>/2023/02/01/2022-02-10-Mac-%E4%B8%ADhomebrew-core%E7%9A%84-git%E6%96%87%E4%BB%B6%E8%BF%87%E5%A4%A7%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h3 id="问题还原"><a href="#问题还原" class="headerlink" title="问题还原"></a>问题还原</h3><ul><li>执行过brew update后结果以下目录占用20G</li></ul><p><code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core</code></p><ul><li>或执行git 会提示以下信息</li></ul><p><code>warning: There are too many unreachable loose objects; run &#39;git prune&#39; to remove them.</code></p><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>在相应目录下执行</p><p><code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core</code></p><p><code>git gc --prune=now</code></p><p>原因：本地的缓冲区占用太大，清理优化该git项目</p><p>清理完成后如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜  homebrew git:(stable) du -sh ./homebrew-core</span><br><span class="line">78M./homebrew-core</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 修改密码</title>
      <link href="/2023/02/01/2022-02-10-Mysql-%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/"/>
      <url>/2023/02/01/2022-02-10-Mysql-%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="使用Navicat-Premium-更改"><a href="#使用Navicat-Premium-更改" class="headerlink" title="使用Navicat Premium 更改"></a>使用Navicat Premium 更改</h4><p>连接需要更改的库，点击用户</p><p><img src="/images/mysql_change_password_1.png" alt=""></p><p>选择要更改的用户名，点击编辑或双击</p><p><img src="/images/mysql_change_password_2.png" alt=""></p><p>出现如图页面，输入新密码保存即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 更新Null值出现的事务失败的情况</title>
      <link href="/2023/02/01/2022-02-10-Mysql-%E6%9B%B4%E6%96%B0Null%E5%80%BC%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%83%85%E5%86%B5/"/>
      <url>/2023/02/01/2022-02-10-Mysql-%E6%9B%B4%E6%96%B0Null%E5%80%BC%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>新接一个老项目，数据库设计中字段没有设置默认值</p><p>事务中出现了失败情况。debug 看到public_task_count字段为null 导致出现更新影响条数为0的情况。</p><p>解决办法</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `cd_member`  </span><br><span class="line"><span class="keyword">SET</span> `public_task_count` <span class="operator">=</span> `public_task_count` <span class="operator">+</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">WHERE</span>  `id` <span class="operator">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `cd_member`  </span><br><span class="line"><span class="keyword">SET</span> `public_task_count` <span class="operator">=</span> IFNULL(`public_task_count`,<span class="number">0</span>) <span class="operator">+</span> <span class="number">1</span>  </span><br><span class="line"><span class="keyword">WHERE</span>  `id` <span class="operator">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RocketMQ 安装教程</title>
      <link href="/2023/02/01/2022-02-10-RocketMQ-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2023/02/01/2022-02-10-RocketMQ-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="一键部署-docker-compose"><a href="#一键部署-docker-compose" class="headerlink" title="一键部署 docker-compose"></a>一键部署 docker-compose</h4><p>案例 版本 4.7.0</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone  https://github.com/foxiswho/docker-rocketmq.git</span><br><span class="line"></span><br><span class="line">cd docker-rocketmq</span><br><span class="line"></span><br><span class="line">cd rmq</span><br><span class="line"></span><br><span class="line">chmod +x  start.sh</span><br><span class="line"></span><br><span class="line">./start.sh</span><br></pre></td></tr></table></figure><p>访问浏览器</p><p><code>localhost:8180</code></p><blockquote><p>注意 如果你的微服务或者项目在开发的时候没有放入docker中或者与rocketmq容器不能直接用IP访问， 那么请把broker.conf中的 #brokerIP1=192.168.0.253 前面#号去掉，并且把后面的IP地址改成你的rocketmq容器宿主机IP地址, 否则报 com.alibaba.rocketmq.remoting.exception.RemotingConnectException: connect to 172.0.0.120:10909 failed 配置文件 在 rmq/rmq/brokerconf 目录下</p></blockquote><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="因Centos-7-使用的是firewalld所以要开放相应的端口"><a href="#因Centos-7-使用的是firewalld所以要开放相应的端口" class="headerlink" title="因Centos 7 使用的是firewalld所以要开放相应的端口"></a>因Centos 7 使用的是firewalld所以要开放相应的端口</h4><p>参考：RocketMQ 介绍与安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">根据docker-compose中的端口映射开放相应端口</span><br><span class="line">firewall-cmd --zone=public --add-port=9876/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=10909/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=10911/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=10912/tcp --permanent</span><br></pre></td></tr></table></figure><p>更新防火墙规则使之生效</p><p><code>firewall-cmd --reload</code></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://github.com/foxiswho/docker-rocketmq">foxiswho/docker-rocketmq</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP SQL查询骚操作</title>
      <link href="/2023/02/01/2022-02-10-ThinkPHP-SQL%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/02/01/2022-02-10-ThinkPHP-SQL%E9%AA%9A%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="多个字段累加-amp-更新多个字段"><a href="#多个字段累加-amp-更新多个字段" class="headerlink" title="多个字段累加 &amp; 更新多个字段"></a>多个字段累加 &amp; 更新多个字段</h3><h4 id="inc"><a href="#inc" class="headerlink" title="inc"></a>inc</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$saveRes</span> = <span class="title class_">Member</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$memberId</span>)</span><br><span class="line">                    -&gt;<span class="title function_ invoke__">inc</span>(<span class="string">&#x27;money&#x27;</span>, <span class="variable">$changeAmount</span>)</span><br><span class="line">                    -&gt;<span class="title function_ invoke__">inc</span>(<span class="string">&#x27;point&#x27;</span>, <span class="variable">$changeNum</span>)</span><br><span class="line">                    -&gt;<span class="title function_ invoke__">data</span>([<span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;update_time&#x27;</span> =&gt; <span class="title function_ invoke__">time</span>()])</span><br><span class="line">                    -&gt;<span class="title function_ invoke__">update</span>();</span><br></pre></td></tr></table></figure><h4 id="原生"><a href="#原生" class="headerlink" title="原生"></a>原生</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&#x27;UPDATE `cd_member`</span></span><br><span class="line"><span class="string">SET `point`=`point` + `add_point`,</span></span><br><span class="line"><span class="string">    `total_point`=`total_point` + `add_point`,</span></span><br><span class="line"><span class="string">    `week_point`=`week_point` + `add_point`,</span></span><br><span class="line"><span class="string">    `add_point`=0</span></span><br><span class="line"><span class="string">WHERE id = &#x27;</span> . <span class="variable">$memberId</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title class_">Db</span>::<span class="title function_ invoke__">execute</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><h4 id="update"><a href="#update" class="headerlink" title="update"></a>update</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$updateData</span> = [</span><br><span class="line">    <span class="string">&#x27;total_point&#x27;</span> =&gt; <span class="title class_">Db</span>::<span class="title function_ invoke__">raw</span>(<span class="string">&#x27;total_point+add_point&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;week_point&#x27;</span>  =&gt; <span class="title class_">Db</span>::<span class="title function_ invoke__">raw</span>(<span class="string">&#x27;week_point+add_point&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;add_point&#x27;</span>    =&gt; <span class="title class_">Constants</span>::DEFAULT_VALUE,</span><br><span class="line">];</span><br><span class="line"><span class="variable">$res</span> = <span class="title class_">Member</span>::<span class="title function_ invoke__">update</span>(<span class="variable">$updateData</span>, [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="variable">$memberId</span>]);</span><br></pre></td></tr></table></figure><h3 id="两字段比较"><a href="#两字段比较" class="headerlink" title="两字段比较"></a>两字段比较</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">[<span class="number">2021</span>-<span class="number">04</span>-<span class="number">30</span>T11:<span class="number">30</span>:<span class="number">53</span>+<span class="number">08</span>:<span class="number">00</span>][sql] UPDATE `cd_task`  SET `last_task_count` = <span class="title function_ invoke__">IFNULL</span>(last_task_count, <span class="number">0</span>) + <span class="number">1</span>  WHERE  `id` = <span class="number">1026</span>  <span class="title function_ invoke__">AND</span> ( `last_task_count` &lt;= `total` ) [ RunTime:<span class="number">0.045582</span>s ]</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="title class_">Task</span>::<span class="title function_ invoke__">where</span>(<span class="string">&#x27;id&#x27;</span>, <span class="variable">$taskId</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">whereColumn</span>(<span class="string">&#x27;last_task_count&#x27;</span>, <span class="string">&#x27;&lt;=&#x27;</span>, <span class="string">&#x27;total&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">exp</span>(<span class="string">&#x27;last_task_count&#x27;</span>, <span class="string">&#x27;IFNULL(last_task_count, 0) + 1&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">update</span>();</span><br></pre></td></tr></table></figure><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$where</span> = [</span><br><span class="line">    [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="variable">$taskId</span>],</span><br><span class="line">    [<span class="string">&#x27;last_task_count&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="title class_">Db</span>::<span class="title function_ invoke__">raw</span>(<span class="string">&#x27;&lt;=`total`&#x27;</span>)],</span><br><span class="line">];</span><br><span class="line"><span class="variable">$res</span>   = <span class="title class_">Task</span>::<span class="title function_ invoke__">where</span>(<span class="variable">$where</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">exp</span>(<span class="string">&#x27;last_task_count&#x27;</span>, <span class="string">&#x27;IFNULL(last_task_count, 0) + 1&#x27;</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">update</span>();</span><br></pre></td></tr></table></figure><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$res</span>   = <span class="title class_">Task</span>::<span class="title function_ invoke__">whereColumn</span>([</span><br><span class="line">[<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;last_task_count&#x27;</span>, <span class="string">&#x27;&lt;=&#x27;</span>, <span class="string">&#x27;total&#x27;</span>],</span><br><span class="line">])</span><br><span class="line">    -&gt;<span class="title function_ invoke__">exp</span>(<span class="string">&#x27;last_task_count&#x27;</span>, <span class="string">&#x27;IFNULL(last_task_count, 0) + 1&#x27;</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">update</span>();</span><br></pre></td></tr></table></figure><h3 id="Where-条件中使用FIND-IN-SET函数"><a href="#Where-条件中使用FIND-IN-SET函数" class="headerlink" title="Where 条件中使用FIND_IN_SET函数"></a>Where 条件中使用FIND_IN_SET函数</h3><h4 id="FIND-IN-SET"><a href="#FIND-IN-SET" class="headerlink" title="!FIND_IN_SET"></a>!FIND_IN_SET</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$fId</span> = <span class="number">4</span>;  <span class="comment">// 需要过滤的ID</span></span><br><span class="line"><span class="variable">$where</span>[] = [<span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="title class_">Constants</span>::STATUS_ENABLE];</span><br><span class="line"><span class="variable">$where</span>[] = [<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="title class_">Db</span>::<span class="title function_ invoke__">raw</span>(<span class="string">&quot;!FIND_IN_SET(<span class="subst">&#123;$fId&#125;</span>,f_ids)&quot;</span>)];</span><br><span class="line"></span><br><span class="line"><span class="variable">$memberList</span> = <span class="title class_">Member</span>::<span class="title function_ invoke__">withoutField</span>(<span class="string">&#x27;id&#x27;</span>, name<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">                -&gt;where($where)</span></span><br><span class="line"><span class="string">                -&gt;order(&#x27;</span>order_id ASC<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">                -&gt;select()</span></span><br><span class="line"><span class="string">                -&gt;toArray();</span></span><br></pre></td></tr></table></figure><p>对应<code>SQL</code>语句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="number">2021</span><span class="number">-06</span><span class="number">-25</span>T14:<span class="number">21</span>:<span class="number">25</span><span class="operator">+</span><span class="number">08</span>:<span class="number">00</span>][<span class="keyword">sql</span>] <span class="keyword">SELECT</span> `id`,`name` <span class="keyword">FROM</span> `cd_member` <span class="keyword">WHERE</span>  `status` <span class="operator">=</span> <span class="number">1</span>  <span class="keyword">AND</span> ( <span class="operator">!</span>FIND_IN_SET(<span class="number">4</span>,f_ids) ) <span class="keyword">ORDER</span> <span class="keyword">BY</span> `order_id` <span class="keyword">ASC</span> [ RunTime:<span class="number">0.045002</span>s ]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot使用mongoTemplate时注意事项</title>
      <link href="/2023/02/01/2022-02-10-SpringBoot%E4%BD%BF%E7%94%A8mongoTemplate%E6%97%B6%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>/2023/02/01/2022-02-10-SpringBoot%E4%BD%BF%E7%94%A8mongoTemplate%E6%97%B6%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h3><p>更新整个对象使用<code>save()</code></p><p>更新某个字段而不是整个对象请使用<code>updateFirst()</code>或者<code>updateMulti()</code>，而不是<code>save()</code></p><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>项目开发过程中使用到了Spring Data操作Mongo</p><p>例：根据id更新sku数据</p><p><code>mongoTemplate.save(sku)</code></p><p>原文档<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;5ef9a63c1dd6b500c38eb784&quot;), </span><br><span class="line">    &quot;product_id&quot; : ObjectId(&quot;5ef952254538f17296470d6f&quot;), </span><br><span class="line">    &quot;sku_attr_id&quot; : ObjectId(&quot;5ef9a5c11dd6b500c38eb781&quot;), </span><br><span class="line">    &quot;barcode&quot;: [&quot;15134643623&quot;],</span><br><span class="line">    &quot;rrp&quot; : NumberDecimal(&quot;1588.00&quot;), </span><br><span class="line">    &quot;default_warning_qty&quot; : NumberInt(60), </span><br><span class="line">    &quot;default_replenish_qty&quot; : NumberInt(10), </span><br><span class="line">    &quot;create_time&quot; : NumberLong(0), </span><br><span class="line">    &quot;update_time&quot; : NumberLong(1593683512413), </span><br><span class="line">    &quot;delete_time&quot; : NumberLong(0)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码执行操作<code>kotlin</code>伪代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">val productSku = ProductSku()</span><br><span class="line">productSku.id = ObjectId(spec.skuId)</span><br><span class="line">productSku.defaultWarningQty = spec.defaultWarningQty</span><br><span class="line">mongoTemplate.save(ProductSku)</span><br></pre></td></tr></table></figure><p>运行后文档丢失数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;_id&quot; : ObjectId(&quot;5ef9a63c1dd6b500c38eb784&quot;),</span><br><span class="line">    &quot;default_warning_qty&quot; : NumberInt(60)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://stackoverflow.com/questions/39001955/spring-data-mongotemplate-save-behaviour">Spring Data mongoTemplate.save() behaviour</a></p><p><a href="https://blog.csdn.net/zongzhankui/article/details/78764665">Spring Data MongoDB更新</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP与Redis组合处理延时任务</title>
      <link href="/2023/02/01/2022-02-10-ThinkPHP%E4%B8%8ERedis%E7%BB%84%E5%90%88%E5%A4%84%E7%90%86%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
      <url>/2023/02/01/2022-02-10-ThinkPHP%E4%B8%8ERedis%E7%BB%84%E5%90%88%E5%A4%84%E7%90%86%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>ThinkPHP 6.0</li><li>Redis</li><li>PHP 7.4.11</li><li>Homestead</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="安装-predis-predis-依赖"><a href="#安装-predis-predis-依赖" class="headerlink" title="安装 predis/predis 依赖"></a>安装 predis/predis 依赖</h4><p>注：安装该扩展目的详看：\think\cache\driver\Redis</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;redis&#x27;</span>)) &#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;handler = <span class="keyword">new</span> \Redis;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;persistent&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">pconnect</span>(<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;host&#x27;</span>], (<span class="keyword">int</span>) <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;port&#x27;</span>], (<span class="keyword">int</span>) <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;timeout&#x27;</span>], <span class="string">&#x27;persistent_id_&#x27;</span> . <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;select&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">connect</span>(<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;host&#x27;</span>], (<span class="keyword">int</span>) <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;port&#x27;</span>], (<span class="keyword">int</span>) <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;timeout&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> != <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;handler-&gt;<span class="title function_ invoke__">auth</span>(<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">class_exists</span>(<span class="string">&#x27;\Predis\Client&#x27;</span>)) &#123;</span><br><span class="line">    <span class="variable">$params</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;options <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$key</span>, [<span class="string">&#x27;aggregate&#x27;</span>, <span class="string">&#x27;cluster&#x27;</span>, <span class="string">&#x27;connections&#x27;</span>, <span class="string">&#x27;exceptions&#x27;</span>, <span class="string">&#x27;prefix&#x27;</span>, <span class="string">&#x27;profile&#x27;</span>, <span class="string">&#x27;replication&#x27;</span>, <span class="string">&#x27;parameters&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$params</span>[<span class="variable">$key</span>] = <span class="variable">$val</span>;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;options[<span class="variable">$key</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> == <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;handler = <span class="keyword">new</span> \Predis\<span class="title function_ invoke__">Client</span>(<span class="variable language_">$this</span>-&gt;options, <span class="variable">$params</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">\BadFunctionCallException</span>(<span class="string">&#x27;not support: redis&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置-Redis"><a href="#配置-Redis" class="headerlink" title="配置 Redis"></a>配置 Redis</h4><p>配置app\config\cache.php如下图</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">facade</span>\<span class="title">Env</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">// | 缓存设置</span></span><br><span class="line"><span class="comment">// +----------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// 默认缓存驱动</span></span><br><span class="line">    <span class="string">&#x27;default&#x27;</span> =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;cache.driver&#x27;</span>, <span class="string">&#x27;file&#x27;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存连接方式配置</span></span><br><span class="line">    <span class="string">&#x27;stores&#x27;</span>  =&gt; [</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>  =&gt; [</span><br><span class="line">            <span class="comment">// 驱动方式</span></span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>       =&gt; <span class="string">&#x27;File&#x27;</span>,</span><br><span class="line">            <span class="comment">// 缓存保存目录</span></span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>       =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 缓存前缀</span></span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span>     =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 缓存有效期 0表示永久缓存</span></span><br><span class="line">            <span class="string">&#x27;expire&#x27;</span>     =&gt; <span class="number">0</span>,</span><br><span class="line">            <span class="comment">// 缓存标签前缀</span></span><br><span class="line">            <span class="string">&#x27;tag_prefix&#x27;</span> =&gt; <span class="string">&#x27;tag:&#x27;</span>,</span><br><span class="line">            <span class="comment">// 序列化机制 例如 [&#x27;serialize&#x27;, &#x27;unserialize&#x27;]</span></span><br><span class="line">            <span class="string">&#x27;serialize&#x27;</span>  =&gt; [],</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// 更多的缓存连接</span></span><br><span class="line">        <span class="string">&#x27;redis&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>       =&gt; <span class="string">&#x27;redis&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span>       =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.host&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>),                                  <span class="comment">// redis 主机ip</span></span><br><span class="line">            <span class="string">&#x27;port&#x27;</span>       =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.port&#x27;</span>, <span class="number">6379</span>),                                         <span class="comment">// redis 端口</span></span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>   =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.password&#x27;</span>, <span class="string">&#x27;&#x27;</span>),                                       <span class="comment">// redis 密码</span></span><br><span class="line">            <span class="string">&#x27;select&#x27;</span>     =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.select&#x27;</span>, <span class="number">0</span>),                                          <span class="comment">// 使用db，默认为 db0</span></span><br><span class="line">            <span class="string">&#x27;timeout&#x27;</span>    =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.timeout&#x27;</span>, <span class="number">0</span>),                                         <span class="comment">// redis连接的超时时间</span></span><br><span class="line">            <span class="string">&#x27;expire&#x27;</span>     =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.expire&#x27;</span>, <span class="number">0</span>),                                          <span class="comment">// 缓存有效期 0表示永久缓存</span></span><br><span class="line">            <span class="string">&#x27;persistent&#x27;</span> =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.persistent&#x27;</span>, <span class="literal">false</span>),                                  <span class="comment">// 是否持久链接</span></span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span>     =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.prefix&#x27;</span>, <span class="string">&#x27;prefix&#x27;</span>),                                   <span class="comment">// 前缀</span></span><br><span class="line">            <span class="string">&#x27;tag_prefix&#x27;</span> =&gt; <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.tag_prefix&#x27;</span>, <span class="string">&#x27;tag:&#x27;</span>),                                 <span class="comment">// 缓存标签前缀</span></span><br><span class="line">            <span class="string">&#x27;serialize&#x27;</span>  =&gt; <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&#x27;redis.serialize&#x27;</span>, [])),                        <span class="comment">// 序列化机制 例如 [&#x27;serialize&#x27;, &#x27;unserialize&#x27;]</span></span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>注：详细配置参数<br>参考think\cache\driver\Redis中如下配置</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 配置参数</span></span><br><span class="line"><span class="comment">* <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$options</span> = [</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;port&#x27;</span>       =&gt; <span class="number">6379</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>   =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;select&#x27;</span>     =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;timeout&#x27;</span>    =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;expire&#x27;</span>     =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;persistent&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;prefix&#x27;</span>     =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;tag_prefix&#x27;</span> =&gt; <span class="string">&#x27;tag:&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;serialize&#x27;</span>  =&gt; [],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/qq_27015727/article/details/103426615">ThinkPHP6多例Redis类实现 </a><br><a href="redis.net.cn/order/">Redis 官方命令文档 </a><br><a href="https://www.cnblogs.com/jkko123/p/10614696.html">php使用redis的有序集合zset实现延迟队列</a><br><a href="https://her-cat.com/2020/01/18/redis-based-delay-queue.html">基于 Redis 实现延迟队列</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose 快速构建公司局域网DNS服务器</title>
      <link href="/2023/02/01/2022-02-10-docker-compose-%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%E5%85%AC%E5%8F%B8%E5%B1%80%E5%9F%9F%E7%BD%91DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/02/01/2022-02-10-docker-compose-%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%E5%85%AC%E5%8F%B8%E5%B1%80%E5%9F%9F%E7%BD%91DNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos 7</li><li>docker-compose</li><li>192.168.50.100 为DNS服务器所在</li><li>192.168.50.101 为目的服务器</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="编辑-env文件增加登录dns-web-页账号密码配置"><a href="#编辑-env文件增加登录dns-web-页账号密码配置" class="headerlink" title="编辑.env文件增加登录dns web 页账号密码配置"></a>编辑.env文件增加登录dns web 页账号密码配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">############### Dns #################</span><br><span class="line">TZ=Asia/Shanghai</span><br><span class="line">HTTP_USER=root</span><br><span class="line">HTTP_PASS=root</span><br></pre></td></tr></table></figure><h4 id="在Docker主机上创建文件-dnsmasq-conf"><a href="#在Docker主机上创建文件-dnsmasq-conf" class="headerlink" title="在Docker主机上创建文件/dnsmasq.conf"></a>在Docker主机上创建文件<a href="http://oss.segetech.com/intra/srv/dnsmasq.conf">/dnsmasq.conf</a></h4><p>以下为内容跟<code>github</code>中的一致，这里只是做测试：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#dnsmasq config, for a complete example, see:</span><br><span class="line">#  http://oss.segetech.com/intra/srv/dnsmasq.conf</span><br><span class="line">#log all dns queries</span><br><span class="line">log-queries</span><br><span class="line">#dont use hosts nameservers</span><br><span class="line">no-resolv</span><br><span class="line">#use cloudflare as default nameservers, prefer 1^4</span><br><span class="line">server=1.0.0.1</span><br><span class="line">server=1.1.1.1</span><br><span class="line">strict-order</span><br><span class="line">#serve all .company queries using a specific nameserver</span><br><span class="line">server=/company/10.0.0.1</span><br><span class="line">#explicitly define host-ip mappings</span><br><span class="line">address=/myhost.company/10.0.0.2</span><br></pre></td></tr></table></figure><h4 id="编辑docker-compose-yml增加dns-server"><a href="#编辑docker-compose-yml增加dns-server" class="headerlink" title="编辑docker-compose.yml增加dns_server"></a>编辑docker-compose.yml增加dns_server</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dns_server:</span><br><span class="line">    container_name: dp_dns_server</span><br><span class="line">    image: &#x27;jpillora/dnsmasq&#x27;</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=$&#123;TZ&#125;</span><br><span class="line">      - HTTP_USER=$&#123;HTTP_USER&#125;</span><br><span class="line">      - HTTP_PASS=$&#123;HTTP_PASS&#125;</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;53:53/tcp&quot;</span><br><span class="line">      - &quot;53:53/udp&quot;</span><br><span class="line">      - &quot;8090:8080&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;./services/dns/dnsmasq.conf:/etc/dmZsmasq.conf&quot;</span><br></pre></td></tr></table></figure><h4 id="启动docker-compose并进入管理平台"><a href="#启动docker-compose并进入管理平台" class="headerlink" title="启动docker-compose并进入管理平台"></a>启动docker-compose并进入管理平台</h4><p><code>$ docker-compse up -d</code></p><p>访问192.168.50.100:8090进入web管理页面</p><p><img src="/images/docker_compose_dns_1.png" alt=""></p><h4 id="测试内网访问"><a href="#测试内网访问" class="headerlink" title="测试内网访问"></a>测试内网访问</h4><p>增加一条域名映射</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#test www.axinblog.com</span><br><span class="line">address=/sos.axinblog.com/192.168.50.101</span><br></pre></td></tr></table></figure><p>此映射是映射到局域网内的一台主机（IP根据你们自己的网络进行更改）点Save保存</p><p><img src="/images/docker_compose_dns_2.png" alt=""></p><p>更改局域网内另一台Centos 7 主机DNS配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ vim /etc/resolv.conf</span><br><span class="line">nameserver 192.168.50.100（这是你搭建dns_server服务器IP）</span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 8.8.4.4</span><br></pre></td></tr></table></figure><p>ping sos.axinblog.com 测试映射结果</p><p><img src="/images/docker_compose_dns_3.png" alt=""></p><p>成功 ping 通192.168.50.101表示成功</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://github.com/jpillora/docker-dnsmasq">docker-dnsmasq</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/01/hello-world/"/>
      <url>/2023/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 项目打包Docker镜像到Harbor</title>
      <link href="/2023/01/30/Spring-Boot-%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85Docker%E9%95%9C%E5%83%8F%E5%88%B0Harbor/"/>
      <url>/2023/01/30/Spring-Boot-%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85Docker%E9%95%9C%E5%83%8F%E5%88%B0Harbor/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Harbor 部署在192.168.2.105</li><li></li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><ol><li><p>引入 <code>dockerfile-maven-plugin</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.spotify<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dockerfile-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>default<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--如果package时不想用docker打包,就注释掉这个goal</span></span><br><span class="line"><span class="comment">                &lt;goal&gt;build&lt;/goal&gt;</span></span><br><span class="line"><span class="comment">                &lt;goal&gt;push&lt;/goal&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 上下文路径配置，此处设置为项目根路径 用来读取Dockerfile--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">contextDirectory</span>&gt;</span>$&#123;project.basedir&#125;<span class="tag">&lt;/<span class="name">contextDirectory</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--使用Maven的setting.xml来配置账号密码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">useMavenSettingsForAuth</span>&gt;</span>true<span class="tag">&lt;/<span class="name">useMavenSettingsForAuth</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--上传路径/镜像构建名： Harbor地址/Harbor项目名/springboot项目名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span>$&#123;docker.registry&#125;/$&#123;docker.image.prefix&#125;/$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 标签,最终会显示在Harbor镜像的标签中 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag</span>&gt;</span>$&#123;project.version&#125;<span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 作为Dockerfile 文件传入,也就是Dockerfile 中 ARG JAR_FILE的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">buildArgs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">JAR_FILE</span>&gt;</span>$&#123;project.build.finalName&#125;.jar<span class="tag">&lt;/<span class="name">JAR_FILE</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">buildArgs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改<code>setting.xml</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- harbor --&gt;</span><br><span class="line">&lt;server&gt;</span><br><span class="line">  &lt;id&gt;192.168.2.205&lt;/id&gt;       </span><br><span class="line">  &lt;username&gt;axin&lt;/username&gt;</span><br><span class="line">  &lt;password&gt;Aa123456&lt;/password&gt;</span><br><span class="line">&lt;/server&gt;</span><br></pre></td></tr></table></figure></li><li><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3></li></ol><h4 id="pipe-docker-engine"><a href="#pipe-docker-engine" class="headerlink" title=".\pipe\docker_engine"></a>.\pipe\docker_engine</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Get-“https-192-168-2-205-v2-“-x509-cannot-validate-certificate-for-192-168-2-205-because-it-doesn’t-contain-any-IP-SANs"><a href="#Get-“https-192-168-2-205-v2-“-x509-cannot-validate-certificate-for-192-168-2-205-because-it-doesn’t-contain-any-IP-SANs" class="headerlink" title="Get “https://192.168.2.205/v2/“: x509: cannot validate certificate for 192.168.2.205 because it doesn’t contain any IP SANs"></a>Get “<a href="https://192.168.2.205/v2/">https://192.168.2.205/v2/</a>“: x509: cannot validate certificate for 192.168.2.205 because it doesn’t contain any IP SANs</h4><p>解决：</p><p><code>vim /etc/docker/daemon.json</code></p><p>加上 <code>&quot;insecure-registries&quot;: [&quot;harbor ip 地址&quot;],</code></p><p>最终如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;192.168.2.205&quot;],</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/qq_31739435/article/details/103281230">SpringBoot构建Docker镜像并推送到Harbor</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/09/01/Java-AES%E5%8A%A0%E5%AF%86%E5%92%8CPHP%E8%A7%A3%E5%AF%86/"/>
      <url>/2022/09/01/Java-AES%E5%8A%A0%E5%AF%86%E5%92%8CPHP%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Java-加密"><a href="#Java-加密" class="headerlink" title="Java 加密"></a>Java 加密</h4><p>引入 hutool</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构建</span></span><br><span class="line"><span class="type">byte</span>[] key = <span class="string">&quot;ie4zTPBagxAG235tcoHKswVbmOYZDflI&quot;</span>.getBytes();</span><br><span class="line"><span class="type">AES</span> <span class="variable">aes</span> <span class="operator">=</span> SecureUtil.aes(key);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line"><span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;加密内容&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">encode</span> <span class="operator">=</span> aes.encryptBase64(content);</span><br><span class="line">System.out.println(encode);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line"><span class="type">byte</span>[] decrypt = aes.decrypt(encode);</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">String</span>(decrypt));</span><br></pre></td></tr></table></figure><h4 id="PHP-解密"><a href="#PHP-解密" class="headerlink" title="PHP 解密"></a>PHP 解密</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$data</span>, <span class="string">&#x27;AES-256-ECB&#x27;</span>, <span class="variable">$key</span>, OPENSSL_RAW_DATA);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$encrypted</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$encrypted</span>, <span class="string">&#x27;AES-256-ECB&#x27;</span>, <span class="variable">$key</span>, OPENSSL_RAW_DATA);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#### base64 加密后密文经过get请求，解密失败</span></span><br><span class="line"></span><br><span class="line">因为加密后密文如果有加号，会变成了空格</span><br><span class="line"></span><br><span class="line">解决</span><br><span class="line"></span><br><span class="line">引入 hutool 包</span><br><span class="line"></span><br><span class="line">`String encode = URLUtil.<span class="title function_ invoke__">encodeQuery</span>(aes.<span class="title function_ invoke__">encryptBase64</span>(content));`</span><br><span class="line"></span><br><span class="line"><span class="keyword">or</span></span><br><span class="line"></span><br><span class="line">`String encode = URLEncoder.<span class="title function_ invoke__">encode</span>(aes.<span class="title function_ invoke__">encryptBase64</span>(content));`</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 使用 Supervisor 部署</title>
      <link href="/2022/08/11/Golang-%E4%BD%BF%E7%94%A8Supervisor%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/08/11/Golang-%E4%BD%BF%E7%94%A8Supervisor%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos 8.5.2111</li><li>Golang 1.17.6</li><li>Supervisor</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Supervisor-安装"><a href="#Supervisor-安装" class="headerlink" title="Supervisor 安装"></a>Supervisor 安装</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># centos</span><br><span class="line">yum install supervisor -y</span><br><span class="line">systemctl start supervisord</span><br><span class="line"></span><br><span class="line"># ubuntu</span><br><span class="line">apt-get install -y supervisor</span><br><span class="line">service supervisor start</span><br></pre></td></tr></table></figure><h4 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h4><h5 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h5><p>config.yaml</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">domain:</span> <span class="string">http://www.axinblog.com</span></span><br></pre></td></tr></table></figure><p>一个简单的定时任务<br><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/robfig/cron/v3&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/spf13/viper&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">viper.SetConfigName(<span class="string">&quot;config&quot;</span>)</span><br><span class="line">viper.SetConfigType(<span class="string">&quot;yaml&quot;</span>)</span><br><span class="line">viper.AddConfigPath(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">viper.AddConfigPath(<span class="string">&quot;./config&quot;</span>)</span><br><span class="line">err := viper.ReadInConfig()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">&quot;fatal error config file: %w&quot;</span>, err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求地址</span></span><br><span class="line">domain := viper.GetString(<span class="string">&quot;env.domain&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时</span></span><br><span class="line">c := cron.New(cron.WithSeconds())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动关闭订单</span></span><br><span class="line">c.AddFunc(<span class="string">&quot;@every 10s&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">path := <span class="string">&quot;/index/api/close_order&quot;</span></span><br><span class="line">resp, err := http.Get(domain + path)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line">body, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">fmt.Println(<span class="type">string</span>(body))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">c.Start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="/images/golang_supervisor_1.png" alt=""></p><h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><p><img src="/images/golang_supervisor_2.png" alt=""></p><p>注：<code>Env</code> 中为 <code>GOARCH=amd64;GOOS=linux</code></p><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>上传二进制<code>main</code>到运行目录</p><p><code>chmod +x main</code> 赋予执行权限</p><p>supervisor 配置</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:main]</span></span><br><span class="line"><span class="attr">directory</span>=/data/wwwroot/aixnblog/server</span><br><span class="line"><span class="attr">command</span>=/data/wwwroot/aixnblog/server/main</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">autostart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">autorestart</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stderr_logfile</span>=/root/logs/main_error.log</span><br><span class="line"><span class="attr">stdout_logfile</span>=/root/logs/main.log</span><br></pre></td></tr></table></figure><p>启动<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 更新配置</span><br><span class="line">supervisorctl update</span><br><span class="line"># 启动</span><br><span class="line">supervisorctl start main</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用docker-compose搭建rtsp测试服务器</title>
      <link href="/2022/08/06/%E4%BD%BF%E7%94%A8docker-compose%E6%90%AD%E5%BB%BArtsp%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2022/08/06/%E4%BD%BF%E7%94%A8docker-compose%E6%90%AD%E5%BB%BArtsp%E6%B5%8B%E8%AF%95%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos 8.5.2111</li><li>live555</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h4><p>docker-compose.yml</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">live555:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">live555</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">vimagick/live555</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9090:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;554:554&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><h4 id="测试视频"><a href="#测试视频" class="headerlink" title="测试视频"></a>测试视频</h4><p><a href="https://sample-videos.com/index.php#sample-mp4-video">Download Sample Videos</a></p><p>也可以下载一部mkv电影放入data目录中</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># root @ cy_dev in /home/workspace/rtsp/data [13:51:37]</span></span><br><span class="line"><span class="string">$</span> <span class="string">ll</span></span><br><span class="line"><span class="string">total</span> <span class="number">1.</span><span class="string">3G</span></span><br><span class="line"><span class="string">-rw-r--r--.</span> <span class="number">1</span> <span class="string">root</span> <span class="string">root</span> <span class="number">1.</span><span class="string">3G</span> <span class="string">Aug</span>  <span class="number">5</span> <span class="number">16</span><span class="string">:28</span> <span class="string">movie_1.mkv</span></span><br><span class="line"><span class="string">-rw-r--r--.</span> <span class="number">1</span> <span class="string">root</span> <span class="string">root</span>  <span class="string">12M</span> <span class="string">Aug</span>  <span class="number">5</span> <span class="number">17</span><span class="string">:32</span> <span class="string">movie_2.mkv</span></span><br></pre></td></tr></table></figure><p>测试地址</p><p><code>rtsp://ip:port/movie_2.mkv</code></p><p>按<code>docker-compose.yml</code>文件中配置的IP&amp;端口号使用VLC播放器访问</p><p>例</p><p><code>rtsp://192.168.2.101:9090/movie_2.mkv</code></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://hub.docker.com/r/vimagick/live555">vimagick/live555</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Gitlab 迁移日志</title>
      <link href="/2022/08/05/Gitlab-%E8%BF%81%E7%A7%BB%E6%97%A5%E5%BF%97/"/>
      <url>/2022/08/05/Gitlab-%E8%BF%81%E7%A7%BB%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><p><strong>原环境</strong></p><ul><li>Centos 7.2.1511</li><li>gitlab-ce-13.8.4-ce 安装方式 基于 <code>rpm</code> 包安装</li></ul><p><strong>新环境</strong></p><ul><li>Centos 8.5.2111</li><li>docker-compose 方式部署的 <code>gitlab-ce:13.8.4-ce.0</code></li><li>Docker version 20.10.17</li><li>Docker Compose version v2.7.0</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>迁移的过程大致如下：</p><ol><li>新旧服务器<code>gitlab</code>版本一致</li><li>备份旧服务器数据</li><li>还原数据到新服务器</li></ol><p><a href="https://hub.docker.com/r/gitlab/gitlab-ce/tags">Gitlab docker 版本查找</a></p><h4 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h4><p>备份命令</p><p><code>gitlab-rake gitlab:backup:create</code></p><p>过程</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Creating backup archive: 1659683091_2022_08_05_13.8.4_gitlab_backup.tar ... done</span><br><span class="line">Uploading backup archive to remote storage  ... skipped</span><br><span class="line">Deleting tmp directories ... done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">done</span><br><span class="line">Deleting old backups ... skipping</span><br><span class="line">Warning: Your gitlab.rb and gitlab-secrets.json files contain sensitive data</span><br><span class="line">and are not included in this backup. You will need these files to restore a backup.</span><br><span class="line">Please back them up manually.</span><br><span class="line">Backup task is done.</span><br></pre></td></tr></table></figure><p>备份文件在目录 <code>/var/opt/gitlab/backups</code> 中找到，传输到新环境中</p><h4 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h4><p>停止相关数据连接服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@gitlab:/var/opt/gitlab/backups# gitlab-ctl stop unicorn</span><br><span class="line">root@gitlab:/var/opt/gitlab/backups# gitlab-ctl stop sidekiq</span><br></pre></td></tr></table></figure><p>还原备份数据</p><p><code>gitlab-rake gitlab:backup:restore BACKUP=1659683091_2022_08_05_13.8.4</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@gitlab:/var/opt/gitlab/backups# gitlab-rake gitlab:backup:restore BACKUP=1659683091_2022_08_05_13.8.4</span><br><span class="line">Unpacking backup ... done</span><br><span class="line">Be sure to stop Puma, Sidekiq, and any other process that</span><br><span class="line">connects to the database before proceeding. For Omnibus</span><br><span class="line">installs, see the following link for more information:</span><br><span class="line">https://docs.gitlab.com/ee/raketasks/backup_restore.html#restore-for-omnibus-gitlab-installations</span><br><span class="line"></span><br><span class="line">Before restoring the database, we will remove all existing</span><br><span class="line">tables to avoid future upgrade problems. Be aware that if you have</span><br><span class="line">custom tables in the GitLab database these tables and all data will be</span><br><span class="line">removed.</span><br><span class="line"></span><br><span class="line">Do you want to continue (yes/no)? yes</span><br></pre></td></tr></table></figure><p>询问 恢复数据库之前，我们将删除所有现有的 表，以避免将来的升级问题。 输入 <code>yes</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This task will now rebuild the authorized_keys file.</span><br><span class="line">You will lose any data stored in the authorized_keys file.</span><br><span class="line">Do you want to continue (yes/no)? yes</span><br><span class="line"></span><br><span class="line">Warning: Your gitlab.rb and gitlab-secrets.json files contain sensitive data</span><br><span class="line">and are not included in this backup. You will need to restore these files manually.</span><br><span class="line">Restore task is done.</span><br><span class="line">root@gitlab:/var/opt/gitlab/backups#</span><br></pre></td></tr></table></figure><p>这个任务现在将重建authorized_keys文件。</p><p>您将丢失存储在authorized_keys文件中的所有数据。</p><p>是否继续(是/否)? </p><p>输入 <code>yes</code></p><h4 id="克隆地址修改"><a href="#克隆地址修改" class="headerlink" title="克隆地址修改"></a>克隆地址修改</h4><p>进入容器</p><p><code>docker-compose exec gitlab bash</code></p><p>or </p><p><code>docker exec -it gitlab bash</code></p><p>编辑配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">host:</span> <span class="number">192.168</span><span class="number">.199</span><span class="number">.2</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">8088</span></span><br><span class="line"><span class="attr">https:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>重启 <code>gitlab</code></p><p><code>gitlab-ctl restart</code></p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看版本信息</span><br><span class="line">gitlab-rake gitlab:env:info</span><br><span class="line"></span><br><span class="line"># 创建备份</span><br><span class="line">gitlab-rake gitlab:backup:create</span><br><span class="line"></span><br><span class="line"># 恢复备份</span><br><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1571687782_2019_10_22_9.3.0</span><br><span class="line"></span><br><span class="line"># 重新配置GitLab服务</span><br><span class="line">gitlab-ctl reconfigure</span><br><span class="line"></span><br><span class="line"># 检查GitLab服务状态</span><br><span class="line">gitlab-rake gitlab:check</span><br><span class="line"></span><br><span class="line"># 检查GitLab服务状态</span><br><span class="line">gitlab-ctl status</span><br><span class="line"></span><br><span class="line"># 停止所有GitLab服务</span><br><span class="line">gitlab-ctl stop</span><br><span class="line"></span><br><span class="line"># 重新启动所有GitLab服务</span><br><span class="line">gitlab-ctl restart</span><br><span class="line"></span><br><span class="line"># 可以通过在最后证明服务名称来重新启动特定服务</span><br><span class="line">gitlab-ctl restart logrotate</span><br><span class="line"></span><br><span class="line"># 查看所有的logs; 按 Ctrl-C 退出</span><br><span class="line">sudo gitlab-ctl tail</span><br><span class="line"></span><br><span class="line"># 拉取/var/log/gitlab下子目录的日志</span><br><span class="line">sudo gitlab-ctl tail gitlab-rails</span><br><span class="line"></span><br><span class="line"># 拉取某个指定的日志文件</span><br><span class="line">sudo gitlab-ctl tail nginx/gitlab_error.log</span><br><span class="line"></span><br><span class="line"># 查看hash存储项目数及附件数</span><br><span class="line">gitlab-rake gitlab:storage:hashed_projects</span><br><span class="line">gitlab-rake gitlab:storage:hashed_attachments</span><br><span class="line"></span><br><span class="line"># 查看传统存储项目及附件数</span><br><span class="line">gitlab-rake gitlab:storage:legacy_projects</span><br><span class="line">gitlab-rake gitlab:storage:legacy_attachments</span><br><span class="line"></span><br><span class="line"># 列出传统存储项目列表及附件列表</span><br><span class="line">gitlab-rake gitlab:storage:list_legacy_projects</span><br><span class="line">gitlab-rake gitlab:storage:list_legacy_attachments</span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="8-errors-prohibited-this-user-from-being-saved"><a href="#8-errors-prohibited-this-user-from-being-saved" class="headerlink" title="8 errors prohibited this user from being saved"></a>8 errors prohibited this user from being saved</h4><p>尝试过网上的办法，进入容器修改root密码，无效<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gitlab-rails console</span><br><span class="line">u=User.where(id:1).first</span><br><span class="line">u.password=&#x27;12345678&#x27;</span><br><span class="line">u.password_confirmation=&#x27;12345678&#x27;</span><br><span class="line">u.save</span><br><span class="line">注意：root密码不能小于8位即12345678，不然会显示false</span><br></pre></td></tr></table></figure></p><p>解决办法如下</p><p>删除容器</p><p><code>docker-compose rm gitlab</code></p><p>docker-compose.yml 文件增加 <code>initial_root_password</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">environment:</span><br><span class="line">      TZ: &#x27;Asia/Shanghai&#x27;</span><br><span class="line">      GITLAB_OMNIBUS_CONFIG: |</span><br><span class="line">        ...</span><br><span class="line">        gitlab_rails[&#x27;initial_root_password&#x27;] = &#x27;你要设置的root密码&#x27;</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><h4 id=""><a href="#" class="headerlink" title=" "></a> </h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@gitlab:/var/opt/gitlab/backups# gitlab-rake 1659683091_2022_08_05_13.8.4_gitlab_backup.tar</span><br><span class="line">rake aborted!</span><br><span class="line">Don&#x27;t know how to build task &#x27;1659683091_2022_08_05_13.8.4_gitlab_backup.tar&#x27; (See the list of available tasks with `rake --tasks`)</span><br><span class="line">/opt/gitlab/embedded/bin/bundle:23:in `load&#x27;</span><br><span class="line">/opt/gitlab/embedded/bin/bundle:23:in `&lt;main&gt;&#x27;</span><br><span class="line">(See full trace by running task with --trace)</span><br></pre></td></tr></table></figure><h4 id="PG-ConnectionBad-could-not-connect-to-server-No-such-file-or-directory"><a href="#PG-ConnectionBad-could-not-connect-to-server-No-such-file-or-directory" class="headerlink" title="PG::ConnectionBad: could not connect to server: No such file or directory"></a>PG::ConnectionBad: could not connect to server: No such file or directory</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PG::ConnectionBad: could not connect to server: No such file or directory</span><br><span class="line">        Is the server running locally and accepting</span><br><span class="line">        connections on Unix domain socket &quot;/var/opt/gitlab/postgresql/.s.PGSQL.5432&quot;?</span><br><span class="line">/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/db.rake:27:in `block (3 levels) in &lt;top (required)&gt;&#x27;</span><br><span class="line">/opt/gitlab/embedded/service/gitlab-rails/lib/tasks/gitlab/backup.rake:69:in `block (3 levels) in &lt;top (required)&gt;&#x27;</span><br><span class="line">/opt/gitlab/embedded/bin/bundle:23:in `load&#x27;</span><br><span class="line">/opt/gitlab/embedded/bin/bundle:23:in `&lt;main&gt;&#x27;</span><br><span class="line">Tasks: TOP =&gt; gitlab:db:drop_tables</span><br><span class="line">(See full trace by running task with --trace)</span><br></pre></td></tr></table></figure><p>解决</p><p>重新启动 <code>gitlab-ctl start</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gitlab-ctl start</span><br><span class="line">gitlab-ctl stop unicorn</span><br><span class="line">gitlab-ctl stop sidekiq</span><br></pre></td></tr></table></figure><p>再执行备份</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://cloud.tencent.com/developer/article/1622317">Gitlab备份、迁移、恢复和升级</a></p><p><a href="https://docs.docker.com/compose/compose-file/">Compose specification</a></p><p><a href="https://stackoverflow.com/questions/56631893/how-do-i-start-a-gitlab-ce-container-via-docker-compose-with-admin-credentials-a">How do I start a gitlab-ce container via docker-compose with admin credentials already set up?</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
            <tag> 迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins 部署</title>
      <link href="/2022/07/28/Jenkins-%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/07/28/Jenkins-%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos 8.5.2111</li><li>Docker Compose version v2.7.0</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Docker-部署"><a href="#Docker-部署" class="headerlink" title="Docker 部署"></a>Docker 部署</h4><p>配置 <code>docker-compose.yml</code></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">jenkins:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jenkins</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jenkins/jenkins:lts&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;8080:8080&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;50000:50000&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./jenkins-data:/var/jenkins_home:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./jenkins-data/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">&quot;bridge&quot;</span></span><br></pre></td></tr></table></figure><p><code>chown -R 1000:1000 ./services/jenkins</code></p><p>启动</p><p><code>docker-compose up</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jenkins  | *************************************************************</span><br><span class="line">jenkins  | *************************************************************</span><br><span class="line">jenkins  | *************************************************************</span><br><span class="line">jenkins  |</span><br><span class="line">jenkins  | Jenkins initial setup is required. An admin user has been created and a password generated.</span><br><span class="line">jenkins  | Please use the following password to proceed to installation:</span><br><span class="line">jenkins  |</span><br><span class="line">jenkins  | a044f5675f3e43fb91218a4c07b4a404</span><br><span class="line">jenkins  |</span><br><span class="line">jenkins  | This may also be found at: /var/jenkins_home/secrets/initialAdminPassword</span><br><span class="line">jenkins  |</span><br><span class="line">jenkins  | *************************************************************</span><br><span class="line">jenkins  | *************************************************************</span><br><span class="line">jenkins  | *************************************************************</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE 添加硬盘</title>
      <link href="/2022/07/20/Proxmox-VE-%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98/"/>
      <url>/2022/07/20/Proxmox-VE-%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>物理机</li><li>网格环境：路由器-&gt;交换机-&gt;服务器</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>新装<code>Proxmox VE</code>环境</p><h3 id="扩展说明"><a href="#扩展说明" class="headerlink" title="扩展说明"></a>扩展说明</h3><h4 id="Linux-mount命令"><a href="#Linux-mount命令" class="headerlink" title="Linux mount命令"></a>Linux mount命令</h4><p>Linux mount命令是经常会使用到的命令，它用于挂载Linux系统外的文件。</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE 网络修复</title>
      <link href="/2022/07/20/Proxmox-VE-%E7%BD%91%E7%BB%9C%E4%BF%AE%E5%A4%8D/"/>
      <url>/2022/07/20/Proxmox-VE-%E7%BD%91%E7%BB%9C%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>物理机</li><li>网格环境：路由器-&gt;交换机-&gt;服务器</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 控制台乱码问题解决</title>
      <link href="/2022/07/18/IntelliJ-IDEA%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>/2022/07/18/IntelliJ-IDEA%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Win10</li><li>Tomcat 8.5.81</li><li>IntelliJ IDEA 2021.3.1</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>接了个老项目，运行出来后 <code>Tomcat localhost Log</code> 和 <code>Tomcat Catalina Log</code> 乱码</p><h4 id="方式一-添加配置-Dfile-encoding-utf-8-推荐"><a href="#方式一-添加配置-Dfile-encoding-utf-8-推荐" class="headerlink" title="方式一 添加配置-Dfile.encoding=utf-8 (推荐)"></a>方式一 添加配置<code>-Dfile.encoding=utf-8</code> (推荐)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Help-&gt;Edit Custom VM OPtions-&gt;加上 -Dfile.encoding=utf-8</span><br></pre></td></tr></table></figure><p>重启Idea</p><h4 id="方式二-VM-options-改为-Dfile-encoding-utf-8"><a href="#方式二-VM-options-改为-Dfile-encoding-utf-8" class="headerlink" title="方式二 VM options 改为 -Dfile.encoding=utf-8"></a>方式二 VM options 改为 <code>-Dfile.encoding=utf-8</code></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Run/Debug Configurations -&gt; Tomcat -&gt; VM options 增加 -Dfile.encoding=utf-8</span><br></pre></td></tr></table></figure><p>注：该方式对我没用，加与不加无效</p><h4 id="方式三-修改Tomcat源文件中的-conf-logging-properties-UTF-8-为-GBK"><a href="#方式三-修改Tomcat源文件中的-conf-logging-properties-UTF-8-为-GBK" class="headerlink" title="方式三 修改Tomcat源文件中的/conf/logging.properties UTF-8 为 GBK"></a>方式三 修改Tomcat源文件中的/conf/logging.properties UTF-8 为 GBK</h4><p>vscode 打开 logging.properties</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UTF-8</span><br><span class="line">全部替换为</span><br><span class="line">GBK</span><br></pre></td></tr></table></figure><p>重启Idea</p><p>注：该方式尝试了能解决<code>Tomcat localhost Log</code>乱码问题，然Server控制台又乱码。后来还是用方式一解决该问题</p><h4 id="方式四-File-Encodings-与方式一结合使用更佳"><a href="#方式四-File-Encodings-与方式一结合使用更佳" class="headerlink" title="方式四 File Encodings (与方式一结合使用更佳)"></a>方式四 File Encodings (与方式一结合使用更佳)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">File-&gt;Setting-&gt;Editor-&gt;File Encodings</span><br><span class="line"></span><br><span class="line">配置 </span><br><span class="line">Global Encoding</span><br><span class="line">Project Encoding</span><br><span class="line">Default encodeing for properties files</span><br><span class="line">设置成UTF-8，</span><br><span class="line"></span><br><span class="line">勾选：transparent native-to-ascii conversion</span><br><span class="line"></span><br><span class="line">点击OK 或 Apply</span><br></pre></td></tr></table></figure><h4 id="方式五-配置-Console-为-UTF-8"><a href="#方式五-配置-Console-为-UTF-8" class="headerlink" title="方式五 配置 Console 为 UTF-8"></a>方式五 配置 <code>Console</code> 为 <code>UTF-8</code></h4><p><code>File-&gt;Setting-&gt;Editor-&gt;General-&gt;Console-&gt;Default Encoding 看下是否为 UTF-8</code></p><h4 id="方式六-删除或修改-encodings-xml-文件"><a href="#方式六-删除或修改-encodings-xml-文件" class="headerlink" title="方式六 删除或修改 encodings.xml 文件"></a>方式六 删除或修改 <code>encodings.xml</code> 文件</h4><p>如果上面都不行，试着修改</p><p><code>encodings.xml 注释所有file标签，再重启Idea</code></p><p>或删除</p><p><code>.idea文件夹下面的encodings.xml文件</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis Plus 多条件分页查询</title>
      <link href="/2022/06/13/Mybatis-Plus-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/06/13/Mybatis-Plus-%E5%A4%9A%E6%9D%A1%E4%BB%B6%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Mybatis Plus 3.0-RC3 or later</li><li>Spring Boot 2.1.3.RELEASE</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>Controller<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@SysLog(MODULE = &quot;sys&quot;, REMARK = &quot;根据条件查询所有运营中心账户表列表&quot;)</span><br><span class="line">@ApiOperation(&quot;根据条件查询所有运营中心账户表列表&quot;)</span><br><span class="line">@GetMapping(value = &quot;/list&quot;)</span><br><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:sysOperationsCenter:read&#x27;)&quot;)</span><br><span class="line">public Object getSysOperationsCenterByPage(</span><br><span class="line">        SysOperationsCenter entity,</span><br><span class="line">        @RequestParam(value = &quot;keyword&quot;, defaultValue = &quot;&quot;) String keyword,</span><br><span class="line">        @RequestParam(value = &quot;pageNum&quot;, defaultValue = &quot;1&quot;) Integer pageNum,</span><br><span class="line">        @RequestParam(value = &quot;pageSize&quot;, defaultValue = &quot;10&quot;) Integer pageSize</span><br><span class="line">) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        QueryWrapper&lt;SysOperationsCenter&gt; queryWrapper = new QueryWrapper&lt;&gt;(entity);</span><br><span class="line">        if (StringUtils.isNotBlank(keyword)) &#123;</span><br><span class="line">            queryWrapper.and(wrapper -&gt; wrapper.like(&quot;su.username&quot;, keyword)</span><br><span class="line">                    .or()</span><br><span class="line">                    .like(&quot;um.username&quot;, keyword)</span><br><span class="line">                    .or()</span><br><span class="line">                    .like(&quot;um.nickname&quot;, keyword));</span><br><span class="line">        &#125;</span><br><span class="line">        return new CommonResult().success(ISysOperationsCenterService.findByPage(new Page&lt;SysOperationsCenter&gt;(pageNum, pageSize), queryWrapper));</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        log.error(&quot;根据条件查询所有运营中心账户表列表：%s&quot;, e.getMessage(), e);</span><br><span class="line">    &#125;</span><br><span class="line">    return new CommonResult().failed();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>IService<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">/**</span></span><br><span class="line"> <span class="string">*</span> <span class="string">获取分页</span></span><br><span class="line"> <span class="string">*</span> <span class="string">@param</span> <span class="string">page</span></span><br><span class="line"> <span class="string">*</span> <span class="string">@param</span> <span class="string">queryWrapper</span></span><br><span class="line"> <span class="string">*</span> <span class="string">@return</span></span><br><span class="line"> <span class="string">*/</span></span><br><span class="line"><span class="string">IPage&lt;SysOperationsCenter&gt;</span> <span class="string">findByPage(IPage&lt;SysOperationsCenter&gt;</span> <span class="string">page,</span> <span class="string">@Param(&quot;ew&quot;)</span> <span class="string">QueryWrapper&lt;SysOperationsCenter&gt;</span> <span class="string">queryWrapper);</span></span><br></pre></td></tr></table></figure></p><p>ServiceImpl<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">public IPage&lt;SysOperationsCenter&gt; findByPage(IPage&lt;SysOperationsCenter&gt; page, QueryWrapper&lt;SysOperationsCenter&gt; queryWrapper) &#123;</span><br><span class="line">    return sysOperationsCenterMapper.findByPage(page, queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Mapper<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;select</span> <span class="string">id=&quot;findByPage&quot;</span> <span class="string">resultType=&quot;com.zscat.mallplus.sys.entity.SysOperationsCenter&quot;&gt;</span></span><br><span class="line">    <span class="string">SELECT</span> <span class="string">soc.*,</span></span><br><span class="line">    <span class="string">su.username</span> <span class="string">as</span> <span class="string">userName,</span></span><br><span class="line">    <span class="string">um.username</span> <span class="string">as</span> <span class="string">memberUsername,</span></span><br><span class="line">    <span class="string">um.nickname</span> <span class="string">as</span> <span class="string">memberNickname</span></span><br><span class="line">    <span class="string">FROM</span> <span class="string">sys_operations_center</span> <span class="string">soc</span></span><br><span class="line">    <span class="string">LEFT</span> <span class="string">JOIN</span> <span class="string">sys_user</span> <span class="string">su</span> <span class="string">ON</span> <span class="string">soc.user_id</span> <span class="string">=</span> <span class="string">su.id</span></span><br><span class="line">    <span class="string">LEFT</span> <span class="string">JOIN</span> <span class="string">ums_member</span> <span class="string">um</span> <span class="string">on</span> <span class="string">soc.member_id</span> <span class="string">=</span> <span class="string">um.id</span></span><br><span class="line">    <span class="string">&lt;if</span> <span class="string">test=&quot;ew.sqlSegment</span> <span class="type">!=</span> <span class="literal">null</span> <span class="string">and</span> <span class="string">ew.sqlSegment</span> <span class="type">!=</span> <span class="string">&#x27;&#x27;</span><span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        WHERE $&#123;ew.sqlSegment&#125;</span></span><br><span class="line"><span class="string">    &lt;/if&gt;</span></span><br><span class="line"><span class="string">&lt;/select&gt;</span></span><br></pre></td></tr></table></figure><br>执行日志</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Execute</span> <span class="keyword">SQL</span>：</span><br><span class="line"><span class="keyword">SELECT</span> soc.<span class="operator">*</span>, su.username <span class="keyword">as</span> userName, um.username <span class="keyword">as</span> memberUsername, um.nickname <span class="keyword">as</span> memberNickname </span><br><span class="line"><span class="keyword">FROM</span> sys_operations_center soc </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys_user su <span class="keyword">ON</span> soc.user_id <span class="operator">=</span> su.id </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ums_member um <span class="keyword">on</span> soc.member_id <span class="operator">=</span> um.id </span><br><span class="line"><span class="keyword">WHERE</span> ( su.username <span class="keyword">LIKE</span> <span class="string">&#x27;%12%&#x27;</span> <span class="keyword">OR</span> um.username <span class="keyword">LIKE</span> <span class="string">&#x27;%12%&#x27;</span> <span class="keyword">OR</span> um.nickname <span class="keyword">LIKE</span> <span class="string">&#x27;%12%&#x27;</span> )</span><br></pre></td></tr></table></figure><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><h4 id="Caused-by-org-apache-ibatis-builder-BuilderException-Error-evaluating-expression-‘ew-customSqlSegment’"><a href="#Caused-by-org-apache-ibatis-builder-BuilderException-Error-evaluating-expression-‘ew-customSqlSegment’" class="headerlink" title="Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression ‘ew.customSqlSegment’."></a>Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression ‘ew.customSqlSegment’.</h4><p>因我在查询条件中使用了customSqlSegment，所以报错了。</p><p>版本为：Mybatis Plus 3.0-RC3</p><p>原因</p><p>Mybatis Plus版本过低的问题，需要版本大于或等于3.0.7</p><p>解决</p><ol><li>不升版本改查询条件中的<code>customSqlSegment</code>为<code>sqlSegment</code><br>改为如下即可<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;if test=&quot;ew.sqlSegment != null and ew.sqlSegment != &#x27;&#x27;&quot;&gt;</span><br><span class="line">    WHERE $&#123;ew.sqlSegment&#125;</span><br><span class="line">&lt;/if&gt;</span><br></pre></td></tr></table></figure></li><li>升级版本到3.0.7以上</li></ol><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis Plus 代码生成器（新）使用</title>
      <link href="/2022/06/07/Mybatis-Plus-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%EF%BC%88%E6%96%B0%EF%BC%89/"/>
      <url>/2022/06/07/Mybatis-Plus-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%EF%BC%88%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Mybatis Plus 3.5.2</li><li>Spring Boot 2.3.12.RELEASE</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis-plus begin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-plus end --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-plus-generator begin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-plus-generator end --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- freemarker begin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- freemarker end --&gt;</span></span><br></pre></td></tr></table></figure><p>这里 <code>mybatis-plus-generator</code> 与 <code>mybatis-plus-boot-starter</code> 版本应一致。</p><h4 id="CodeGenerator-示例"><a href="#CodeGenerator-示例" class="headerlink" title="CodeGenerator 示例"></a>CodeGenerator 示例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.axinblog.mall;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line">import com.baomidou.mybatisplus.generator.FastAutoGenerator;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.OutputFile;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line">import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.Collections;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Mybatis Plus 代码生成器（新版）</span><br><span class="line"> */</span><br><span class="line">public class CodeGenerator &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 数据库配置</span><br><span class="line">        DataSourceConfig.Builder dataSourceConfigBuilder = new DataSourceConfig</span><br><span class="line">                .Builder(&quot;jdbc:mysql://192.168.10.10:3306/axinblog&quot; +</span><br><span class="line">                &quot;?useSSL=false&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&quot;</span><br><span class="line">                , &quot;homestead&quot;, &quot;secret&quot;);</span><br><span class="line">        FastAutoGenerator.create(dataSourceConfigBuilder)</span><br><span class="line">                // 全局配置</span><br><span class="line">                .globalConfig((scanner, builder) -&gt; &#123;</span><br><span class="line">                    builder.author(scanner.apply(&quot;请输入作者名称？&quot;))</span><br><span class="line">                            // 覆盖已生成文件</span><br><span class="line">                            .fileOverride()</span><br><span class="line">                            // 指定输出目录</span><br><span class="line">                            .outputDir(System.getProperty(&quot;user.dir&quot;) + &quot;/axin-core/src/main/java/&quot;)</span><br><span class="line">                            // 开启 swagger 模式</span><br><span class="line">                            .enableSwagger()</span><br><span class="line">                            // 禁止打开输出目录</span><br><span class="line">                            .disableOpenDir()</span><br><span class="line">                            // 时间策略</span><br><span class="line">                            .dateType(DateType.ONLY_DATE)</span><br><span class="line">                            // 类注释日期的格式</span><br><span class="line">                            .commentDate(&quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br><span class="line">                            .build();</span><br><span class="line">                &#125;)</span><br><span class="line">                // 包配置</span><br><span class="line">                .packageConfig((scanner, builder) -&gt; &#123;</span><br><span class="line">                    // 父包名</span><br><span class="line">                    builder.parent(scanner.apply(&quot;请输入父包名？&quot;))</span><br><span class="line">                            // 模块名</span><br><span class="line">                            .moduleName(scanner.apply(&quot;请输入模块名？&quot;))</span><br><span class="line">                            // Entity 包名</span><br><span class="line">                            .entity(&quot;entity&quot;)</span><br><span class="line">                            // Service 包名</span><br><span class="line">                            .service(&quot;service&quot;)</span><br><span class="line">                            //Service Impl 包名</span><br><span class="line">                            .serviceImpl(&quot;service.impl&quot;)</span><br><span class="line">                            // Controller 包名</span><br><span class="line">                            .controller(&quot;controller&quot;)</span><br><span class="line">                            // Mapper 包名</span><br><span class="line">                            .mapper(&quot;mapper&quot;)</span><br><span class="line">                            // MapperXML 包名</span><br><span class="line">                            .xml(scanner.apply(&quot;请输入MapperXML包名？&quot;))</span><br><span class="line">                            // 路径配置信息</span><br><span class="line">                            .pathInfo(</span><br><span class="line">                                    Collections.singletonMap(</span><br><span class="line">                                            OutputFile.xml,</span><br><span class="line">                                            System.getProperty(&quot;user.dir&quot;) + &quot;/axin-core/src/main/resources/mapper/&quot; + scanner.apply(&quot;请再次输入MapperXML包名~&quot;)</span><br><span class="line">                                    )</span><br><span class="line">                            );</span><br><span class="line">                &#125;)</span><br><span class="line">                //策略配置</span><br><span class="line">                .strategyConfig((scanner, builder) -&gt; &#123;</span><br><span class="line">                    // 增加表匹配(内存过滤)，include 与 exclude 只能配置一项</span><br><span class="line">                    builder.addInclude(getTables(scanner.apply(&quot;请输入要生成的表名，多个英文逗号分隔？所有输入 all&quot;)))</span><br><span class="line">                            // 增加表排除匹配(内存过滤)，include 与 exclude 只能配置一项</span><br><span class="line">                            // .addExclude(scanner.apply(&quot;请输入要忽略的表名，多个英文逗号分隔？&quot;))</span><br><span class="line">                            // 增加过滤表后缀</span><br><span class="line">                            .addTableSuffix(&quot;&quot;)</span><br><span class="line">                            // 增加过滤表前缀</span><br><span class="line">                            .addTablePrefix(&quot;&quot;)</span><br><span class="line">                            // service 策略配置</span><br><span class="line">                            .serviceBuilder()</span><br><span class="line">                            // 格式化文件名称</span><br><span class="line">                            // .formatServiceFileName(&quot;%sService&quot;)</span><br><span class="line">                            .formatServiceImplFileName(&quot;%sServiceImpl&quot;)</span><br><span class="line">                            // 实体策略配置</span><br><span class="line">                            .entityBuilder()</span><br><span class="line">                            // 开启 lombok 模型</span><br><span class="line">                            .enableLombok()</span><br><span class="line">                            // 开启生成实体时生成字段注解</span><br><span class="line">                            .enableTableFieldAnnotation()</span><br><span class="line">                            // controller 策略配置</span><br><span class="line">                            .controllerBuilder()</span><br><span class="line">                            .formatFileName(&quot;%sController&quot;)</span><br><span class="line">                            // 开启生成@RestController 控制器</span><br><span class="line">                            .enableRestStyle()</span><br><span class="line">                            // mapper 策略配置</span><br><span class="line">                            .mapperBuilder()</span><br><span class="line">                            // 设置父类</span><br><span class="line">                            .superClass(BaseMapper.class)</span><br><span class="line">                            .formatMapperFileName(&quot;%sMapper&quot;)</span><br><span class="line">                            .enableMapperAnnotation()</span><br><span class="line">                            .formatXmlFileName(&quot;%sMapper&quot;);</span><br><span class="line">                &#125;)</span><br><span class="line">                // 使用Freemarker引擎模板，默认的是Velocity引擎模板</span><br><span class="line">                .templateEngine(new FreemarkerTemplateEngine())</span><br><span class="line">                // 不生成控制器代码</span><br><span class="line">                .templateConfig(builder -&gt; builder.controller(&quot;&quot;))</span><br><span class="line">                .execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 处理 all 情况</span><br><span class="line">     */</span><br><span class="line">    protected static List&lt;String&gt; getTables(String tables) &#123;</span><br><span class="line">        return &quot;all&quot;.equals(tables) ? Collections.emptyList() : Arrays.asList(tables.split(&quot;,&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="不生成Controller"><a href="#不生成Controller" class="headerlink" title="不生成Controller"></a>不生成Controller</h4><p>设置 <code>Controller</code> 模板为空即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 不生成控制器代码</span><br><span class="line">.templateConfig(builder -&gt; builder.controller(&quot;&quot;))</span><br></pre></td></tr></table></figure><h4 id="Error-attempting-to-get-column-‘create-time’-from-result-set-Cause-java-sql-SQLFeatureNotSupported"><a href="#Error-attempting-to-get-column-‘create-time’-from-result-set-Cause-java-sql-SQLFeatureNotSupported" class="headerlink" title="Error attempting to get column ‘create_time’ from result set. Cause: java.sql.SQLFeatureNotSupported"></a>Error attempting to get column ‘create_time’ from result set. Cause: java.sql.SQLFeatureNotSupported</h4><p>更改<code>entity</code> 类中 <code>LocalDateTime</code> 为 <code>Date</code></p><p>因代码为<code>Mybatis Plus</code>生成，配置代码生成为如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 时间策略</span><br><span class="line">.dateType(DateType.ONLY_DATE)</span><br></pre></td></tr></table></figure><h4 id="mybatis-plus-net-sf-jsqlparser-schema-Column-withColumnName"><a href="#mybatis-plus-net-sf-jsqlparser-schema-Column-withColumnName" class="headerlink" title="mybatis plus net.sf.jsqlparser.schema.Column.withColumnName"></a>mybatis plus net.sf.jsqlparser.schema.Column.withColumnName</h4><p>Mybatis Plus 与 PageHelper jsqlparser 依赖版本冲突</p><p>解决如下</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 解决jsqlparser 依赖版本冲突--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我这还出现因老项目神奇的引入了多个PageHelper也会出现该问题</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--MyBatis分页插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>删除其中多余的即可</p><p>全部报错信息如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">***************************</span><br><span class="line">APPLICATION FAILED TO START</span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line"></span><br><span class="line">An attempt was made to call a method that does not exist. The attempt was made from the following location:</span><br><span class="line"></span><br><span class="line">    com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor.&lt;clinit&gt;(PaginationInnerInterceptor.java:70)</span><br><span class="line"></span><br><span class="line">The following method did not exist:</span><br><span class="line"></span><br><span class="line">    net.sf.jsqlparser.schema.Column.withColumnName(Ljava/lang/String;)Lnet/sf/jsqlparser/schema/Column;</span><br><span class="line"></span><br><span class="line">The method&#x27;s class, net.sf.jsqlparser.schema.Column, is available from the following locations:</span><br><span class="line"></span><br><span class="line">    jar:file:/C:/Program%20Files/maven/apache-maven-3.6.3/repository/com/github/jsqlparser/jsqlparser/1.2/jsqlparser-1.2.jar!/net/sf/jsqlparser/schema/Column.class</span><br><span class="line"></span><br><span class="line">The class hierarchy was loaded from the following locations:</span><br><span class="line"></span><br><span class="line">    net.sf.jsqlparser.schema.Column: file:/C:/Program%20Files/maven/apache-maven-3.6.3/repository/com/github/jsqlparser/jsqlparser/1.2/jsqlparser-1.2.jar</span><br><span class="line">    net.sf.jsqlparser.parser.ASTNodeAccessImpl: file:/C:/Program%20Files/maven/apache-maven-3.6.3/repository/com/github/jsqlparser/jsqlparser/1.2/jsqlparser-1.2.jar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Action:</span><br><span class="line"></span><br><span class="line">Correct the classpath of your application so that it contains a single, compatible version of net.sf.jsqlparser.schema.Column</span><br><span class="line"></span><br><span class="line">Disconnected from the target VM, address: &#x27;127.0.0.1:63407&#x27;, transport: &#x27;socket&#x27;</span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://baomidou.com/pages/981406/">代码生成器配置新</a></p>]]></content>
      
      
      <categories>
          
          <category> Mybatis Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis Plus </tag>
            
            <tag> 新版本代码生成器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA之解决快捷键冲突</title>
      <link href="/2022/05/28/IntelliJ-IDEA%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%86%B2%E7%AA%81/"/>
      <url>/2022/05/28/IntelliJ-IDEA%E4%B9%8B%E8%A7%A3%E5%86%B3%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%86%B2%E7%AA%81/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Windows 10</li><li>Idea 2021.3.1</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>最近 <code>Idea</code> 突然 <code>Redo</code> 重做快捷键失效 <code>Ctrl + Shift + Z</code> </p><p>跟着一起失效的有 <code>Open in</code> -&gt; <code>Directory Path</code> 快捷键 <code>Ctrl + Alt + F12</code></p><p>之前有碰见过是因为 搜狗的输入法 快捷键冲突导致，这次我把所有软件关闭还是不行。</p><p>强迫症使然，解决它</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>重要的事情说三遍</p><p>关于流氓软件<code>windows hotkey explore</code>， 千万别使用，用后死机。<br>关于流氓软件<code>windows hotkey explore</code>， 千万别使用，用后死机。<br>关于流氓软件<code>windows hotkey explore</code>， 千万别使用，用后死机。</p><h4 id="OpenArk"><a href="#OpenArk" class="headerlink" title="OpenArk"></a>OpenArk</h4><p>下载</p><p><a href="https://github.com/BlackINT3/OpenArk/releases">OpenArk下载地址</a></p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>进入内核模式</p><p><img src="/images/idea_shortcut_key_conflict_1.png" alt=""></p><p>查找相应的快捷键冲突，右键删除即可</p><p><img src="/images/idea_shortcut_key_conflict_2.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> IntelliJ IDEA </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Frp 使用NSSM配置为Windows服务</title>
      <link href="/2022/05/24/Frp-%E4%BD%BF%E7%94%A8NSSM%E9%85%8D%E7%BD%AE%E4%B8%BAWindows%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/05/24/Frp-%E4%BD%BF%E7%94%A8NSSM%E9%85%8D%E7%BD%AE%E4%B8%BAWindows%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>windows 10</li><li>NSSM 2.24</li><li>Frp</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="下载NSSM"><a href="#下载NSSM" class="headerlink" title="下载NSSM"></a>下载NSSM</h4><p><a href="https://nssm.cc/download">下载地址</a></p><p>解压</p><p>配置环境变量（可选）</p><p>根据平台架构，在 <code>nssm.exe</code> 所在目录下 shift+ 右键</p><p>打开 <code>powershell</code></p><p>输入 <code>nssm install frpc</code> (这里frpc为我定义的服务名，这里看官随意)</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="/images/frp_nssm_windows_1.png" alt=""></p><p>注：</p><ul><li><code>Path</code> 程序路径</li><li><code>Startup directory</code> 选择 <code>Path</code> 会自动配置</li><li><code>Arguments</code> 为启动参数，<code>frps</code> 配置为 <code>-c frps.ini</code>，<code>frpc</code> 配置为 <code>-c frpc.ini</code></li></ul><p>如图按需配置后</p><p>点击 <code>Install service</code> 即可</p><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><p>使用 <code>nssm -h</code>可以看到相应命令说明</p><p><img src="/images/frp_nssm_windows_2.png" alt=""></p><p>常用命令<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">显示安装服务GUI：nssm install [&lt;servicename&gt;]</span><br><span class="line">启动服务：nssm start [&lt;servicename&gt;]</span><br><span class="line">停止服务：nssm stop [&lt;servicename&gt;]</span><br><span class="line">重启服务: nssm restart [&lt;servicename&gt;]</span><br><span class="line">编辑服务: nssm edit [&lt;servicename&gt;]</span><br><span class="line">删除服务：nssm remove [&lt;servicename&gt;]</span><br></pre></td></tr></table></figure></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="Windows远程桌面出现CredSSP加密数据修正问题解决方案"><a href="#Windows远程桌面出现CredSSP加密数据修正问题解决方案" class="headerlink" title="Windows远程桌面出现CredSSP加密数据修正问题解决方案"></a>Windows远程桌面出现CredSSP加密数据修正问题解决方案</h4><p><img src="/images/frp_nssm_windows_3.png" alt=""></p><p>在用 <code>win10</code> 使用 <code>frpc</code> 远程一台 <code>win7</code> 时碰见的情况</p><p>解决</p><p>更改控制机 <code>win10</code></p><p><img src="/images/frp_nssm_windows_4.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、win+R打开运行窗口，输入gpedit.msc命令，点击“确定”</span><br><span class="line"></span><br><span class="line">2、依次展开“计算机配置”-&gt;“管理模板”-&gt;“系统”-&gt;“凭据分配”设置名称： 加密数据库修正</span><br><span class="line"></span><br><span class="line">3、双击“加密数据库修正”，将状态改为“启用”，保护级别改为“易受攻击”，应用—&gt;确定</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/weixin_43184774/article/details/106230716">Windows远程桌面出现CredSSP加密数据修正问题解决方案</a></p>]]></content>
      
      
      <categories>
          
          <category> Frp </category>
          
          <category> NSSM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 自动生成serialVersionUID</title>
      <link href="/2022/05/19/Idea-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90serialVersionUID/"/>
      <url>/2022/05/19/Idea-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90serialVersionUID/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>IntelliJ IDEA 2021.3.1</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/18/MybatisPlus-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/05/18/MybatisPlus-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis plus --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis plus generator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="CodeGenerator"><a href="#CodeGenerator" class="headerlink" title="CodeGenerator"></a>CodeGenerator</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">package cn.axinblog;</span><br><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">import cn.axinblog.utils.StringUtils;</span><br><span class="line">import com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;</span><br><span class="line">import com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Mybatis Plus Code Generator</span><br><span class="line"> * 使用时先修改下面数据库连接信息</span><br><span class="line"> */</span><br><span class="line">public class CodeGenerator &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 代码生成器</span><br><span class="line">        AutoGenerator mpg = new AutoGenerator();</span><br><span class="line"></span><br><span class="line">        // 全局配置</span><br><span class="line">        GlobalConfig gc = new GlobalConfig();</span><br><span class="line">        String userHomePath = System.getProperty(&quot;user.dir&quot;);</span><br><span class="line">        String projectPath = &quot;\\路径&quot;;</span><br><span class="line">        // 输出目录</span><br><span class="line">        gc.setOutputDir(userHomePath + projectPath + &quot;/src/main/java&quot;);</span><br><span class="line">        // 生成注释时的作者</span><br><span class="line">        gc.setAuthor(&quot;Red&quot;);</span><br><span class="line">        // 开启Swagger</span><br><span class="line">        gc.setSwagger2(true);</span><br><span class="line">        // 是否覆蓋已有文件 默认值：false 备注：第二次生成会把第一次生成的覆盖掉</span><br><span class="line">        gc.setFileOverride(true);</span><br><span class="line">        // 生成的service接口名字首字母是否为I</span><br><span class="line">        gc.setServiceName(&quot;%sService&quot;);</span><br><span class="line">        // 生成resultMap</span><br><span class="line">        gc.setBaseResultMap(true);</span><br><span class="line">        // 是否打开输出目录 默认值:true</span><br><span class="line">        gc.setOpen(false);</span><br><span class="line">        // 开启 ActiveRecord 模式 默认值：false</span><br><span class="line">        gc.setActiveRecord(true);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        // 数据源配置</span><br><span class="line">        DataSourceConfig dsc = new DataSourceConfig();</span><br><span class="line">        dsc.setUrl(&quot;jdbc:mysql://192.168.10.10:3306/数据库?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;useSSL=false&amp;zeroDateTimeBehavior=convertToNull&amp;serverTimezone=Asia/Shanghai&quot;);</span><br><span class="line">        dsc.setDriverName(&quot;com.mysql.cj.jdbc.Driver&quot;);</span><br><span class="line">        dsc.setUsername(&quot;homestead&quot;);</span><br><span class="line">        dsc.setPassword(&quot;secret&quot;);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        // 包配置</span><br><span class="line">        PackageConfig pc = new PackageConfig();</span><br><span class="line">        pc.setParent(&quot;cn.axinblog&quot;);</span><br><span class="line">        pc.setModuleName(&quot;business&quot;);</span><br><span class="line">        pc.setController(&quot;controller&quot;);</span><br><span class="line">        pc.setEntity(&quot;entity&quot;);</span><br><span class="line">        pc.setMapper(&quot;mapper&quot;);</span><br><span class="line">        pc.setService(&quot;service&quot;);</span><br><span class="line">        pc.setServiceImpl(&quot;service.impl&quot;);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        // 配置自定义输出模板 指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span><br><span class="line">        TemplateConfig templateConfig = new TemplateConfig();</span><br><span class="line">        templateConfig.setEntity(&quot;templates/entity.java&quot;);</span><br><span class="line">        // templateConfig.setService();</span><br><span class="line">        // templateConfig.setController();</span><br><span class="line">        // 控制不生成 controller 文件</span><br><span class="line">        templateConfig.setController(null);</span><br><span class="line">        // 控制不生成 xml 文件</span><br><span class="line">        templateConfig.setXml(null);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line"></span><br><span class="line">        // 策略配置</span><br><span class="line">        StrategyConfig strategy = new StrategyConfig();</span><br><span class="line">        // 表名生成策略(下划线转驼峰)</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        // 字段名生成策略(下划线转驼峰)</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        // 使用lombok实体模型 默认值：false</span><br><span class="line">        strategy.setEntityLombokModel(true);</span><br><span class="line">        // 生成 @RestController 控制器</span><br><span class="line">        strategy.setRestControllerStyle(false);</span><br><span class="line">        // 公共Entity类父类</span><br><span class="line">        strategy.setSuperEntityClass(&quot;cn.axinblog.base.entity.BaseEntity&quot;);</span><br><span class="line">        // 公共控制器父类</span><br><span class="line">        // strategy.setSuperControllerClass(&quot;你自己的父类控制器,没有就不用设置!&quot;);</span><br><span class="line">        // 写于父类中的公共字段</span><br><span class="line">        // strategy.setSuperEntityColumns(&quot;id&quot;);</span><br><span class="line">        strategy.setInclude(scanner(&quot;表名，多个英文逗号分割&quot;).split(&quot;,&quot;));</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(true);</span><br><span class="line">        // 表名前缀</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + &quot;_&quot;);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        // 执行操作</span><br><span class="line">        mpg.execute();</span><br><span class="line">        System.out.println(&quot;=======  Mybatis Plus Generator Done  ========&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * &lt;p&gt;</span><br><span class="line">     * 读取控制台内容</span><br><span class="line">     * &lt;/p&gt;</span><br><span class="line">     */</span><br><span class="line">    public static String scanner(String tip) &#123;</span><br><span class="line">        Scanner scanner = new Scanner(System.in);</span><br><span class="line">        StringBuilder help = new StringBuilder();</span><br><span class="line">        help.append(&quot;请输入&quot; + tip + &quot;：&quot;);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        if (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            if (StringUtils.isNotBlank(ipt)) &#123;</span><br><span class="line">                return ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        throw new MybatisPlusException(&quot;请输入正确的&quot; + tip + &quot;！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="’AutoGenerator-‘-has-private-access-in-‘com-baomidou-mybatisplus-generator-AutoGenerator’"><a href="#’AutoGenerator-‘-has-private-access-in-‘com-baomidou-mybatisplus-generator-AutoGenerator’" class="headerlink" title="’AutoGenerator()‘ has private access in ‘com.baomidou.mybatisplus.generator.AutoGenerator’"></a>’AutoGenerator()‘ has private access in ‘com.baomidou.mybatisplus.generator.AutoGenerator’</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis plus --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis plus generator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>pom.xml</code> 中<code>mybatis-Plus</code> 依赖版本是 <code>3.3.2</code><br>应该是版本不兼容问题，把mybatis-plus-generator依赖换成 3.3.2<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.3.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><h4 id="Loading-class-com-mysql-jdbc-Driver’-This-is-deprecated"><a href="#Loading-class-com-mysql-jdbc-Driver’-This-is-deprecated" class="headerlink" title="Loading class `com.mysql.jdbc.Driver’. This is deprecated."></a>Loading class `com.mysql.jdbc.Driver’. This is deprecated.</h4><p>错误详细</p><p><code>Loading class</code>com.mysql.jdbc.Driver’. This is deprecated. The new driver class is <code>com.mysql.cj.jdbc.Driver&#39;. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数据源配置</span></span><br><span class="line"><span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">dsc.setDriverName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">改为以下</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据源配置</span></span><br><span class="line"><span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://baomidou.com/pages/d357af/#%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B">代码生成器（旧）</a></p><p><a href="https://baomidou.com/pages/061573/#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE">代码生成器配置旧</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/05/13/ActiveMQ-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/05/13/ActiveMQ-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Win10</li><li>CentOS Linux release 8.5.2111</li><li>ActiveMQ 5.15.9</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Windows-安装ActiveMQ"><a href="#Windows-安装ActiveMQ" class="headerlink" title="Windows 安装ActiveMQ"></a>Windows 安装ActiveMQ</h4><h4 id="Centos-安装ActiveMQ"><a href="#Centos-安装ActiveMQ" class="headerlink" title="Centos 安装ActiveMQ"></a>Centos 安装ActiveMQ</h4><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="Illegal-character-in-hostname-at-index-10"><a href="#Illegal-character-in-hostname-at-index-10" class="headerlink" title="Illegal character in hostname at index 10"></a>Illegal character in hostname at index 10</h4><p>执行</p><p><code>activemq start</code></p><p>报错如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2022-05-13 14:19:36,777 | ERROR | Failed to start Apache ActiveMQ (localhost, ID:power_prod-26605-1652422776568-0:1) | org.apache.activemq.broker.BrokerService | main</span><br><span class="line">java.net.URISyntaxException: Illegal character in hostname at index 10: ws://power_prod:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kraots consul 注册中心的使用</title>
      <link href="/2022/04/20/kraots-consul-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/04/20/kraots-consul-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>windows</li><li>go version go1.17.6 windows/amd64</li><li>goland</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p><img src="/images/kratos_consul_1.png" alt=""></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Consul Ubuntu 部署</title>
      <link href="/2022/03/25/Consul-Ubuntu-%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/03/25/Consul-Ubuntu-%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Ubuntu 20.04.3 LTS</li><li>Consul 1.11.4</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>下载</p><p><a href="https://www.consul.io/downloads">Download Consul</a></p><blockquote><p> wget <a href="https://releases.hashicorp.com/consul/1.11.4/consul_1.11.4_linux_amd64.zip">https://releases.hashicorp.com/consul/1.11.4/consul_1.11.4_linux_amd64.zip</a></p></blockquote><p>解压</p><p><code>unzip consul_1.11.4_linux_amd64.zip</code></p><p>复制到/usr/local/bin下</p><p><code>sudo mv consul /usr/local/bin/consul</code></p><p>验证</p><p><code>consul -v</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># root @ axinblog in ~/software [16:57:08]</span><br><span class="line">$ consul -v</span><br><span class="line">Consul v1.11.4</span><br><span class="line">Revision 944e8ce6</span><br><span class="line">Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol &gt;2 when speaking to compatible agents)</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>Sever 模式，快捷配置，一般用于调试模式，不建议使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地运行</span><br><span class="line">consul agent -dev</span><br><span class="line"></span><br><span class="line">远程机器</span><br><span class="line">consul agent -dev  -client 0.0.0.0</span><br><span class="line">or</span><br><span class="line">consul agent -dev  -client 远程机器IP</span><br></pre></td></tr></table></figure><p>Sever 模式</p><p><code>consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -ui  -config-dir /etc/consul.d -bind=0.0.0.0</code></p><p>配置参数说明</p><ul><li>server：- Serve 模式（不配置为 Client 模式），数量一般为 3-5 个</li><li>bootstrap-expect： - Server 数量</li><li>data-dir： - 数据目录</li><li>ui-dir： - UI目录</li><li>node： - Node名称</li><li>bind： - 集群通讯地址</li></ul><p>Server 模式后台访问地址：<a href="http://localhost:8500">http://localhost:8500</a></p><p>ctrl + c：停止服务</p><p>Client 模式</p><p><code>consul agent -data-dir /tmp/consul -node=ubuntu64 -bind=ip</code></p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p>查看集群成员</p><p><code>consul members</code></p><p>查看当前服务器的状况</p><p><code>consul info</code></p><p>退出当前服务集群</p><p><code>consul leave</code></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://learn.hashicorp.com/tutorials/consul/get-started-install">Install Consul</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/15/DApp%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2022/03/15/DApp%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>truffle v5.5.2<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">  15/03/2022   20:30.59   /home/mobaxterm  truffle version</span><br><span class="line">Truffle v5.5.2 (core: 5.5.2)</span><br><span class="line">Ganache v7.0.1</span><br><span class="line">Solidity v0.5.16 (solc-js)</span><br><span class="line">Node v14.18.3</span><br><span class="line">Web3.js v1.5.3</span><br></pre></td></tr></table></figure></li><li>win10</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="MetaMask-添加币安测试链-amp-主键"><a href="#MetaMask-添加币安测试链-amp-主键" class="headerlink" title="MetaMask 添加币安测试链&amp;主键"></a>MetaMask 添加币安测试链&amp;主键</h4><p>参考</p><p><a href="https://docs.binance.org/smart-chain/developer/rpc.html#testnetchainid-0x61-97-in-decimal">JSON-RPC Endpoint</a></p><p><img src="/images/dapp_2_1.png" alt=""></p><p>测试网<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">网络名称（ Network Name）：Smart Chain - Testnet</span><br><span class="line">新的RPC URL（ New RPC URL）：https://data-seed-prebsc-1-s1.binance.org:8545/</span><br><span class="line">智能链ID（ChainID）：97</span><br><span class="line">符号（Symbol）：BNB</span><br><span class="line">区块浏览器URL（Block Explorer URL）：https://testnet.bscscan.com</span><br></pre></td></tr></table></figure><br>主网<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">网络名称（ Network Name）：Smart Chain</span><br><span class="line">新的RPC URL（ New RPC URL）：https://bsc-dataseed.binance.org/</span><br><span class="line">智能链ID（ChainID）：56</span><br><span class="line">符号（Symbol）：BNB</span><br><span class="line">区块浏览器URL（Block Explorer URL）：https://bscscan.com</span><br></pre></td></tr></table></figure></p><h4 id="获取测试币"><a href="#获取测试币" class="headerlink" title="获取测试币"></a>获取测试币</h4><p><a href="https://testnet.binance.org/faucet-smart">水龙头</a></p><p><img src="/images/dapp_2_2.png" alt=""></p><p>获取稍等一会就可以看到你的钱包测试币已到账</p><p><img src="/images/dapp_2_3.png" alt=""></p><h3 id=""><a href="#" class="headerlink" title="#"></a>#</h3><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://academy.binance.com/zh">Binance Academy</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LNMP 环境下安装gmp扩展</title>
      <link href="/2022/03/15/LNMP-%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85gmp%E6%89%A9%E5%B1%95/"/>
      <url>/2022/03/15/LNMP-%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85gmp%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>起因是因我要安装</p><p><code>web3p/ethereum-tx</code></p><p>执行</p><p><code>composer require web3p/ethereum-tx</code></p><p>报错内容如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># root @ www.axinblog.com in /home/wwwroot/axinblog on git:develop x [19:08:55]</span><br><span class="line">$ composer require web3p/ethereum-tx</span><br><span class="line">Do not run Composer as root/super user! See https://getcomposer.org/root for details</span><br><span class="line">Continue as root/super user [yes]? yes</span><br><span class="line">Using version ^0.4.3 for web3p/ethereum-tx</span><br><span class="line">./composer.json has been updated</span><br><span class="line">Running composer update web3p/ethereum-tx</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Updating dependencies</span><br><span class="line">Your requirements could not be resolved to an installable set of packages.</span><br><span class="line"></span><br><span class="line">  Problem 1</span><br><span class="line">    - simplito/elliptic-php[1.0.6, ..., 1.0.9] require ext-gmp * -&gt; it is missing from your system. Install or enable PHP&#x27;s gmp extension.</span><br><span class="line">    - web3p/ethereum-tx 0.4.3 requires simplito/elliptic-php ~1.0.6 -&gt; satisfiable by simplito/elliptic-php[1.0.6, 1.0.7, 1.0.8, 1.0.9].</span><br><span class="line">    - Root composer.json requires web3p/ethereum-tx ^0.4.3 -&gt; satisfiable by web3p/ethereum-tx[0.4.3].</span><br><span class="line"></span><br><span class="line">To enable extensions, verify that they are enabled in your .ini files:</span><br><span class="line">    - /usr/local/php/etc/php.ini</span><br><span class="line">    - /usr/local/php/conf.d/007-redis.ini</span><br><span class="line">You can also run `php --ini` inside terminal to see which files are used by PHP in CLI mode.</span><br><span class="line"></span><br><span class="line">Installation failed, reverting ./composer.json and ./composer.lock to their original content.</span><br></pre></td></tr></table></figure><h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Ubuntu 18.04.6 LTS</li><li>LNMP 1.8</li><li>PHP 7.3.28 &amp; PHP 8.0.8 均测试通过</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="安装-GMP-开发库"><a href="#安装-GMP-开发库" class="headerlink" title="安装 GMP 开发库"></a>安装 <code>GMP</code> 开发库</h4><p><code>sudo apt-get install libgmp-dev</code></p><h4 id="安装-PHP-GMP-扩展"><a href="#安装-PHP-GMP-扩展" class="headerlink" title="安装 PHP GMP 扩展"></a>安装 <code>PHP</code> GMP 扩展</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/lnmp1.8/src</span><br><span class="line">$ tar jxvf php-7.3.28.tar.bz2</span><br><span class="line">$ cd php-7.3.28/ext/gmp</span><br><span class="line">$ /usr/local/php/bin/phpize</span><br><span class="line">$ ./configure --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>这里没装<code>GMP 开发库</code></p><p>会报错</p><p><code>configure: error: Unable to locate gmp.h</code></p><h5 id="启用扩展"><a href="#启用扩展" class="headerlink" title="启用扩展"></a>启用扩展</h5><p><code>/usr/local/php/etc/php.ini</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;extension=gmp</span><br><span class="line">改</span><br><span class="line">extension=gmp</span><br></pre></td></tr></table></figure><p>重启<code>LNMP</code></p><p><code>lnmp reload</code></p><p>查看是否启用成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ php -m | grep gmp</span><br><span class="line">gmp</span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="sc0vu-web3-php-0-1-4-requires-php-7-1-gt-your-php-version-8-0-8-does-not-satisfy-that-requirement"><a href="#sc0vu-web3-php-0-1-4-requires-php-7-1-gt-your-php-version-8-0-8-does-not-satisfy-that-requirement" class="headerlink" title="sc0vu/web3.php 0.1.4 requires php ^7.1 -&gt; your php version (8.0.8) does not satisfy that requirement."></a>sc0vu/web3.php 0.1.4 requires php ^7.1 -&gt; your php version (8.0.8) does not satisfy that requirement.</h4><p>解决</p><p><code>composer install --ignore-platform-reqs</code></p><p>or</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;=7.3&quot;,</span><br><span class="line">    .....</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>改<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;^7.3|^8.0&quot;,</span><br><span class="line">    .....</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.php.net/manual/zh/gmp.setup.php">PHP 手册 函数参考 数学扩展 GMP</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 时间同步</title>
      <link href="/2022/03/14/Ubuntu-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
      <url>/2022/03/14/Ubuntu-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Ubuntu 21.10</li></ul><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>有个接口报错，debug后是服务器时间跟接口服务器时间对不上，然该服走代理使用<code>ntpdate</code>时间同步报错</p><p><code>14 Mar 13:18:32 ntpdate[2101582]: no server suitable for synchronization found</code></p><p>关闭代理又正常，然服务代理不能关。</p><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="ntpdate-时间同步"><a href="#ntpdate-时间同步" class="headerlink" title="ntpdate 时间同步"></a>ntpdate 时间同步</h4><p>安装</p><p><code>apt-get install ntpdate</code></p><p>与网络服务器同步时间<br><code>ntpdate cn.pool.ntp.org</code></p><h4 id="htpdate-时间同步"><a href="#htpdate-时间同步" class="headerlink" title="htpdate 时间同步"></a>htpdate 时间同步</h4><p>因ntp同步失败，使用htpdate进行同步</p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ul><li><p>编译安装：</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/iridium77/htpdate</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure></li><li><p>apt-get install htpdate</p></li></ul><h5 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">htpdate -t -s cn.pool.ntp.org</span><br></pre></td></tr></table></figure><p>配置定时同步</p><p><code>crontab -e</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 3 * * * /usr/sbin/htpdate -t -s cn.pool.ntp.org</span><br></pre></td></tr></table></figure><p>参数详细</p><p><code>htpdate -h</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">htpdate version 1.2.2</span><br><span class="line">Usage: htpdate [-046abdhlqstxD] [-i pid file] [-m minpoll] [-M maxpoll]</span><br><span class="line">         [-p precision] [-P &lt;proxyserver&gt;[:port]] [-u user[:group]]</span><br><span class="line">         &lt;host[:port]&gt; ...</span><br><span class="line"></span><br><span class="line">  -0    HTTP/1.0 request</span><br><span class="line">  -4    Force IPv4 name resolution only</span><br><span class="line">  -6    Force IPv6 name resolution only</span><br><span class="line">  -a    adjust time smoothly</span><br><span class="line">  -b    burst mode</span><br><span class="line">  -d    debug mode</span><br><span class="line">  -D    daemon mode</span><br><span class="line">  -h    help</span><br><span class="line">  -i    pid file</span><br><span class="line">  -l    use syslog for output</span><br><span class="line">  -m    minimum poll interval</span><br><span class="line">  -M    maximum poll interval</span><br><span class="line">  -p    precision (ms)</span><br><span class="line">  -P    proxy server</span><br><span class="line">  -q    query only, don&#x27;t make time changes (default)</span><br><span class="line">  -s    set time</span><br><span class="line">  -t    turn off sanity time check</span><br><span class="line">  -u    run daemon as user</span><br><span class="line">  -x    adjust kernel clock</span><br><span class="line">  host  web server hostname or ip address (maximum of 16)</span><br><span class="line">  port  port number (default 80 and 8080 for proxy server)</span><br></pre></td></tr></table></figure><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>配置<code>netpaln</code>有遇到报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@axinblog:/etc/netplan# vim 00-installer-config.yaml</span><br><span class="line">root@axinblog:/etc/netplan# netplan apply</span><br><span class="line"></span><br><span class="line">** (generate:2184865): WARNING **: 13:28:38.017: `gateway4` has been deprecated, use default routes instead.</span><br><span class="line">See the &#x27;Default routes&#x27; section of the documentation for more details.</span><br></pre></td></tr></table></figure><p>参考</p><p><a href="https://unix.stackexchange.com/questions/681220/netplan-generate-gateway4-has-been-deprecated-use-default-routes-instead">netplan generate: <code>gateway4</code> 已被弃用，改用默认路由</a></p><p><a href="https://netplan.io/examples/">Netplan configuration examples</a></p><p>解决</p><p><code>vim /etc/netplan/00-installer-config.yaml</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#gateway4: 192.168.1.1</span><br><span class="line"></span><br><span class="line">改为如下</span><br><span class="line">routes:</span><br><span class="line">    - to: default</span><br><span class="line">        via: 192.168.1.1</span><br></pre></td></tr></table></figure><p>应用</p><p><code>netplan apply</code></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://ubuntuqa.com/article/1005.html">ntpdate：没有找到适合于同步的服务器</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FastAdmin Bootstrap Table列表中显示二维码</title>
      <link href="/2022/03/11/FastAdmin-Table%E5%88%97%E8%A1%A8%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
      <url>/2022/03/11/FastAdmin-Table%E5%88%97%E8%A1%A8%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="下载-QRCode-js-文件"><a href="#下载-QRCode-js-文件" class="headerlink" title="下载 QRCode.js 文件"></a>下载 QRCode.js 文件</h4><p><a href="https://github.com/davidshimjs/qrcodejs">QRCode.js</a></p><p>访问不了可以点下面链接下载</p><p><a href="/file/qrcode.min.js">qrcode.min.js</a></p><p>放到路径<code>public/assets/js/qrcode.min.js</code></p><h4 id="修改-require-backend-js"><a href="#修改-require-backend-js" class="headerlink" title="修改 require-backend.js"></a>修改 require-backend.js</h4><p>目录 <code>public/assets/js/require-backend.js</code></p><p><code>paths</code> 增加 <code>qrcode</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paths: &#123;</span><br><span class="line">    &#x27;qrcode&#x27;:&#x27;qrcode.min&#x27;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注：如果你是有使用CDN放前端静态资源，需要使用<code>php think min -m backend -r all</code>来重新打包核心静态文件，并上传更新你的CDN文件</p></blockquote><h4 id="控制器JS"><a href="#控制器JS" class="headerlink" title="控制器JS"></a>控制器JS</h4><p>例如我的<code>public/assets/js/backend/wallet.js</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">define([&#x27;jquery&#x27;, &#x27;bootstrap&#x27;, &#x27;backend&#x27;, &#x27;table&#x27;, &#x27;form&#x27;, &#x27;jstree&#x27;, &#x27;qrcode&#x27;], function ($, undefined, Backend, Table, Form, undefined, undefined) &#123;</span><br><span class="line"></span><br><span class="line">    // 如果id=&quot;QRcode&quot;这个DIV写到html中会导致 add or edit 页面报错</span><br><span class="line">    let QRObj = document.getElementById(&quot;QRcode&quot;);</span><br><span class="line">    if (!QRObj) &#123;</span><br><span class="line">        $(&quot;body&quot;).append(&quot;&lt;div id=\&quot;QRcode\&quot; style=\&quot;display: none\&quot;&gt;&lt;/div&gt;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const QR = new QRCode(document.getElementById(&quot;QRcode&quot;), &#123;</span><br><span class="line">        text: &#x27;bscscan&#x27;,</span><br><span class="line">        width: 128,</span><br><span class="line">        height: 128,</span><br><span class="line">        colorDark : &quot;#000000&quot;,</span><br><span class="line">        colorLight : &quot;#ffffff&quot;,</span><br><span class="line">        correctLevel : QRCode.CorrectLevel.H</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    const Controller = &#123;</span><br><span class="line">        index: function () &#123;</span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line">            // 初始化表格</span><br><span class="line">            table.bootstrapTable(&#123;</span><br><span class="line">                url: $.fn.bootstrapTable.defaults.extend.index_url,</span><br><span class="line">                pk: &#x27;id&#x27;,</span><br><span class="line">                sortName: &#x27;id&#x27;,</span><br><span class="line">                columns: [</span><br><span class="line">                    [</span><br><span class="line">                        ...</span><br><span class="line">                        &#123;</span><br><span class="line">                            field: &#x27;account&#x27;,</span><br><span class="line">                            title: __(&#x27;Account&#x27;),</span><br><span class="line">                            operate: &#x27;LIKE %...%&#x27;,</span><br><span class="line">                            placeholder: &#x27;模糊搜索&#x27;,</span><br><span class="line">                            formatter: Controller.api.formatter.qrcode,</span><br><span class="line">                        &#125;,</span><br><span class="line">                       ...</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            // 为表格绑定事件</span><br><span class="line">            Table.api.bindevent(table);</span><br><span class="line"></span><br><span class="line">            // 取消双击编辑</span><br><span class="line">            table.off(&#x27;dbl-click-row.bs.table&#x27;);</span><br><span class="line">        &#125;,</span><br><span class="line">        add: function () &#123;</span><br><span class="line">            Controller.api.bindevent();</span><br><span class="line">        &#125;,</span><br><span class="line">        edit: function () &#123;</span><br><span class="line">            Controller.api.bindevent();</span><br><span class="line">        &#125;,</span><br><span class="line">        api: &#123;</span><br><span class="line">            bindevent: function () &#123;</span><br><span class="line">                Form.api.bindevent($(&quot;form[role=form]&quot;));</span><br><span class="line">            &#125;,</span><br><span class="line">            formatter: &#123;</span><br><span class="line">                qrcode: function (value, row, index) &#123;</span><br><span class="line">                    QR.clear();</span><br><span class="line">                    QR.makeCode(value);</span><br><span class="line">                    let img = $(&quot;#QRcode&quot;).prop(&quot;outerHTML&quot;);</span><br><span class="line">                    return &#x27;&lt;a class=&quot;qrcode label bg-green&quot; data-toggle=&quot;popover&quot; data-title=&quot;&#x27; + __(&#x27;Qr code&#x27;) + &#x27;&quot; data-html=&quot;true&quot; data-content=\&#x27;&#x27;+img + &#x27;\&#x27;&gt; &#x27; + value + &#x27; &lt;/a&gt;&#x27;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    return Controller;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h4><p><img src="/images/fastadmin_table_qrcode.png" alt=""></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://ask.fastadmin.net/article/323.html">一张图解析FastAdmin中的表格列表的功能</a></p>]]></content>
      
      
      <categories>
          
          <category> FastAdmin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FastAdmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang 多平台一键打包</title>
      <link href="/2022/03/04/Golang-%E5%A4%9A%E5%B9%B3%E5%8F%B0%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85/"/>
      <url>/2022/03/04/Golang-%E5%A4%9A%E5%B9%B3%E5%8F%B0%E4%B8%80%E9%94%AE%E6%89%93%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>开发环境：windows 10</li><li>生产环境：Ubuntu 18.04.6 LTS</li><li>goreleaser v1.5.0</li><li>go version go1.17.6 windows/amd64</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>参看 <a href="https://goreleaser.com/install/">Goreleaser Install</a></p><p>可以找到相应系统的安装方式，我这里用的是</p><p><code>go install</code></p><p><code>go install github.com/goreleaser/goreleaser@latest</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  04/03/2022   14:07.32   /home/mobaxterm  goreleaser -v</span><br><span class="line">goreleaser version dev</span><br><span class="line">goos: windows</span><br><span class="line">goarch: amd64</span><br><span class="line">module version: v1.5.0, checksum: h1:l4BxBt2Rrk5Tngmzyrcp7H/CszXSA0guzL4mPo4peAU=</span><br><span class="line"></span><br><span class="line">https://goreleaser.com</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>参考<a href="https://goreleaser.com/quick-start/">Goreleaser Quick Start</a></p><p>执行 <code>goreleaser init</code> ，会生成一个<code>.goreleaser.yml</code>配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">goreleaser init</span><br><span class="line">• Generating .goreleaser.yaml file</span><br><span class="line">• config created; please edit accordingly to your needs file=.goreleaser.yaml</span><br></pre></td></tr></table></figure><p>自行按下文中<code>GOOS&amp;GOARCH 参照表</code>配置</p><p>以下为我的配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># This is an example .goreleaser.yml file with some sensible defaults.</span><br><span class="line"># Make sure to check the documentation at https://goreleaser.com</span><br><span class="line">before:</span><br><span class="line">  hooks:</span><br><span class="line">    # You may remove this if you don&#x27;t use go modules.</span><br><span class="line">     - go mod tidy</span><br><span class="line">    # you may remove this if you don&#x27;t need go generate</span><br><span class="line">    # - go generate ./...</span><br><span class="line">builds:</span><br><span class="line">  - env:</span><br><span class="line">      - CGO_ENABLED=0</span><br><span class="line">    goos:</span><br><span class="line">      - linux</span><br><span class="line">      - windows</span><br><span class="line">      - darwin</span><br><span class="line">    goarch:</span><br><span class="line">      - amd64</span><br><span class="line">      - arm</span><br><span class="line">archives:</span><br><span class="line">  - replacements:</span><br><span class="line">      darwin: Darwin</span><br><span class="line">      linux: Linux</span><br><span class="line">      windows: Windows</span><br><span class="line">      386: i386</span><br><span class="line">      amd64: x86_64</span><br><span class="line">checksum:</span><br><span class="line">  name_template: &#x27;checksums.txt&#x27;</span><br><span class="line">snapshot:</span><br><span class="line">  name_template: &quot;&#123;&#123; incpatch .Version &#125;&#125;-next&quot;</span><br><span class="line">changelog:</span><br><span class="line">  sort: asc</span><br><span class="line">  filters:</span><br><span class="line">    exclude:</span><br><span class="line">      - &#x27;^docs:&#x27;</span><br><span class="line">      - &#x27;^test:&#x27;</span><br></pre></td></tr></table></figure><h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><p>执行</p><p><code>goreleaser release --snapshot --rm-dist</code></p><p>公司的小垃机Cpu直接100%…</p><p>成功</p><p><code>• release succeeded after 8.02s</code></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="release-failed-after-7-30s-error-failed-to-build-for-linux-386-exit-status-2-github-com-pingcap-parser-mysql"><a href="#release-failed-after-7-30s-error-failed-to-build-for-linux-386-exit-status-2-github-com-pingcap-parser-mysql" class="headerlink" title="release failed after 7.30s error=failed to build for linux_386: exit status 2: # github.com/pingcap/parser/mysql"></a>release failed after 7.30s error=failed to build for linux_386: exit status 2: # github.com/pingcap/parser/mysql</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">goreleaser release --snapshot --rm-dist</span><br><span class="line">   • releasing...     </span><br><span class="line">   • loading config file       file=.goreleaser.yaml</span><br><span class="line">   • loading environment variables</span><br><span class="line">   • getting and validating git state</span><br><span class="line">      • ignoring errors because this is a snapshot error=git doesn&#x27;t contain any tags. Either add a tag or use --snapshot</span><br><span class="line">      • building...               commit=ca535cb8fe0bc89594b98ec81381a44bb8a9a395 latest tag=v0.0.0</span><br><span class="line">      • pipe skipped              error=disabled during snapshot mode</span><br><span class="line">   • parsing tag</span><br><span class="line">   • running before hooks</span><br><span class="line">      • running                   hook=go mod tidy</span><br><span class="line">   • setting defaults </span><br><span class="line">   • snapshotting     </span><br><span class="line">      • building snapshot...      version=0.0.1-next</span><br><span class="line">   • checking distribution directory</span><br><span class="line">      • --rm-dist is set, cleaning it up</span><br><span class="line">   • loading go mod information</span><br><span class="line">   • build prerequisites</span><br><span class="line">   • writing effective config file</span><br><span class="line">      • writing                   config=dist\config.yaml</span><br><span class="line">   • building binaries</span><br><span class="line">      • building                  binary=dist\bsc-scan_linux_386\bsc-scan</span><br><span class="line">      • building                  binary=dist\bsc-scan_linux_amd64\bsc-scan</span><br><span class="line">      • building                  binary=dist\bsc-scan_linux_arm64\bsc-scan</span><br><span class="line">   ⨯ release failed after 7.30s error=failed to build for linux_386: exit status 2: # github.com/pingcap/parser/mysql</span><br><span class="line">C:\Users\axin\go\pkg\mod\github.com\pingcap\parser@v0.0.0-20210415081931-48e7f467fd74\mysql\const.go:421:2: constant 2147483648 overflows SQLMode</span><br><span class="line">C:\Users\axin\go\pkg\mod\github.com\pingcap\parser@v0.0.0-20210415081931-48e7f467fd74\mysql\const.go:422:2: constant 4294967296 overflows SQLMode</span><br><span class="line">C:\Users\axin\go\pkg\mod\github.com\pingcap\parser@v0.0.0-20210415081931-48e7f467fd74\mysql\util.go:44:19: constant 4294967295 overflows int</span><br><span class="line">C:\Users\axin\go\pkg\mod\github.com\pingcap\parser@v0.0.0-20210415081931-48e7f467fd74\mysql\util.go:45:19: constant 4294967295 overflows int</span><br></pre></td></tr></table></figure><p>参看：<a href="https://github.com/pingcap/parser/issues/364">SQLMode should be int64 or uint64; similarly for lengthAndDecimal fields #364</a></p><p>这是因为 <code>github.com/pingcap/parser/mysql</code> 常量配置溢出，我这把<code>386</code>配置删除了，只打包<code>amd64 &amp; arm</code></p><h4 id="上线运行"><a href="#上线运行" class="headerlink" title="上线运行"></a>上线运行</h4><p>打包好的文件上传到<code>Ubuntu</code>服务器</p><p>执行脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">nohup ./main &gt; ./logs/main.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>赋予权限<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x ./main</span><br></pre></td></tr></table></figure></p><p>运行</p><p><code>./start.sh</code></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><p><a href="https://github.com/goreleaser/goreleaser">goreleaser Github</a></p><p><a href="https://goreleaser.com/intro/">goreleaser Documentation</a></p><h4 id="GOOS-amp-GOARCH-参照表"><a href="#GOOS-amp-GOARCH-参照表" class="headerlink" title="GOOS&amp;GOARCH 参照表"></a>GOOS&amp;GOARCH 参照表</h4><div class="table-container"><table><thead><tr><th>GOOS</th><th>GOARCH</th></tr></thead><tbody><tr><td>aix</td><td>ppc64</td></tr><tr><td>android</td><td>386</td></tr><tr><td>android</td><td>amd64</td></tr><tr><td>android</td><td>arm</td></tr><tr><td>android</td><td>arm64</td></tr><tr><td>darwin</td><td>386</td></tr><tr><td>darwin</td><td>amd64</td></tr><tr><td>darwin</td><td>arm</td></tr><tr><td>darwin</td><td>arm64</td></tr><tr><td>dragonfly</td><td>amd64</td></tr><tr><td>freebsd</td><td>386</td></tr><tr><td>freebsd</td><td>amd64</td></tr><tr><td>freebsd</td><td>arm</td></tr><tr><td>illumos</td><td>amd64</td></tr><tr><td>js</td><td>wasm</td></tr><tr><td>linux</td><td>386</td></tr><tr><td>linux</td><td>amd64</td></tr><tr><td>linux</td><td>arm</td></tr><tr><td>linux</td><td>arm64</td></tr><tr><td>linux</td><td>ppc64</td></tr><tr><td>linux</td><td>ppc64le</td></tr><tr><td>linux</td><td>mips</td></tr><tr><td>linux</td><td>mipsle</td></tr><tr><td>linux</td><td>mips64</td></tr><tr><td>linux</td><td>mips64le</td></tr><tr><td>linux</td><td>s390x</td></tr><tr><td>netbsd</td><td>386</td></tr><tr><td>netbsd</td><td>amd64</td></tr><tr><td>netbsd</td><td>arm</td></tr><tr><td>openbsd</td><td>386</td></tr><tr><td>openbsd</td><td>amd64</td></tr><tr><td>openbsd</td><td>arm</td></tr><tr><td>openbsd</td><td>arm64</td></tr><tr><td>plan9</td><td>386</td></tr><tr><td>plan9</td><td>amd64</td></tr><tr><td>plan9</td><td>arm</td></tr><tr><td>solaris</td><td>amd64</td></tr><tr><td>windows</td><td>386</td></tr><tr><td>windows</td><td>amd64</td></tr></tbody></table></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>最新Coding&amp;腾讯云部署Hexo博客-(20220302更新)</title>
      <link href="/2022/03/01/hexo-%E5%8D%9A%E5%AE%A2coding-%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/03/01/hexo-%E5%8D%9A%E5%AE%A2coding-%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>windows 10</li><li>git version 2.21.0</li><li>hexo-cli: 4.3.0</li><li>node 14.18.3</li><li>npm 6.14.15</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="部署上线"><a href="#部署上线" class="headerlink" title="部署上线"></a>部署上线</h4><p>参看：<a href="https://hexo.io/zh-cn/docs/generating.html">生成文件</a></p><p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure><p>简写</p><p>上面两个命令可以简写为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo g -d</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><h4 id="ERROR-Deployer-not-found-git"><a href="#ERROR-Deployer-not-found-git" class="headerlink" title="ERROR Deployer not found: git"></a>ERROR Deployer not found: git</h4><p>解决</p><p><code>npm install --save hexo-deployer-git</code></p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://help.coding.net/docs/ci/practice/static-website.html">自建静态网站</a></p><p><a href="https://hexo.io/zh-cn/">hexo 中文文档</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DApp开发教程（一）</title>
      <link href="/2022/02/28/DApp%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/02/28/DApp%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>windows 10</li><li>npm 6.14.15</li><li>node.js v14.18.3*</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="DApp-概念"><a href="#DApp-概念" class="headerlink" title="DApp 概念"></a>DApp 概念</h4><p>App = 客户端 + 服务端 （数据保存在中心化数据库）</p><p>DApp = 客户端 + 智能合约 （数据保存在区块链上）</p><h4 id="DApp-开发工具"><a href="#DApp-开发工具" class="headerlink" title="DApp 开发工具"></a>DApp 开发工具</h4><p>几个Ethereum DApp 开发必备的工具</p><ul><li><a href="https://github.com/ChainSafe/web3.js">Web3.js</a> Ethereum官方提供的可以通过 Javascript 来调用Ethereum方法的类库</li><li><a href="https://infura.io/">infura</a> 提供了Ethereum 重钱包节点，再也不用自己维护几百G的钱包了</li><li><a href="https://metamask.io/">Metamask</a> 浏览器插件，为你浏览器提供了一个去中心化的以太坊钱包 （源码也用到了 web3.js 和 infura的服务）</li><li><a href="https://trufflesuite.com/">truffle.js</a> 可以用它来管理智能合约, 偏工程化，truffle boxes 提供了一些脚手架能快速搭建 React、Vue、Webpack等环境</li><li><a href="https://remix.ethereum.org/">remix</a> web版本的solidity编译调试工具，Web App 本身比较轻量。适合平时学习调试ethereum/solidity</li></ul><h4 id="Ganache-安装"><a href="#Ganache-安装" class="headerlink" title="Ganache 安装"></a>Ganache 安装</h4><p>下载</p><p><a href="https://trufflesuite.com/ganache/"></a></p><p>安装</p><p><img src="/images/dapp_1.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ganache CLI v6.12.2 (ganache-core: 2.13.2)</span><br><span class="line"></span><br><span class="line">Available Accounts</span><br><span class="line">==================</span><br><span class="line">(0) 0x27CB2c3E62145ADD55Ab2207782C174DC979837b (100 ETH)</span><br><span class="line">(1) 0xDF14A5bb0969f45448aDB4C12524Db38F366ECb2 (100 ETH)</span><br><span class="line">(2) 0xAE606908D508E3FB159e9fE7fCc63d4FB4F5B24d (100 ETH)</span><br><span class="line">(3) 0xD66Dc958D9f1495E1d8a7FB8AA052d1C19D7944D (100 ETH)</span><br><span class="line">(4) 0x274a24f8AAE732AA23ad82513C98593ef71c40DF (100 ETH)</span><br><span class="line">(5) 0x242A73793396C52Da173039931aa5F0c6841E2D8 (100 ETH)</span><br><span class="line">(6) 0xCADD4a2641Ba6d113db584baF794ebEd387AB377 (100 ETH)</span><br><span class="line">(7) 0x7721564279DD5772A3F44A3C9A27d0Bb1769C152 (100 ETH)</span><br><span class="line">(8) 0xdB68603DA3E583FF38aDF40AB865d8f45528789d (100 ETH)</span><br><span class="line">(9) 0x52A408483a763EA7283b73Ca44b374830C04D397 (100 ETH)</span><br><span class="line"></span><br><span class="line">Private Keys</span><br><span class="line">==================</span><br><span class="line">(0) 0x13dbd99270a71ed652c12b548ff6639dce769443ffbba827015c81ec3dd20166</span><br><span class="line">(1) 0x0683414b4bfe556b46efcbd04fc4c2f648e8fa376a9452014a0b3dc4f8a7812d</span><br><span class="line">(2) 0xcb1d6c255058823af74c6868c1fcd7f86d70920b452980a0ef37803166cdebef</span><br><span class="line">(3) 0xca823f7d4931b52ed5a1216bfc741ac321e0a180c33d7c6aeff9132e3c3af7c8</span><br><span class="line">(4) 0x43257dcf45cc475a354d2be3f811c7bfa3be198d4bb69645d9443e6b08097e1e</span><br><span class="line">(5) 0xf89c8d82ca5cece6125f8e13670a29d603cd998aa315e0c6e0a086efefe7bb45</span><br><span class="line">(6) 0x457b822e5da01fed659e4cc9f3e0ffb17b71ad2bf9227431a7a71015c3846f55</span><br><span class="line">(7) 0x72a78373117507142aecae53ce24bd01e81067c2b1658d289b87a0dab3f4798d</span><br><span class="line">(8) 0x4f40fd75730b661f50e22dbc40dc71b5f88290782a506c77d48a293db064273f</span><br><span class="line">(9) 0xfa07c71c4c343de6943045786d2abec1616935031dbb822153ace58bcb6a926d</span><br><span class="line"></span><br><span class="line">HD Wallet</span><br><span class="line">==================</span><br><span class="line">Mnemonic:      just real doctor security east creek false custom mixed muscle negative blood</span><br><span class="line">Base HD Path:  m/44&#x27;/60&#x27;/0&#x27;/0/&#123;account_index&#125;</span><br><span class="line"></span><br><span class="line">Gas Price</span><br><span class="line">==================</span><br><span class="line">20000000000</span><br><span class="line"></span><br><span class="line">Gas Limit</span><br><span class="line">==================</span><br><span class="line">6721975</span><br><span class="line"></span><br><span class="line">Call Gas Limit</span><br><span class="line">==================</span><br><span class="line">9007199254740991</span><br><span class="line"></span><br><span class="line">Listening on 127.0.0.1:8545</span><br></pre></td></tr></table></figure><h4 id="Truffle"><a href="#Truffle" class="headerlink" title="Truffle"></a>Truffle</h4><p>刚开始使用Ganache的话，安装并启动图形界面就可以了，Ganache就绪后，让我开始Truffle。</p><p>安装</p><p><code>npm install -g truffle</code></p><h4 id="MetaCoin-示例项目"><a href="#MetaCoin-示例项目" class="headerlink" title="MetaCoin 示例项目"></a>MetaCoin 示例项目</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS C:\Users\axin\OneDrive\workspace\dapp\MetaCoin&gt; truffle unbox metacoin</span><br><span class="line"></span><br><span class="line">Starting unbox...</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">√ Preparing to download box</span><br><span class="line">√ Downloading</span><br><span class="line">√ Cleaning up temporary files</span><br><span class="line">√ Setting up box</span><br><span class="line"></span><br><span class="line">Unbox successful, sweet!</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line"></span><br><span class="line">  Compile contracts: truffle compile</span><br><span class="line">  Migrate contracts: truffle migrate</span><br><span class="line">  Test contracts:    truffle test</span><br><span class="line"></span><br><span class="line">PS C:\Users\axin\OneDrive\workspace\dapp\MetaCoin&gt; </span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://trufflesuite.com/docs/truffle/quickstart.html">Truffle Quickstart¶</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP使用QueryList抓取BSC合约交易Table</title>
      <link href="/2022/02/28/PHP%E4%BD%BF%E7%94%A8QueryList%E6%8A%93%E5%8F%96BSC%E5%90%88%E7%BA%A6%E4%BA%A4%E6%98%93Table/"/>
      <url>/2022/02/28/PHP%E4%BD%BF%E7%94%A8QueryList%E6%8A%93%E5%8F%96BSC%E5%90%88%E7%BA%A6%E4%BA%A4%E6%98%93Table/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>TP6</li><li>PHP 8.0</li><li>QueryList 4.2.8</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>采集<code>www.bscscan.com</code>中交易信息</p><h4 id="安装-QueryList"><a href="#安装-QueryList" class="headerlink" title="安装 QueryList"></a>安装 QueryList</h4><p><code>composer require jaeger/querylist</code></p><h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Bsc</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    private function getSid($html)</span><br><span class="line">    &#123;</span><br><span class="line">        $html = strstr($html, &#x27;var sid =&#x27;);</span><br><span class="line">        $html = substr($html, strpos($html, &#x27;var sid = \&#x27;&#x27;) + 11);</span><br><span class="line">        return substr($html, 0, strpos($html, &quot;&#x27;&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private function getPageData($page)</span><br><span class="line">    &#123;</span><br><span class="line">        $otherArgs = [</span><br><span class="line">            &#x27;headers&#x27; =&gt; [</span><br><span class="line">                &#x27;User-Agent&#x27; =&gt; &#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36&#x27;,</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">    </span><br><span class="line">        $tokenUrl = &#x27;https://www.bscscan.com/token/&#x27; . $this-&gt;contractaddress;</span><br><span class="line">        $tokenQl  = QueryList::get($tokenUrl, null, $otherArgs);</span><br><span class="line">    </span><br><span class="line">        $sid = $this-&gt;getSid($tokenQl-&gt;getHtml());</span><br><span class="line">    </span><br><span class="line">        $url = &#x27;https://www.bscscan.com/token/generic-tokentxns2?m=normal&amp;contractAddress=&#x27; . $this-&gt;contractaddress . &#x27;&amp;a=&amp;sid=&#x27; . $sid . &#x27;&amp;p=&#x27; . $page;</span><br><span class="line">        $ql  = QueryList::get($url, null, $otherArgs);</span><br><span class="line">    </span><br><span class="line">        // 采集交易总条数</span><br><span class="line">        $total = $ql-&gt;find(&#x27;.mb-4 p&#x27;)-&gt;text();</span><br><span class="line">    </span><br><span class="line">        // 采集表格</span><br><span class="line">        $table = $ql-&gt;find(&#x27;table&#x27;);</span><br><span class="line">        // 采集表头</span><br><span class="line">        $tableHeader = $table-&gt;find(&#x27;tr:eq(0)&#x27;)-&gt;find(&#x27;th&#x27;)-&gt;texts();</span><br><span class="line">        // 采集表的每行内容</span><br><span class="line">        $tableRows = $table-&gt;find(&#x27;tr:gt(0)&#x27;)-&gt;map(function ($row) &#123;</span><br><span class="line">            return $row-&gt;find(&#x27;td&#x27;)-&gt;texts()-&gt;all();</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><br><span class="line">        // 采集表的每行Method</span><br><span class="line">        $methodsObject = $table-&gt;find(&#x27;tr:gt(0)&#x27;)-&gt;map(function ($row) &#123;</span><br><span class="line">            return $row-&gt;find(&#x27;td .u-label&#x27;)-&gt;attr(&#x27;title&#x27;);</span><br><span class="line">        &#125;);</span><br><span class="line">        $methods       = $methodsObject-&gt;all();</span><br><span class="line">    </span><br><span class="line">        $insertData = $tableRows-&gt;all();</span><br><span class="line">        foreach ($insertData as $key =&gt; &amp;$item) &#123;</span><br><span class="line">            $item[] = $methods[$key];</span><br><span class="line">            foreach ($item as $itemKey =&gt; &amp;$itemVal) &#123;</span><br><span class="line">                // 交易时间</span><br><span class="line">                if ($itemKey == 2) &#123;</span><br><span class="line">                    $itemVal = strtotime($itemVal);</span><br><span class="line">                &#125;</span><br><span class="line">                // 垃圾数据</span><br><span class="line">                if ($itemKey == 1 || $itemKey == 3 || $itemKey == 5) unset($item[$itemKey]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        $res = [];</span><br><span class="line">        foreach ($insertData as $items) &#123;</span><br><span class="line">            $temp                = [</span><br><span class="line">                &#x27;txn_hash&#x27; =&gt; $items[0],</span><br><span class="line">                &#x27;method&#x27;   =&gt; $items[8],</span><br><span class="line">                &#x27;from&#x27;     =&gt; $items[4],</span><br><span class="line">                &#x27;to&#x27;       =&gt; $items[6],</span><br><span class="line">                &#x27;quantity&#x27; =&gt; $items[7],</span><br><span class="line">                &#x27;created&#x27;  =&gt; $items[2],</span><br><span class="line">            ];</span><br><span class="line">            $temp[&#x27;unique_hash&#x27;] = hash(&#x27;sha256&#x27;, json_encode($temp));</span><br><span class="line">            $res[] = $temp;</span><br><span class="line">            unset($temp);</span><br><span class="line">        &#125;</span><br><span class="line">        unset($insertData);</span><br><span class="line">    </span><br><span class="line">        return $res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于Kotlin的SpringCloud的快速构建（一）</title>
      <link href="/2022/02/17/%E5%9F%BA%E4%BA%8EKotlin%E7%9A%84SpringCloud%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/02/17/%E5%9F%BA%E4%BA%8EKotlin%E7%9A%84SpringCloud%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Mac</li><li>Kotlin 1.3.72</li><li>Gradle 6.4</li><li>Java 1.8</li><li>Sping Boot 2.2.0</li></ul><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/axin-blog/SpringCloud">Axin-SpringCloud</a></p><p>如果帮助到了您，动动小手，帮忙给个star。</p><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>首先明确兼容的<code>Spring Cloud</code>的版本，可以在这里查询<code>Spring Cloud</code></p><p>这里我贴出来下：</p><p>Table 1. Release train Spring Boot compatibility</p><div class="table-container"><table><thead><tr><th>Release Train</th><th>Boot Version</th></tr></thead><tbody><tr><td>Hoxton</td><td>2.2.x</td></tr><tr><td>Greenwich</td><td>2.1.x</td></tr><tr><td>Finchley</td><td>2.0.x</td></tr><tr><td>Edgware</td><td>1.5.x</td></tr><tr><td>Dalston</td><td>1.5.x</td></tr></tbody></table></div><p>因为我的SpingBoot是2.2.0，所以你一会在build.gradle中会看到</p><p><code>springCloudVersion = &#39;Hoxton.RELEASE&#39;</code></p><h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><blockquote><p>这里快速的过一下，老鸟自己略过。。。</p></blockquote><p><img src="/images/kotlin_spring_cloud_2.png" alt=""></p><p>Create New Project</p><p><img src="/images/kotlin_spring_cloud_3.png" alt=""></p><p>选择Spring Initiallizr-&gt;Project SDK-&gt;java 1.8-&gt;NEXT</p><p><img src="/images/kotlin_spring_cloud_4.png" alt=""></p><p>Group：输入自己的包名-&gt;Artifact：输入自己小写的项目名-&gt;Type：Gradle Project -&gt;Language：Kotlin-&gt;NEXT</p><p><img src="/images/kotlin_spring_cloud_5.png" alt=""></p><p>这里不需要其他依赖-&gt;NEXT</p><p><img src="/images/kotlin_spring_cloud_6.png" alt=""></p><p>点完成后项目开始构建如下图：</p><p><img src="/images/kotlin_spring_cloud_7.png" alt=""></p><p>我这里使用的是本地Gradle（建议使用）</p><p>叉掉，选择本地Gradle</p><p><img src="/images/kotlin_spring_cloud_8.png" alt=""></p><p>点应用后，更改主项目build.gradle</p><p>build.gradle.kts 改为 build.gradle，以下是我已经测试成功的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">group = &#x27;com.axinblog&#x27;</span><br><span class="line">version = &#x27;0.0.1&#x27;</span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line"></span><br><span class="line">    ext &#123;</span><br><span class="line">        // Required for Kotlin integration</span><br><span class="line">        kotlinVersion = &#x27;1.3.72&#x27;</span><br><span class="line">        springBootVersion = &#x27;2.2.0.RELEASE&#x27;</span><br><span class="line">        springCloudVersion = &#x27;Hoxton.RELEASE&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line">        // 镜像仓库</span><br><span class="line">        maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27; &#125;</span><br><span class="line">        maven &#123; url &#x27;https://maven.aliyun.com/repository/google/&#x27; &#125;</span><br><span class="line">        maven &#123; url &#x27;https://maven.aliyun.com/repository/jcenter/&#x27; &#125;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support</span><br><span class="line">        classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion&quot; // Required for Kotlin integration</span><br><span class="line">        classpath &quot;org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion&quot;</span><br><span class="line">        // 让spring-boot支持gradle</span><br><span class="line">        classpath &quot;org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion&quot;</span><br><span class="line">        classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 所有的项目配置</span><br><span class="line">allprojects &#123;</span><br><span class="line">    apply plugin: &#x27;java&#x27;</span><br><span class="line">    apply plugin: &#x27;idea&#x27;</span><br><span class="line">    // Required for Kotlin integration</span><br><span class="line">    apply plugin: &#x27;kotlin&#x27;</span><br><span class="line">    // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support</span><br><span class="line">    apply plugin: &quot;kotlin-spring&quot;</span><br><span class="line">    apply plugin: &#x27;org.springframework.boot&#x27;</span><br><span class="line">    apply plugin: &#x27;io.spring.dependency-management&#x27;</span><br><span class="line">    sourceCompatibility = &#x27;1.8&#x27;</span><br><span class="line">    targetCompatibility = &#x27;1.8&#x27;</span><br><span class="line"></span><br><span class="line">    dependencyManagement &#123;</span><br><span class="line">        // 解决cloud零散jar的版本问题</span><br><span class="line">        imports &#123;</span><br><span class="line">            mavenBom &quot;org.springframework.cloud:spring-cloud-dependencies:$&#123;springCloudVersion&#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line">        // 镜像仓库</span><br><span class="line">        maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27; &#125;</span><br><span class="line">        maven &#123; url &#x27;https://maven.aliyun.com/repository/google/&#x27; &#125;</span><br><span class="line">        maven &#123; url &#x27;https://maven.aliyun.com/repository/jcenter/&#x27; &#125;</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        implementation(&#x27;org.springframework.boot:spring-boot-starter-web&#x27;)</span><br><span class="line">        testCompile(&#x27;org.springframework.boot:spring-boot-starter-test&#x27;)</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * Spring Boot Web应用程序需要3个Kotlin特定的库，并默认配置：</span><br><span class="line">         */</span><br><span class="line">        implementation &#x27;org.jetbrains.kotlin:kotlin-reflect&#x27;</span><br><span class="line">        implementation &#x27;org.jetbrains.kotlin:kotlin-stdlib-jdk8&#x27;</span><br><span class="line">        implementation &#x27;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M1&#x27;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    compileKotlin &#123;</span><br><span class="line">        kotlinOptions &#123;</span><br><span class="line">            jvmTarget = &quot;1.8&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    compileTestKotlin &#123;</span><br><span class="line">        kotlinOptions &#123;</span><br><span class="line">            jvmTarget = &quot;1.8&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/kotlin_spring_cloud_9.png" alt=""></p><p>点Import Changes</p><p>等待Gradle构建完成，这里主项目框架就创建完成了</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/weixin_44209403/article/details/103500923">快速搭建SpringCloud环境</a></p>]]></content>
      
      
      <categories>
          
          <category> Kotlin </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Kotlin的SpringCloud的快速构建（三）</title>
      <link href="/2022/02/17/%E5%9F%BA%E4%BA%8EKotlin%E7%9A%84SpringCloud%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2022/02/17/%E5%9F%BA%E4%BA%8EKotlin%E7%9A%84SpringCloud%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/axin-blog/SpringCloud">Axin-SpringCloud</a></p><p>如果帮助到了您，动动小手，帮忙给个star。</p><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="创建微服务Product和Order"><a href="#创建微服务Product和Order" class="headerlink" title="创建微服务Product和Order"></a>创建微服务Product和Order</h4><p>根据 <a href="">基于Kotlin的SpringCloud的快速构建（二）</a></p><p>新模块的创建，创建两个微服务Product与Order，创建好后的目录如下</p><p><img src="/images/kotlin_spring_cloud_19.png" alt=""></p><h4 id="Product-启动类，build-gradle，yml配置"><a href="#Product-启动类，build-gradle，yml配置" class="headerlink" title="Product 启动类，build.gradle，yml配置"></a>Product 启动类，build.gradle，yml配置</h4><h5 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.axinblog.product</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication</span><br><span class="line">import org.springframework.boot.runApplication</span><br><span class="line">import org.springframework.cloud.netflix.eureka.EnableEurekaClient</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableEurekaClient</span><br><span class="line">class ProductApplication</span><br><span class="line"></span><br><span class="line">fun main(args: Array&lt;String&gt;) &#123;</span><br><span class="line">    runApplication&lt;ProductApplication&gt;(*args)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="build-gradle"><a href="#build-gradle" class="headerlink" title="build.gradle"></a>build.gradle</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    // eureka-client</span><br><span class="line">    implementation(&#x27;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#x27;)</span><br><span class="line">    // feign</span><br><span class="line">    implementation(&#x27;org.springframework.cloud:spring-cloud-starter-openfeign&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="application-dev-yml"><a href="#application-dev-yml" class="headerlink" title="application-dev.yml"></a>application-dev.yml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8082</span><br><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line">  application:</span><br><span class="line">    # 服务名称 - 服务之间使用名称进行通讯</span><br><span class="line">    name: product</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    service-url:</span><br><span class="line">      # 填写注册中心服务器地址</span><br><span class="line">      defaultZone: http://127.0.0.1:8081/eureka</span><br><span class="line">    # 是否需要将自己注册到注册中心</span><br><span class="line">    register-with-eureka: true</span><br><span class="line">    # 是否需要搜索服务信息</span><br><span class="line">    fetch-registry: true</span><br><span class="line">  instance:</span><br><span class="line">    nonSecurePort: $&#123;server.port&#125;</span><br><span class="line">    # 使用ip地址注册到注册中心</span><br><span class="line">    prefer-ip-address: true</span><br><span class="line">    # 注册中心列表中显示的状态参数</span><br><span class="line">    instance-id: $&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span><br></pre></td></tr></table></figure><h4 id="Order-启动类，build-gradle，yml配置"><a href="#Order-启动类，build-gradle，yml配置" class="headerlink" title="Order 启动类，build.gradle，yml配置"></a>Order 启动类，build.gradle，yml配置</h4><h5 id="启动类-1"><a href="#启动类-1" class="headerlink" title="启动类"></a>启动类</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.axinblog.order</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication</span><br><span class="line">import org.springframework.boot.runApplication</span><br><span class="line">import org.springframework.cloud.netflix.eureka.EnableEurekaClient</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableEurekaClient</span><br><span class="line">class OrderApplication</span><br><span class="line"></span><br><span class="line">fun main(args: Array&lt;String&gt;) &#123;</span><br><span class="line">    runApplication&lt;OrderApplication&gt;(*args)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="build-gradle-1"><a href="#build-gradle-1" class="headerlink" title="build.gradle"></a>build.gradle</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    // eureka-client</span><br><span class="line">    implementation(&#x27;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&#x27;)</span><br><span class="line">    // feign</span><br><span class="line">    implementation(&#x27;org.springframework.cloud:spring-cloud-starter-openfeign&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="application-dev-yml-1"><a href="#application-dev-yml-1" class="headerlink" title="application-dev.yml"></a>application-dev.yml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8083</span><br><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line">  application:</span><br><span class="line">    # 服务名称 - 服务之间使用名称进行通讯</span><br><span class="line">    name: order</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    service-url:</span><br><span class="line">      # 填写注册中心服务器地址</span><br><span class="line">      defaultZone: http://127.0.0.1:8081/eureka</span><br><span class="line">    # 是否需要将自己注册到注册中心</span><br><span class="line">    register-with-eureka: true</span><br><span class="line">    # 是否需要搜索服务信息</span><br><span class="line">    fetch-registry: true</span><br><span class="line">  instance:</span><br><span class="line">    nonSecurePort: $&#123;server.port&#125;</span><br><span class="line">    # 使用ip地址注册到注册中心</span><br><span class="line">    prefer-ip-address: true</span><br><span class="line">    # 注册中心列表中显示的状态参数</span><br><span class="line">    instance-id: $&#123;spring.cloud.client.ip-address&#125;:$&#123;server.port&#125;</span><br></pre></td></tr></table></figure><h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><p>启动Product与Order微服务时记得加上—spring.profiles.active=dev</p><p><img src="/images/kotlin_spring_cloud_20.png" alt=""></p><p>否则会出现端口一直绑定8080端口的情况</p><h4 id="启动微服务查看是否注册到Eureka注册中心"><a href="#启动微服务查看是否注册到Eureka注册中心" class="headerlink" title="启动微服务查看是否注册到Eureka注册中心"></a>启动微服务查看是否注册到Eureka注册中心</h4><p><img src="/images/kotlin_spring_cloud_21.png" alt=""></p><p>服务启动成功后访问：<a href="http://localhost:8081/">http://localhost:8081/</a></p><p><img src="/images/kotlin_spring_cloud_22.png" alt=""></p><p>这样Product与Order都注册到Eureka中了。</p>]]></content>
      
      
      <categories>
          
          <category> Kotlin </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Kotlin的SpringCloud的快速构建（二）</title>
      <link href="/2022/02/17/%E5%9F%BA%E4%BA%8EKotlin%E7%9A%84SpringCloud%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2022/02/17/%E5%9F%BA%E4%BA%8EKotlin%E7%9A%84SpringCloud%E7%9A%84%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/axin-blog/SpringCloud">Axin-SpringCloud</a></p><p>如果帮助到了您，动动小手，帮忙给个star。</p><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="构建Eureka注册中心"><a href="#构建Eureka注册中心" class="headerlink" title="构建Eureka注册中心"></a>构建Eureka注册中心</h4><p><img src="/images/kotlin_spring_cloud_10.png" alt=""></p><p>对主项目SpringCloud右键，构建子模块，来创建Eureka</p><p><img src="/images/kotlin_spring_cloud_11.png" alt=""></p><p>还是选择Gradle，这里取消选中Java。</p><p><img src="/images/kotlin_spring_cloud_12.png" alt=""></p><p>ArtifactId 输入 eureka</p><p><img src="/images/kotlin_spring_cloud_13.png" alt=""></p><p>Module name 我使用的是大写</p><p><img src="/images/kotlin_spring_cloud_14.png" alt=""></p><p>现在项目结构如图</p><h4 id="Eureka-的启动"><a href="#Eureka-的启动" class="headerlink" title="Eureka 的启动"></a>Eureka 的启动</h4><h5 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.axinblog.eureka</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication</span><br><span class="line">import org.springframework.boot.runApplication</span><br><span class="line">import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableEurekaServer</span><br><span class="line">class EurekaApplication</span><br><span class="line"></span><br><span class="line">fun main(args: Array&lt;String&gt;) &#123;</span><br><span class="line">    runApplication&lt;EurekaApplication&gt;(*args)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Eureka-build-gradle"><a href="#Eureka-build-gradle" class="headerlink" title="Eureka build.gradle"></a>Eureka build.gradle</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile(&#x27;org.springframework.cloud:spring-cloud-starter-netflix-eureka-server&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里build.gradle导包的时候会有个提示</p><p><img src="/images/kotlin_spring_cloud_15.png" alt=""></p><p>选择Show run configurations in Services，就会出现Run Dashboard面板</p><p><img src="/images/kotlin_spring_cloud_16.png" alt=""></p><p>在Run Dashboard可以同时运行多个微服务</p><h5 id="Eureka-application-dev-yml"><a href="#Eureka-application-dev-yml" class="headerlink" title="Eureka application-dev.yml"></a>Eureka application-dev.yml</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8081</span><br><span class="line">spring:</span><br><span class="line">  profiles:</span><br><span class="line">    active: dev</span><br><span class="line">  application:</span><br><span class="line">    name: eureka</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    # 是否将自己注册到注册中心(注册中心集群需要设置true)</span><br><span class="line">    register-with-eureka: false</span><br><span class="line">    # 是否需要搜索服务信息 因为本身为注册中心所以设置为false</span><br><span class="line">    fetch-registry: false</span><br><span class="line">    # 配置eureka服务器地址</span><br><span class="line">    service-url:</span><br><span class="line">      # 浏览器打开: http://localhost:8081/</span><br><span class="line">      defaultZone: http://127.0.0.1:$&#123;server.port&#125;/eureka/</span><br></pre></td></tr></table></figure><p>启动项目就可以在<a href="http://localhost:8081/看到Eureka面板了">http://localhost:8081/看到Eureka面板了</a></p><p><img src="/images/kotlin_spring_cloud_17.png" alt=""></p><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><h4 id="Eureka-不使用application-yml配置文件，始终绑定8080端口"><a href="#Eureka-不使用application-yml配置文件，始终绑定8080端口" class="headerlink" title="Eureka 不使用application.yml配置文件，始终绑定8080端口"></a>Eureka 不使用application.yml配置文件，始终绑定8080端口</h4><p>解决方案：</p><p><code>Program arguments: 增加--spring.profiles.active=dev</code></p><p><img src="/images/kotlin_spring_cloud_18.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Kotlin </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang Gin 接收参数</title>
      <link href="/2022/02/16/Golang-Gin-%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0/"/>
      <url>/2022/02/16/Golang-Gin-%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="路径参数"><a href="#路径参数" class="headerlink" title="路径参数"></a>路径参数</h4><p>请求地址：/v1/member/info/:code</p><p><code>code := c.Param(&quot;code&quot;)</code></p><h4 id="Get参数"><a href="#Get参数" class="headerlink" title="Get参数"></a>Get参数</h4><p>请求地址：/v1/member/info?code=”嘿嘿嘿”</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code := c.Query(&quot;code&quot;)</span><br><span class="line">code := ctx.DefaultQuery(&quot;code&quot;, &quot;axinblog&quot;)</span><br></pre></td></tr></table></figure><h4 id="Post参数"><a href="#Post参数" class="headerlink" title="Post参数"></a>Post参数</h4><ul><li>json 中获取</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type Params struct &#123;</span><br><span class="line">    MemberId int64  `json:&quot;member_id&quot;`</span><br><span class="line">    Issue    string `json:&quot;issue&quot;`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var params Params</span><br><span class="line">_ = ctx.BindJSON(&amp;params)</span><br></pre></td></tr></table></figure><ul><li>表单中获取</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 表单取值</span><br><span class="line">code := ctx.PostForm(&quot;code&quot;)</span><br><span class="line"></span><br><span class="line">// 无值取默认</span><br><span class="line">code := ctx.DefaultPostForm(&quot;code&quot;, &quot;axinblog&quot;)</span><br></pre></td></tr></table></figure><h4 id="Json参数"><a href="#Json参数" class="headerlink" title="Json参数"></a>Json参数</h4><ul><li><p>通过map</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">params := make(map[string]interface&#123;&#125;)</span><br><span class="line">_ = ctx.BindJSON(&amp;params)</span><br><span class="line"></span><br><span class="line">code := params[&quot;code&quot;].(string)</span><br></pre></td></tr></table></figure></li><li><p>通过struct</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type Params struct &#123;</span><br><span class="line">Code string `json:&quot;code&quot;`</span><br><span class="line">&#125;</span><br><span class="line">func Test(ctx *gin.Context) &#123;</span><br><span class="line">params := Params&#123;&#125;</span><br><span class="line"></span><br><span class="line">_ = ctx.BindJSON(&amp;params)</span><br><span class="line"></span><br><span class="line">ctx.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line">&quot;code&quot;: params.Code,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="获取所有参数"><a href="#获取所有参数" class="headerlink" title="获取所有参数"></a>获取所有参数</h4><ul><li>form方式的请求</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctx.Request.ParseForm()</span><br><span class="line">for k, v := range ctx.Request.PostForm &#123;</span><br><span class="line">    fmt.Printf(&quot;k:%v\n&quot;, k)</span><br><span class="line">    fmt.Printf(&quot;v:%v\n&quot;, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>application/json</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data, _ := ioutil.ReadAll(ctx.Request.Body)</span><br><span class="line">fmt.Printf(&quot;ctx.Request.body: %v&quot;, string(data))</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">buf := make([]byte, 1024)</span><br><span class="line">num, _ := ctx.Request.Body.Read(buf)</span><br><span class="line">reqBody := string(buf[0:num])</span><br><span class="line">fmt.Printf(&quot;ctx.Request.body: %v&quot;, reqBody)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang json 序列化与反序列化</title>
      <link href="/2022/02/16/Golang-json-%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2022/02/16/Golang-json-%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h4><p><code>json.Unmarshal([]byte(item)</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func (d *Dao) QueryRobotAll(ctx context.Context) (res []*model.RobotList, err error) &#123;</span><br><span class="line">key := &quot;robot:robot_info&quot;</span><br><span class="line"></span><br><span class="line">data, err := d.Redis.HGetAll(ctx, key).Result()</span><br><span class="line">if err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for _, item := range data &#123;</span><br><span class="line">temp := &amp;model.RobotList&#123;&#125;</span><br><span class="line">if err := json.Unmarshal([]byte(item), temp); err != nil &#123;</span><br><span class="line">log.Error(&quot;sorry,script err(%v)&quot;, err)</span><br><span class="line">&#125;</span><br><span class="line">res = append(res, temp)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 匿名函数示例</title>
      <link href="/2022/02/16/Golang-%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E7%A4%BA%E4%BE%8B/"/>
      <url>/2022/02/16/Golang-%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 定义匿名函数方式一</span><br><span class="line">add := func (x, y int)  &#123;</span><br><span class="line">    fmt.Println(x + y)</span><br><span class="line">&#125;</span><br><span class="line">add(1, 2)  // 通过变量调用匿名函数</span><br><span class="line"></span><br><span class="line">// 定义匿名函数方式二</span><br><span class="line">func (x, y int)  &#123;</span><br><span class="line">    fmt.Println(x - y)</span><br><span class="line">&#125;(20, 5)  //自执行函数：匿名函数定义完加()直接执行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// TaskSyncUpload上传图片</span><br><span class="line">func TaskSyncBatchUpload(ctx *gin.Context) &#123;</span><br><span class="line">type Params struct &#123;</span><br><span class="line">MemberId int64                       `json:&quot;member_id&quot;`</span><br><span class="line">FormData []*model.MemberTaskFormData `json:&quot;form_data&quot;`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var params Params</span><br><span class="line">_ = ctx.BindJSON(&amp;params)</span><br><span class="line"></span><br><span class="line">ch := make(chan bool, len(params.FormData))</span><br><span class="line">for _, v := range params.FormData &#123;</span><br><span class="line">if v.FormType == &quot;IMG&quot; &#123;</span><br><span class="line">go func(downloadUrl string) &#123;</span><br><span class="line">ch &lt;- svc.DownloadFile(&quot;&quot;, &quot;./&quot;, downloadUrl)</span><br><span class="line">&#125;(v.FormValue)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 等待每个文件下载的完成，并检查超时</span><br><span class="line">timeout := time.After(600 * time.Second)</span><br><span class="line">for idx := 0; idx &lt; len(params.FormData); idx++ &#123;</span><br><span class="line">select &#123;</span><br><span class="line">case res := &lt;-ch:</span><br><span class="line">nt := time.Now().Format(&quot;2006-01-02 15:04:05&quot;)</span><br><span class="line">fmt.Printf(&quot;[%s]Finish download %s\n&quot;, nt, strconv.FormatBool(res))</span><br><span class="line">case &lt;-timeout:</span><br><span class="line">fmt.Println(&quot;Timeout...&quot;)</span><br><span class="line">break</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp.Success(ctx, resp.Response&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 常用判断</title>
      <link href="/2022/02/16/Golang-%E5%B8%B8%E7%94%A8%E5%88%A4%E6%96%AD/"/>
      <url>/2022/02/16/Golang-%E5%B8%B8%E7%94%A8%E5%88%A4%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="判断数组或切片为空"><a href="#判断数组或切片为空" class="headerlink" title="判断数组或切片为空"></a>判断数组或切片为空</h4><p><code>len(arr) == 0 &amp; len(slice) == 0</code></p><h4 id="判断结构体类型-是否为空"><a href="#判断结构体类型-是否为空" class="headerlink" title="判断结构体类型 是否为空"></a>判断结构体类型 是否为空</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type member struct &#123;</span><br><span class="line">    Id int64</span><br><span class="line">    Nickname  string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    var m member</span><br><span class="line">    if  m == (member&#123;&#125;) &#123;</span><br><span class="line">        fmt.Println(&quot;m == member&#123;&#125; is empty&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 常量定义</title>
      <link href="/2022/02/16/Golang-%E5%B8%B8%E9%87%8F%E5%AE%9A%E4%B9%89/"/>
      <url>/2022/02/16/Golang-%E5%B8%B8%E9%87%8F%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h3 id="常规定义"><a href="#常规定义" class="headerlink" title="常规定义"></a>常规定义</h3><p><code>const Name string = &quot;axinblog&quot;</code></p><p><code>const Type = 1</code></p><p><code>const name, id = &quot;bimmler&quot;, 17</code></p><h3 id="iota-枚举"><a href="#iota-枚举" class="headerlink" title="iota 枚举"></a>iota 枚举</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const (</span><br><span class="line">    StatusDisable = iota</span><br><span class="line">    StatusEnable = iota</span><br><span class="line">)</span><br><span class="line">const (</span><br><span class="line">StatusDisable = iota // 状态关闭</span><br><span class="line">StatusEnable         // 状态开启</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>以上两种定义相等</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const (</span><br><span class="line">    Silent LogLevel = iota + 1</span><br><span class="line">Error</span><br><span class="line">Warn</span><br><span class="line">Info</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 打包上线运行</title>
      <link href="/2022/02/16/Golang-%E6%89%93%E5%8C%85%E4%B8%8A%E7%BA%BF%E8%BF%90%E8%A1%8C/"/>
      <url>/2022/02/16/Golang-%E6%89%93%E5%8C%85%E4%B8%8A%E7%BA%BF%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>开发平台：mac</li><li>go version go1.16.2 darwin/amd64</li><li>线上平台：CentOS Linux release 8.3.2011</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="打包可执行文件"><a href="#打包可执行文件" class="headerlink" title="打包可执行文件"></a>打包可执行文件</h4><p>mac 打包命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 打包linux平台</span><br><span class="line">CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go</span><br><span class="line"></span><br><span class="line"># 打包windows平台</span><br><span class="line">CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>CGO_ENABLED：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED = 1 打开C语言版本的GO编译器</span><br><span class="line">CGO_ENABLED = 0 关闭C语言版本的GO编译器</span><br></pre></td></tr></table></figure></li><li>GOOS：目标操作系统</li><li>GOARCH：目标操作系统的架构</li></ul><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><ul><li>linux<br><code>chmod +x 应用名称</code></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">调试测试：执行./main</span><br><span class="line">常驻执行：执行./main &amp; 或者 nohup ./main &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@axin goProject]# chmod +x ./main</span><br><span class="line">[root@axin goProject]# ll</span><br><span class="line">total 24712</span><br><span class="line">drwxr-xr-x 2 root root       30 May 24 14:56 config</span><br><span class="line">-rwxr-xr-x 1 root root 25304051 May 24 15:01 main</span><br></pre></td></tr></table></figure><p><code>nohup ./main &gt; tmp.log 2&gt;&amp;1 &amp;</code></p><ul><li>windows</li></ul><p>会直接打包为.exe文件，双击直接运行即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 时间日期操作</title>
      <link href="/2022/02/16/Golang-%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/02/16/Golang-%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>如果你是PHP开发，可以这样记</p><p><code>PHP 中的 Y-m-d H:i:s 等于 Golang 中的 2006-01-02 15:04:05</code></p><h4 id="当前时间戳"><a href="#当前时间戳" class="headerlink" title="当前时间戳"></a>当前时间戳</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">时间戳（秒）：seconds := time.Now().Unix()</span><br><span class="line">时间戳（纳秒）：time.Now().UnixNano()</span><br><span class="line">时间戳（毫秒）：time.Now().UnixNano() / 1e6</span><br><span class="line">时间戳（纳秒转换为秒）：time.Now().UnixNano() / 1e9</span><br></pre></td></tr></table></figure><h4 id="当前时间"><a href="#当前时间" class="headerlink" title="当前时间"></a>当前时间</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">currentTime := time.Now()</span><br><span class="line">fmt.Println(currentTime)</span><br><span class="line">// 输出：2021-05-24 22:17:02.678787 +0800 CST m=+0.000129143</span><br><span class="line"></span><br><span class="line">currentTime := time.Now().Format(&quot;2006-01-02 15:04:05&quot;)</span><br><span class="line">// 输出：2021-05-24 22:17:02</span><br></pre></td></tr></table></figure><h4 id="时间戳格式化"><a href="#时间戳格式化" class="headerlink" title="时间戳格式化"></a>时间戳格式化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">currentTime := time.Now().Format(&quot;2006-01-02 15:04:05&quot;)</span><br><span class="line">timestamp, _ := time.ParseInLocation(&quot;2006-01-02 15:04:05&quot; , currentTime, time.Local)</span><br><span class="line">// 输出：1622700677</span><br></pre></td></tr></table></figure><h4 id="几天前-amp-几天后"><a href="#几天前-amp-几天后" class="headerlink" title="几天前 &amp; 几天后"></a>几天前 &amp; 几天后</h4><figure class="highlight plaintext"><figcaption><span>3天前</span></figcaption><table><tr><td class="code"><pre><span class="line">currentTime := time.Now()</span><br><span class="line">oTime := currentTime.AddDate(0, 0, -3)</span><br><span class="line"></span><br><span class="line">// 3天后</span><br><span class="line">currentTime := time.Now()</span><br><span class="line">expirationTime := currentTime.AddDate(0, 0, 3).Sub(currentTime)</span><br></pre></td></tr></table></figure><h4 id="一分钟前"><a href="#一分钟前" class="headerlink" title="一分钟前"></a>一分钟前</h4><figure class="highlight plaintext"><figcaption><span>:</span></figcaption><table><tr><td class="code"><pre><span class="line">t := currentTime.Add(time.Minute * -1)</span><br><span class="line">lastM := t.Unix() - int64(now.Second()) // 上一分钟时间-上一分钟秒数</span><br></pre></td></tr></table></figure><h4 id="年"><a href="#年" class="headerlink" title="年"></a>年</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">year := time.Now().Year()</span><br><span class="line">year := time.Now().Format(&quot;2006&quot;)</span><br></pre></td></tr></table></figure><h4 id="月"><a href="#月" class="headerlink" title="月"></a>月</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">month := time.Now().Month()</span><br><span class="line">month = time.Now().Format(&quot;01&quot;)</span><br><span class="line">month := time.Now().Month().String()</span><br></pre></td></tr></table></figure><h4 id="日"><a href="#日" class="headerlink" title="日"></a>日</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">day := time.Now().Day()</span><br><span class="line">day := time.Now().Format(&quot;02&quot;)</span><br></pre></td></tr></table></figure><h4 id="时分秒"><a href="#时分秒" class="headerlink" title="时分秒"></a>时分秒</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hour := time.Now().Format(&quot;15&quot;)</span><br><span class="line">min := time.Now().Format(&quot;04&quot;)</span><br><span class="line">second := time.Now().Format(&quot;05&quot;)</span><br></pre></td></tr></table></figure><h4 id="今日日期"><a href="#今日日期" class="headerlink" title="今日日期"></a>今日日期</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">time.Now().Format(&quot;20060102&quot;)</span><br><span class="line">&quot;20210520&quot;</span><br></pre></td></tr></table></figure><h4 id="获取今天指定时间戳"><a href="#获取今天指定时间戳" class="headerlink" title="获取今天指定时间戳"></a>获取今天指定时间戳</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 今日9点时间戳</span><br><span class="line">timeUnix := time.Date(t.Year(), t.Month(), t.Day(), 9, 0, 0, 0, t.Location()).Unix()</span><br></pre></td></tr></table></figure><h4 id="时间戳转字符串-amp-字符串转时间戳"><a href="#时间戳转字符串-amp-字符串转时间戳" class="headerlink" title="时间戳转字符串&amp;字符串转时间戳"></a>时间戳转字符串&amp;字符串转时间戳</h4><p><code>t :=time.Now().Unix()</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timeStr= &quot;2021-06-07 16:29:20&quot;`</span><br><span class="line">`formatTime, err := time.Parse(&quot;2006-01-02 15:04:05&quot;, timeStr)</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.csdn.net/u010244957/article/details/116057039">Golang获取年月日时间字符串和时间戳</a></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 类型与相应的取值范围</title>
      <link href="/2022/02/16/Golang-%E7%B1%BB%E5%9E%8B%E4%B8%8E%E7%9B%B8%E5%BA%94%E7%9A%84%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/"/>
      <url>/2022/02/16/Golang-%E7%B1%BB%E5%9E%8B%E4%B8%8E%E7%9B%B8%E5%BA%94%E7%9A%84%E5%8F%96%E5%80%BC%E8%8C%83%E5%9B%B4/</url>
      
        <content type="html"><![CDATA[<h3 id="Int-类型"><a href="#Int-类型" class="headerlink" title="Int 类型"></a>Int 类型</h3><ul><li>int<br>字节大小：与操作系统位数有关，32位int类型为4字节，64位int类型为8字节</li><li>int8 1字节<br>取值范围：-128 ~ 127</li><li>int16 2字节<br>取值范围：-32768 ~ 32767</li><li>int32 4字节<br>取值范围：-2147483648 ~ 2147483647</li><li>int64 8字节<br>取值范围：-9223372036854775808 ~ 9223372036854775807</li><li>uint 无符号int类型<br>字节大小：与操作系统位数有关，32位int类型为4字节，64位int类型为8字节</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uint8:  0 ~ 255</span><br><span class="line">uint16: 0 ~ 65535</span><br><span class="line">uint32: 0 ~ 4294967295</span><br><span class="line">uint64: 0 ~ 18446744073709551615</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 类型转换</title>
      <link href="/2022/02/16/Golang-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
      <url>/2022/02/16/Golang-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="String-To-Int"><a href="#String-To-Int" class="headerlink" title="String To Int"></a>String To Int</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &quot;strconv&quot;  //先导入strconv包</span><br><span class="line"></span><br><span class="line">string转成int：</span><br><span class="line">int, err := strconv.Atoi(string)</span><br><span class="line"></span><br><span class="line">string转成int64：</span><br><span class="line">int64, err := strconv.ParseInt(string, 10, 64)</span><br><span class="line"></span><br><span class="line">int转成string：</span><br><span class="line">string := strconv.Itoa(int)</span><br><span class="line"></span><br><span class="line">int64转成string：</span><br><span class="line">string := strconv.FormatInt(int64,10)</span><br></pre></td></tr></table></figure><h3 id="int-or-float64"><a href="#int-or-float64" class="headerlink" title="int or float64"></a>int or float64</h3><blockquote><p>fmt.Sprint 返回传递给它的任何变量的字符串格式</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pi := fmt.Sprint(3.14)</span><br><span class="line">num := fmt.Sprint(1)</span><br><span class="line">or</span><br><span class="line">fmt.Sprintf(&quot;%v&quot;, 3.14) // &quot;3.14&quot;</span><br><span class="line">fmt.Sprintf(&quot;%v&quot;, 1) // &quot;1&quot;</span><br></pre></td></tr></table></figure><h3 id="interface"><a href="#interface" class="headerlink" title="interface{}"></a>interface{}</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var params interface&#123;&#125;</span><br><span class="line">params.(string)</span><br><span class="line">params.(int)</span><br><span class="line">params.(float64)</span><br></pre></td></tr></table></figure><h3 id="map-string-interface-to-url-values"><a href="#map-string-interface-to-url-values" class="headerlink" title="map[string]interface{} to url.values"></a>map[string]interface{} to url.values</h3><p>因为传入json用map[string]interface{}接收参数时会出现以下情况</p><div class="table-container"><table><thead><tr><th>json</th><th>golang</th></tr></thead><tbody><tr><td>bool</td><td>bool</td></tr><tr><td>number</td><td>float64</td></tr><tr><td>array</td><td>[]interface{}</td></tr><tr><td>object</td><td>map[string]interface{}</td></tr><tr><td>string</td><td>string</td></tr><tr><td>null</td><td>nil</td></tr></tbody></table></div><p>主要对<code>float64</code>进行强制转换：<code>int(v.(float64))</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paramsMap := make(map[string]interface&#123;&#125;)</span><br><span class="line">if err := json.Unmarshal(requestData, &amp;paramsMap); err != nil &#123;</span><br><span class="line">    log.Errorf(&quot;json.Unmarshal error %v&quot;, err)</span><br><span class="line">    return</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">verifyParams := make(url.Values)</span><br><span class="line">for k, v := range paramsMap &#123;</span><br><span class="line">    switch v.(type) &#123;</span><br><span class="line">    case string:</span><br><span class="line">        verifyParams.Add(k, v.(string))</span><br><span class="line">    case int:</span><br><span class="line">        value := strconv.Itoa(v.(int))</span><br><span class="line">        verifyParams.Add(k, value)</span><br><span class="line">    case float64:</span><br><span class="line">        value := strconv.Itoa(int(v.(float64)))</span><br><span class="line">        verifyParams.Add(k, value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.jb51.net/article/130778.htm">使用Go语言解析动态JSON格式的方法</a></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Gorm V2 自定义数据类型实现</title>
      <link href="/2022/02/16/Gorm-V2-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0/"/>
      <url>/2022/02/16/Gorm-V2-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>gorm.io/gorm v1.21.10</li><li>go version go1.16.2 darwin/amd64</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="msyql-json-数据"><a href="#msyql-json-数据" class="headerlink" title="msyql json 数据"></a>msyql json 数据</h4><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://gorm.io/zh_CN/docs/data_types.html">自定义数据类型</a></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
          <category> Gorm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Gorm 常用操作整理</title>
      <link href="/2022/02/16/Gorm-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%86/"/>
      <url>/2022/02/16/Gorm-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>gorm gorm.io/gorm</li><li>go go1.16.2</li><li>gorm v2</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>注：这里使用的是gorm v2<br>区别：</p><p>// v2<br><code>import &quot;gorm.io/gorm&quot;</code></p><p>// v1<br><code>import &quot;github.com/jinzhu/gorm&quot;</code></p><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// AddMember</span><br><span class="line">func (d *Dao) AddMember(member *model.Member) error &#123;</span><br><span class="line">    return d.ORM.Table(member.TableName()).Create(member).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事务新增"><a href="#事务新增" class="headerlink" title="事务新增"></a>事务新增</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// TxAddMember</span><br><span class="line">func (d *Dao) TxAddMembert(tx *gorm.DB, member *member.Member) error &#123;</span><br><span class="line">    return tx.Table(member.TableName()).Create(member).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//DeleteMember</span><br><span class="line">func (d *Dao) DeleteMember(id int64) error &#123;</span><br><span class="line">    return d.ORM.Delete(&amp;model.Member&#123;&#125;, id).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><p><code>d.ORM.Model(&amp;Member).Update(&quot;nickname&quot;:&quot;axin&quot;)</code></p><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><p><code>d.ORM.Model(&amp;Member).Where(&quot;id = ?&quot;, id).First(&amp;member)</code></p><h4 id="判断记录是否存在"><a href="#判断记录是否存在" class="headerlink" title="判断记录是否存在"></a>判断记录是否存在</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">oldMember, err := s.dao.GetMemberById(member.Id)</span><br><span class="line">if errors.Is(err, gorm.ErrRecordNotFound) &#123;</span><br><span class="line">    // 不存在 插入数据</span><br><span class="line">    // do something</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    // 存在 更新数据</span><br><span class="line">    // do something</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if err != nil &#123;</span><br><span class="line">    panic(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// GetMemberById</span><br><span class="line">func (d *Dao) GetMemberById(Id int64) (*model.Member, error) &#123;</span><br><span class="line">member := &amp;model.Task&#123;&#125;</span><br><span class="line">err := d.ORM.Table(member.TableName()).Where(&quot;id = ?&quot;, Id).First(member).Error</span><br><span class="line">if err != nil &#123;</span><br><span class="line">return member, err</span><br><span class="line">&#125;</span><br><span class="line">return member, nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://gorm.io/zh_CN/docs/update.html">官方文档</a></p><p><a href="https://gorm.io/zh_CN/docs/error_handling.html">错误处理</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kratos 入门使用</title>
      <link href="/2022/02/16/Kratos-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/02/16/Kratos-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>kratos version v2.0.0-beta4</li><li>go version go1.16.2 darwin/amd64</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>参考：[快速开始]</p><p>安装命令工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装 kratos 命令工具</span><br><span class="line">go get -u github.com/go-kratos/kratos/cmd/kratos/v2@latest</span><br><span class="line"></span><br><span class="line"># 可能不是最新的项目，可以执行</span><br><span class="line">kratos upgrade</span><br></pre></td></tr></table></figure><p>我这里<code>kratos</code> 还是<code>0.5.0</code>版本，所以我这使用的是<code>kratos upgrade</code></p><p>创建项目</p><p><code>kratos new &lt;project-name&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># axin @ AxindeMacBook-Pro in ~/workspace/goProject [10:55:35]</span><br><span class="line">$ kratos new axin</span><br><span class="line">🚀 Creating service axin, layout repo is https://github.com/go-kratos/kratos-layout.git, please wait a moment.</span><br><span class="line"></span><br><span class="line">Cloning into &#x27;/Users/axin/.kratos/repo/github.com/go-kratos/kratos-layout&#x27;...</span><br><span class="line">remote: Enumerating objects: 540, done.</span><br><span class="line">remote: Counting objects: 100% (540/540), done.</span><br><span class="line">remote: Compressing objects: 100% (231/231), done.</span><br><span class="line">remote: Total 540 (delta 278), reused 486 (delta 240), pack-reused 0</span><br><span class="line">Receiving objects: 100% (540/540), 129.59 KiB | 100.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (278/278), done.</span><br><span class="line">CREATED axin/.gitignore (528 bytes)</span><br><span class="line">CREATED axin/Dockerfile (458 bytes)</span><br><span class="line">CREATED axin/LICENSE (1066 bytes)</span><br><span class="line">CREATED axin/Makefile (2422 bytes)</span><br><span class="line">CREATED axin/README.md (798 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/error_reason.pb.go (5345 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/error_reason.proto (314 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/error_reason.swagger.json (841 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/greeter.pb.go (8230 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/greeter.proto (688 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/greeter.swagger.json (1845 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/greeter_grpc.pb.go (3449 bytes)</span><br><span class="line">CREATED axin/api/helloworld/v1/greeter_http.pb.go (2203 bytes)</span><br><span class="line">CREATED axin/cmd/axin/main.go (1527 bytes)</span><br><span class="line">CREATED axin/cmd/axin/wire.go (549 bytes)</span><br><span class="line">CREATED axin/cmd/axin/wire_gen.go (1017 bytes)</span><br><span class="line">CREATED axin/configs/config.yaml (266 bytes)</span><br><span class="line">CREATED axin/generate.go (54 bytes)</span><br><span class="line">CREATED axin/go.mod (725 bytes)</span><br><span class="line">CREATED axin/go.sum (18353 bytes)</span><br><span class="line">CREATED axin/internal/biz/README.md (6 bytes)</span><br><span class="line">CREATED axin/internal/biz/biz.go (128 bytes)</span><br><span class="line">CREATED axin/internal/biz/greeter.go (683 bytes)</span><br><span class="line">CREATED axin/internal/conf/conf.pb.go (21314 bytes)</span><br><span class="line">CREATED axin/internal/conf/conf.proto (754 bytes)</span><br><span class="line">CREATED axin/internal/data/README.md (7 bytes)</span><br><span class="line">CREATED axin/internal/data/data.go (464 bytes)</span><br><span class="line">CREATED axin/internal/data/greeter.go (507 bytes)</span><br><span class="line">CREATED axin/internal/server/grpc.go (1033 bytes)</span><br><span class="line">CREATED axin/internal/server/http.go (1045 bytes)</span><br><span class="line">CREATED axin/internal/server/server.go (150 bytes)</span><br><span class="line">CREATED axin/internal/service/README.md (10 bytes)</span><br><span class="line">CREATED axin/internal/service/greeter.go (888 bytes)</span><br><span class="line">CREATED axin/internal/service/service.go (136 bytes)</span><br><span class="line"></span><br><span class="line">🍺 Project creation succeeded axin</span><br><span class="line">💻 Use the following command to start the project 👇:</span><br><span class="line"></span><br><span class="line">$ cd axin</span><br><span class="line">$ go generate ./...</span><br><span class="line">$ go build -o ./bin/ ./...</span><br><span class="line">$ ./bin/axin -conf ./configs</span><br><span class="line"></span><br><span class="line">🤝 Thanks for using Kratos</span><br><span class="line">📚 Tutorial: https://go-kratos.dev/docs/getting-started/start</span><br></pre></td></tr></table></figure><h4 id="拉取依赖"><a href="#拉取依赖" class="headerlink" title="拉取依赖"></a>拉取依赖</h4><p><code>cd &lt;project-name&gt; &amp;&amp; go mod download</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># axin @ AxindeMacBook-Pro in ~/workspace/goProject [11:03:40]</span><br><span class="line">$ cd ./axin &amp;&amp; go mod download</span><br></pre></td></tr></table></figure><h4 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h4><p>数据访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># axin @ AxindeMacBook-Pro in ~/workspace/goProject/axin on git:master x [13:38:56]</span><br><span class="line">$ go get entgo.io/ent/cmd/ent</span><br><span class="line">go: downloading entgo.io/ent v0.8.0</span><br><span class="line">go: downloading github.com/go-bindata/go-bindata v1.0.1-0.20190711162640-ee3c2418e368</span><br><span class="line">go get: added entgo.io/ent v0.8.0</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;message&quot;: &quot;Hello kratos&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://go-kratos.dev/">https://go-kratos.dev/</a><br><a href="https://go-kratos.dev/docs/">Docs</a></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
          <category> Kratos </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 日志清理</title>
      <link href="/2022/02/16/Linux-%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86/"/>
      <url>/2022/02/16/Linux-%E6%97%A5%E5%BF%97%E6%B8%85%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>CentOS Linux release 8.3.2011</li></ul><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>磁盘占用90%，利用<code>df -hl &amp; du -sh</code>命令找到</p><p><code>/var/log/messages</code><br><code>/var/log/journal</code></p><p>占用过多，分析日志查看原因</p><p>大量：</p><p><code>Jun 20 03:40:31 iZbp14vt99zpj8dde2fdlmZ crond[208986]: No configuration file found at /root/.esmtprc or /etc/esmtprc</code></p><h3 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h3><h4 id="查看当前日志占用磁盘的空间的总大小"><a href="#查看当前日志占用磁盘的空间的总大小" class="headerlink" title="查看当前日志占用磁盘的空间的总大小"></a>查看当前日志占用磁盘的空间的总大小</h4><p><code>journalctl --disk-usage</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ journal]# journalctl --disk-usage </span><br><span class="line">Archived and active journals take up 3.9G in the file system.</span><br></pre></td></tr></table></figure><h4 id="指定日志文件保存多久"><a href="#指定日志文件保存多久" class="headerlink" title="指定日志文件保存多久"></a>指定日志文件保存多久</h4><p>保存最近一周：<code>journalctl --vacuum-time=1w</code><br>保存最近一年：<code>journalctl --vacuum-time=1years</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ journal]# journalctl --vacuum-time=1w</span><br><span class="line">Vacuuming done, freed 0B of archived journals from /var/log/journal/20210318142909815972522070876808.</span><br></pre></td></tr></table></figure><h4 id="指定日志文件最大空间"><a href="#指定日志文件最大空间" class="headerlink" title="指定日志文件最大空间"></a>指定日志文件最大空间</h4><p>只保留500MB的日志：<code>journalctl --vacuum-size=500M</code><br>只保留1GB的日志：<code>journalctl --vacuum-size=1G</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ journal]# journalctl --vacuum-size=500M</span><br><span class="line">Vacuuming done, freed 3.5G of archived journals from /var/log/journal/20210318142909815972522070876808.</span><br></pre></td></tr></table></figure><p><code>/var/log/messages</code></p><p>问题：No configuration file found at /root/.esmtprc or /etc/esmtprc</p><p>参考：</p><p><a href="https://ipsec.in/2019-04-11/No-configuration-file-found-at-root-esmtprc-or-etc-esmtprc.html">No configuration file found at /root/.esmtprc or /etc/esmtprc</a></p><p><code>Centos 7：yum install -y postfix</code><br><code>Centos 8：dnf install -y postfix</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP Redis 有序列表按参加时间或分值达到时间排序</title>
      <link href="/2022/02/16/PHP-Redis-%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8%E6%8C%89%E5%8F%82%E5%8A%A0%E6%97%B6%E9%97%B4%E6%88%96%E5%88%86%E5%80%BC%E8%BE%BE%E5%88%B0%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/"/>
      <url>/2022/02/16/PHP-Redis-%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8%E6%8C%89%E5%8F%82%E5%8A%A0%E6%97%B6%E9%97%B4%E6%88%96%E5%88%86%E5%80%BC%E8%BE%BE%E5%88%B0%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function addMemberWinNum($memberId, $num = 1)</span><br><span class="line">&#123;</span><br><span class="line">    $expirationTime = $this-&gt;getExpirationTime();</span><br><span class="line">    $existsStatus   = $this-&gt;redis-&gt;exists($this-&gt;rankKey);</span><br><span class="line"></span><br><span class="line">    $res = $this-&gt;redis-&gt;zIncrBy($this-&gt;rankKey, $num, $memberId);</span><br><span class="line">    !$existsStatus &amp;&amp; $this-&gt;redis-&gt;expire($this-&gt;key, $expirationTime - time());</span><br><span class="line">    return $res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Redis 有序列表排序按字母排序，现分数修改如下</span><br><span class="line"> * 分数：整数为分数，小数：最大时间-当前时间</span><br><span class="line"> * @param $score</span><br><span class="line"> * @return string</span><br><span class="line"> */</span><br><span class="line">public function encodeScore($score)</span><br><span class="line">&#123;</span><br><span class="line">    $currentTime = time();</span><br><span class="line">    $diffTime    = Constants::MAX_TIME - $currentTime;</span><br><span class="line">    return (double)&quot;&#123;$score&#125;.&#123;$diffTime&#125;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 增加用户获胜场次 用于排名</span><br><span class="line"> * @param int $memberId 用户</span><br><span class="line"> * @param int $winNum 胜利次数</span><br><span class="line"> * @return float|string</span><br><span class="line"> */</span><br><span class="line">public function addMemberWinNum(int $memberId, int $winNum = 1)</span><br><span class="line">&#123;</span><br><span class="line">    $expirationTime = $this-&gt;getExpirationTime();</span><br><span class="line">    $existsStatus   = $this-&gt;redis-&gt;exists($this-&gt;rankKey);</span><br><span class="line"></span><br><span class="line">    // 按游戏分值达到时间排序</span><br><span class="line">    $oldScore = $this-&gt;redis-&gt;zScore($this-&gt;rankKey, $memberId);</span><br><span class="line">    if ($oldScore) &#123;</span><br><span class="line">        $this-&gt;redis-&gt;zAdd($this-&gt;rankKey, bcadd($winNum, $oldScore, 10), $memberId);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $this-&gt;redis-&gt;zAdd($this-&gt;rankKey, $this-&gt;redis-&gt;encodeScore($winNum), $memberId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 按游戏参加时间排序</span><br><span class="line">    // if ($existsStatus &amp;&amp; $this-&gt;redis-&gt;zExists($this-&gt;rankKey, $memberId)) &#123;</span><br><span class="line">    //     $this-&gt;redis-&gt;zIncrBy($this-&gt;rankKey, $winNum, $memberId);</span><br><span class="line">    // &#125; else &#123;</span><br><span class="line">    //     $this-&gt;redis-&gt;zAdd($this-&gt;rankKey, $this-&gt;redis-&gt;encodeScore($winNum), $memberId);</span><br><span class="line">    // &#125;</span><br><span class="line"></span><br><span class="line">    !$existsStatus &amp;&amp; $this-&gt;redis-&gt;expire($this-&gt;rankKey, $expirationTime - time());</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.redis.net.cn/order/3623.html">Redis Zrevrange 命令</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 日志分析处理</title>
      <link href="/2022/02/16/PHP-%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%A4%84%E7%90%86/"/>
      <url>/2022/02/16/PHP-%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>lnmp 1.7</li><li>PHP 7.3</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>配置日志</p><p><code>vim /usr/local/php7.3/etc/php-fpm.conf</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">request_terminate_timeout = 100</span><br><span class="line">request_slowlog_timeout = 3s</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>request_slowlog_timeout 脚本超过多长时间，记录到日志文件</li><li>slowlog 日志文件的存储路径</li><li>request_terminate_timeout 时间太长的进程直接终止</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Postman 技巧</title>
      <link href="/2022/02/16/Postman-%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/02/16/Postman-%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="路径参数"><a href="#路径参数" class="headerlink" title="路径参数"></a>路径参数</h4><p>使用占位符</p><p><code>&#123;&#123;url&#125;&#125;/helloworld/:name</code></p><p><img src="/images/postman_1.png" alt=""></p><h4 id="登录保存-Token"><a href="#登录保存-Token" class="headerlink" title="登录保存 Token"></a>登录保存 Token</h4><ul><li><p>新建环境变量 </p></li><li><p>登录接口Test中修改为</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var jsonData = JSON.parse(responseBody);</span><br><span class="line">var token = jsonData.data.token;</span><br><span class="line">if (token) &#123;</span><br><span class="line">    tests[&quot;token&quot;] = true;</span><br><span class="line">    pm.environment.set(&quot;token&quot;, token);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    tests[&quot;token&quot;] = false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录请求后，成功会替换环境变量</p><ul><li>需要验证登录的header中修改</li></ul><p><img src="/images/postman_2.png" alt=""></p><h4 id="历史版本下载"><a href="#历史版本下载" class="headerlink" title="历史版本下载"></a>历史版本下载</h4><p>自动给我安装了最新的8.5.1</p><p>出现几个问题，遂找旧版本8.4.0</p><ul><li>api 双击打不开tab</li><li>env 编辑不了</li></ul><p><a href="https://dl.filehorse.com//mac/developer-tools/postman/Postman-osx-8.4.0.zip?st=k9_SowKYtAmgZ_C6NKgFeg&amp;e=1622260233&amp;fn=Postman-osx-8.4.0.zip">Postman 8.4.0</a></p><ul><li>20220216 可能是哪个集合中数据问题，下载最新版本，重新导入json备份就没有该两个问题</li></ul>]]></content>
      
      
      <categories>
          
          <category> Postman </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang Redis 使用示例</title>
      <link href="/2022/02/11/Golang-Redis-%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/"/>
      <url>/2022/02/11/Golang-Redis-%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>go version go1.16.2 darwin/amd64</li><li>redis github.com/go-redis/redis/v8</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">在项目目录下初始化 go mod</span></span><br><span class="line">go mod init</span><br><span class="line"><span class="meta"># </span><span class="language-bash">下载 go-redis 依赖</span></span><br><span class="line">go get github.com/go-redis/redis/v8</span><br></pre></td></tr></table></figure><h3 id="SAdd"><a href="#SAdd" class="headerlink" title="SAdd"></a>SAdd</h3><p>示例</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">robotIdsKey := &quot;axinblog:robot_ids&quot;</span><br><span class="line">var args []interface&#123;&#125;</span><br><span class="line"></span><br><span class="line">for _, item := range res.Members &#123;</span><br><span class="line">        args = append(args, item.Id)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_, err = s.dao.Redis.SAdd(ctx, robotIdsKey, args...).Result()</span><br><span class="line">if err != nil &#123;</span><br><span class="line">    log.Error(&quot;PkGameSVC.PkGameJoinAllRobot SAdd error(%s)&quot;, args, err)</span><br><span class="line">    return</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ZRevRange"><a href="#ZRevRange" class="headerlink" title="ZRevRange"></a>ZRevRange</h3><p>示例</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">var rankColl []string</span><br><span class="line">rankColl, err = d.Redis.ZRevRange(ctx, rankKey, 0, -1).Result()</span><br><span class="line">if err != nil &#123;</span><br><span class="line">    panic(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Expire"><a href="#Expire" class="headerlink" title="Expire"></a>Expire</h3><p>示例</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rankKey := &quot;axinblog:rank&quot;</span><br><span class="line">existsStatus, err := d.Redis.Exists(ctx, rankKey).Result()</span><br><span class="line">currentTime := time.Now()</span><br><span class="line">expirationTime := currentTime.AddDate(0, 0, 3).Sub(currentTime)</span><br><span class="line">d.Redis.ZIncrBy(ctx, rankKey, constant.FirstValue, strconv.FormatInt(winMemberId, 10))</span><br><span class="line">if !(existsStatus &gt; constant.ZeroValue) &#123;</span><br><span class="line">    d.Redis.Expire(ctx, rankKey, expirationTime)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.tizi365.com/archives/296.html">golang redis hash教程</a></p><p><a href="https://www.liwenzhou.com/posts/Go/go_redis/">Go语言操作Redis</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang cron 定时任务</title>
      <link href="/2022/02/11/Golang-cron-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
      <url>/2022/02/11/Golang-cron-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>在线验证工具：<a href="https://crontab.guru/">cron在线工具</a></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">文件格式說明</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">┌──秒（0 - 59）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">│ ┌──分钟（0 - 59）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">│ │  ┌──小时（0 - 23）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">│ │  │  ┌──日（1 - 31）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">│ │  │  │  ┌─月（1 - 12）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">│ │  │  │  │  ┌─星期（0 - 6，表示从周日到周六）</span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">│ │  │  │  │  │</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">*   *   *   *    *   * 被执行的命令</span></span><br></pre></td></tr></table></figure><h3 id="cron-安装-amp-使用"><a href="#cron-安装-amp-使用" class="headerlink" title="cron 安装&amp;使用"></a>cron 安装&amp;使用</h3><p><code>go get github.com/robfig/cron/v3</code></p><p>示例</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(1) */2 * * * * *     每个偶数分执行text</span><br><span class="line">(2) */2 */2 * * * *   每个偶数分 并且是偶数秒执行text</span><br><span class="line">(3) 2,4,6 * * * * *   每分钟的2,4,6这三个秒执行text</span><br><span class="line">(4) 2,4,6 5-6 * * * 1 每周一的5点2,4,6秒和6点2,4,6秒执行text</span><br><span class="line">(5) @daily            每天一次</span><br><span class="line">(6) @midnight         同上</span><br><span class="line">(7) @every 1m30s      定时1分30秒执行text</span><br><span class="line">(8) 0 38 15 * * * 第天下午3点38分0秒执行</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://blog.cugxuan.cn/2020/06/04/Go/golang-cron-v3/">golang cron v3 定时任务</a><br><a href="https://godoc.org/github.com/robfig/cron">github.com/robfig/cron/v3 文档</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang 字符串操作</title>
      <link href="/2022/02/11/Golang-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/02/11/Golang-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="strings-Split-支持单个分隔符"><a href="#strings-Split-支持单个分隔符" class="headerlink" title="strings.Split 支持单个分隔符"></a>strings.Split 支持单个分隔符</h3><p><code>&quot;20|15|12&quot;</code></p><p>转</p><p><code>[20, 15, 12]</code></p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">awardArr := strings.Split(gameConfig.AwardRule, <span class="string">&quot;|&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> awardArr &#123;</span><br><span class="line">    val, _ := strconv.Atoi(item)</span><br><span class="line">    awardRule = <span class="built_in">append</span>(awardRule, val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>&quot;axin,blog,test&quot;</code></p><p>转</p><p><code>[&quot;axin&quot;, &quot;blog&quot;, &quot;test&quot;]</code></p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">str := <span class="string">&quot;axin,blog,test&quot;</span></span><br><span class="line">res := strings.Split(str, <span class="string">&quot;,&quot;</span>)</span><br><span class="line">fmt.Println(res)</span><br></pre></td></tr></table></figure><h3 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h3><p><code>res := strings.Join(str, &quot;,&quot;)</code></p><h3 id="strings-FieldsFunc-支持多个分隔符"><a href="#strings-FieldsFunc-支持多个分隔符" class="headerlink" title="strings.FieldsFunc 支持多个分隔符"></a>strings.FieldsFunc 支持多个分隔符</h3><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">srcStr2 := <span class="string">&quot;a b c,def,k,g&quot;</span></span><br><span class="line">desStr2 := strings.FieldsFunc(srcStr2, splitFunc)</span><br><span class="line">fmt.Printf(<span class="string">&quot;ret:%s\n&quot;</span>, desStr2)</span><br></pre></td></tr></table></figure><h3 id="strings-SplitN-指定分割符号，指定分割次数"><a href="#strings-SplitN-指定分割符号，指定分割次数" class="headerlink" title="strings.SplitN 指定分割符号，指定分割次数"></a>strings.SplitN 指定分割符号，指定分割次数</h3><p><code>countSplit = strings.SplitN(str, &quot; &quot;, 2)</code></p><h3 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h3><h4 id="amp-操作符号"><a href="#amp-操作符号" class="headerlink" title="+ &amp; +=操作符号"></a><code>+</code> &amp; <code>+=</code>操作符号</h4><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">str := <span class="string">&quot;hello&quot;</span> + <span class="string">&quot;world&quot;</span></span><br><span class="line">fmt.Println(str) <span class="comment">// helloworld</span></span><br><span class="line"></span><br><span class="line">str1 := <span class="string">&quot;hello&quot;</span></span><br><span class="line">str2 := <span class="string">&quot;world&quot;</span></span><br><span class="line">str1 += str2</span><br><span class="line">fmt.Println(str1) <span class="comment">// helloworld</span></span><br></pre></td></tr></table></figure><h4 id="bytes-Buffer"><a href="#bytes-Buffer" class="headerlink" title="bytes.Buffer"></a>bytes.Buffer</h4><p><code>bytes.Buffer</code>中<code>WriterString()</code>连接字符串的字节，从而实现连接字符串的目的。这种方法避免产生不必要的字符串对象，即不需要像使用+那样生成新的字符串对象。</p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">str := bytes.Buffer&#123;&#125;</span><br><span class="line">str.WriteString(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">str.WriteString(<span class="string">&quot;world&quot;</span>)</span><br><span class="line">fmt.Println(str.String()) <span class="comment">// helloworld</span></span><br></pre></td></tr></table></figure><p>或使用字符串工具类<code>strings</code></p><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str strings.Builder</span><br><span class="line">str.WriteString(<span class="string">&quot;Hello &quot;</span>)</span><br><span class="line">str.WriteString(<span class="string">&quot;世界&quot;</span>)</span><br><span class="line">fmt.Println(str.String())</span><br></pre></td></tr></table></figure><h4 id="Sprintf"><a href="#Sprintf" class="headerlink" title="Sprintf"></a>Sprintf</h4><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">str := fmt.Sprintf(<span class="string">&quot;%s:%d&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8080</span>)</span><br><span class="line">fmt.Println(str)</span><br></pre></td></tr></table></figure><h4 id="strings-Join"><a href="#strings-Join" class="headerlink" title="strings.Join"></a>strings.Join</h4><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line">str := strings.Join([]<span class="type">string</span>&#123;<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>&#125;, <span class="string">&quot;&quot;</span>)</span><br><span class="line">fmt.Println(str) <span class="comment">// helloworld</span></span><br></pre></td></tr></table></figure><h3 id="判断首尾字符"><a href="#判断首尾字符" class="headerlink" title="判断首尾字符"></a>判断首尾字符</h3><h4 id="判断是否https-开头"><a href="#判断是否https-开头" class="headerlink" title="判断是否https://开头"></a>判断是否<code>https://</code>开头</h4><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> !strings.HasPrefix(url, <span class="string">&quot;http://&quot;</span>) &#123;</span><br><span class="line">url = <span class="string">&quot;http://&quot;</span> + url</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// HasPrefix tests whether the string s begins with prefix.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HasPrefix</span><span class="params">(s, prefix <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(s) &gt;= <span class="built_in">len</span>(prefix) &amp;&amp; s[<span class="number">0</span>:<span class="built_in">len</span>(prefix)] == prefix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="判断是否-img结尾"><a href="#判断是否-img结尾" class="headerlink" title="判断是否.img结尾"></a>判断是否.img结尾</h4><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> !strings.HasSuffix(url, <span class="string">&quot;.img&quot;</span>) &#123;</span><br><span class="line">url += <span class="string">&quot;.img&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// HasSuffix tests whether the string s ends with suffix.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HasSuffix</span><span class="params">(s, suffix <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(s) &gt;= <span class="built_in">len</span>(suffix) &amp;&amp; s[<span class="built_in">len</span>(s)-<span class="built_in">len</span>(suffix):] == suffix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="string-大小写转换"><a href="#string-大小写转换" class="headerlink" title="string 大小写转换"></a>string 大小写转换</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、func Title(s string) string</span><br><span class="line">将字符串s每个单词首字母大写返回</span><br><span class="line">2、func ToLower(s string) string</span><br><span class="line">将字符串s转换成小写返回</span><br><span class="line">3、func ToLowerSpecial(_case unicode.SpecialCase, s string) string</span><br><span class="line">将字符串s中所有字符按_case指定的映射转换成小写返回</span><br><span class="line">4、func ToTitle(s string) string</span><br><span class="line">将字符串s转换成大写返回</span><br><span class="line">5、func ToTitleSpecial(_case unicode.SpecialCase, s string) string</span><br><span class="line">将字符串s中所有字符按_case指定的映射转换成大写返回</span><br><span class="line">6、func ToUpper(s string) string</span><br><span class="line">将字符串s转换成大写返回</span><br><span class="line">7、func ToUpperSpecial(_case unicode.SpecialCase, s string) string</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.jianshu.com/p/df92c0ee6cc8">golang 几种字符串的连接方式</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Gorse 入门使用教程</title>
      <link href="/2022/02/11/Gorse-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2022/02/11/Gorse-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Laravel 开发环境 Homestead 已安装redis，mysql</li><li>Gorse 0.2.0</li><li>测试环境：Ubuntu 20.04.1 LTS (GNU/Linux 5.4.0-48-generic x86_64)</li><li>开发环境：mac</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>git clone 代码到本地</p><p><code>go get github.com/zhenghaoz/gorse/...</code></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>复制config目录下</p><p><code>gorse/config/config.toml.template</code></p><p>为</p><p><code>config.toml</code></p><p>修改Redis与mysql链接信息</p><p>这是我修改的结果</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[database]</span><br><span class="line"><span class="meta"># </span><span class="language-bash">database <span class="keyword">for</span> caching (support Redis only)</span></span><br><span class="line">cache_store = &quot;redis://192.168.10.10:6379&quot;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">database <span class="keyword">for</span> persist data (support MySQL/MongoDB/Redis)</span></span><br><span class="line">data_store = &quot;mysql://homestead:secret@tcp(192.168.10.10:3306)/gorse?parseTime=true&quot;</span><br></pre></td></tr></table></figure><p>文件位置如图</p><p><img src="/images/gorse_1.png" alt=""></p><h4 id="导入测试数据"><a href="#导入测试数据" class="headerlink" title="导入测试数据"></a>导入测试数据</h4><p>测试数据：<a href="https://cdn.gorse.io/example/github.sql">github.sql</a></p><p>我这里用Navicat Mysql 直接导入的。</p><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>goland gorse-master 增加运行参数如下</p><p><img src="/images/gorse_2.png" alt=""></p><p>使用<code>config</code>目录下的你自己配置的<code>config.toml</code></p><p>依次运行：</p><ol><li>gorse-master </li><li>gorse-server </li><li>gorse-worker</li></ol><p><img src="/images/gorse_3.png" alt=""></p><p>worker在模型训练CPU会狂飙一会。</p><p><img src="/images/gorse_4.png" alt=""></p><p><a href="http://127.0.0.1:8087/apidocs/">API文档地址</a></p><h4 id="调用推荐数据"><a href="#调用推荐数据" class="headerlink" title="调用推荐数据"></a>调用推荐数据</h4><p>访问上面的API文档地址</p><p><img src="/images/gorse_5.png" alt=""></p><p>用postman调用就能看到相应的推荐items</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://docs.gorse.io/">Gorse推荐系统文档</a></p><p><a href="https://zhuanlan.zhihu.com/p/91014973">使用Flask快速搭建一个Steam游戏推荐系统</a></p><p><a href="https://github.com/zhenghaoz/gorse/tree/master/cmd">Run Gorse Manually</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Gradle 安装与升级</title>
      <link href="/2022/02/11/Gradle-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%87%E7%BA%A7/"/>
      <url>/2022/02/11/Gradle-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>今天打开Android Studio 提示我gradle版本太低了，升级一下gradle吧</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Minimum supported Gradle version is 6.5. Current version is 6.4.</span><br><span class="line"></span><br><span class="line">Please fix the project&#x27;s Gradle settings.</span><br><span class="line">Fix Gradle wrapper and re-import project</span><br><span class="line">Open Gradle wrapper properties</span><br><span class="line">Gradle Settings.</span><br></pre></td></tr></table></figure><h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>mac</li><li>gradle 6.4 升级到 gradle 6.9</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><p>点击<a href="https://gradle.org/releases/">官网</a>下载</p><p><img src="/images/gradle_install_update_1.png" alt=""></p><p>解压移动到你的安装目录</p><blockquote><p>我这里是解压到了usr/local/gradle目录中</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">pwd</span></span></span><br><span class="line">/usr/local/gradle</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">axin @ AxindeMacBook-Pro <span class="keyword">in</span> /usr/local/gradle [22:34:30]</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">ll</span></span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x@ 8 axin  staff   256B  2  1  1980 gradle-6.4</span><br><span class="line">drwxr-xr-x  8 axin  wheel   256B  2  1  1980 gradle-6.9</span><br></pre></td></tr></table></figure><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p><code>$ vim .bash_profile</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">gradle</span></span><br><span class="line">export GRADLE_HOME=/usr/local/gradle/gradle-6.9</span><br><span class="line">export PATH=$PATH:$GRADLE_HOME/bin</span><br></pre></td></tr></table></figure><p><code>source .bash_profile</code></p><h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><p>终端输入</p><p><code>gradle -v</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">axin @ AxindeMacBook-Pro <span class="keyword">in</span> ~ [22:23:53]</span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">gradle -v</span></span><br><span class="line"></span><br><span class="line">Welcome to Gradle 6.9!</span><br><span class="line"></span><br><span class="line">Here are the highlights of this release:</span><br><span class="line"> - This is a small backport release.</span><br><span class="line"> - Java 16 can be used to compile when used with Java toolchains</span><br><span class="line"> - Dynamic versions can be used within plugin declarations</span><br><span class="line"> - Native support for Apple Silicon processors</span><br><span class="line"></span><br><span class="line">For more details see https://docs.gradle.org/6.9/release-notes.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------------------------------------------------------------</span><br><span class="line">Gradle 6.9</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Build time:   2021-05-07 07:28:53 UTC</span><br><span class="line">Revision:     afe2e24ababc7b0213ccffff44970aa18035fc0e</span><br><span class="line"></span><br><span class="line">Kotlin:       1.4.20</span><br><span class="line">Groovy:       2.5.12</span><br><span class="line">Ant:          Apache Ant(TM) version 1.10.9 compiled on September 27 2020</span><br><span class="line">JVM:          1.8.0_231 (Oracle Corporation 25.231-b11)</span><br><span class="line">OS:           Mac OS X 10.14.5 x86_64</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Gradle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP Redis 操作</title>
      <link href="/2022/02/11/PHP-Redis-%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/02/11/PHP-Redis-%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="sAdd"><a href="#sAdd" class="headerlink" title="sAdd"></a>sAdd</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$array</span>=[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>];</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">sAdd</span>(<span class="string">&#x27;set_test&#x27;</span>, ...<span class="variable">$array</span>);</span><br><span class="line">PHP版本得<span class="number">5.6</span>及以上</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func_array</span>(<span class="keyword">array</span>(<span class="variable language_">$this</span>-&gt;redis, <span class="string">&#x27;sAdd&#x27;</span>), <span class="variable">$array</span>);</span><br></pre></td></tr></table></figure><h3 id="Redis-TTL命令用于获取键到期的剩余时间-秒-。"><a href="#Redis-TTL命令用于获取键到期的剩余时间-秒-。" class="headerlink" title="Redis TTL命令用于获取键到期的剩余时间(秒)。"></a>Redis TTL命令用于获取键到期的剩余时间(秒)。</h3><p>返回值<br>以毫秒为单位的整数值TTL或负值<br>TTL以毫秒为单位。<br>-1, 如果key没有到期超时。<br>-2, 如果键不存在。</p><p><code>$this-&gt;redis-&gt;ttl($key)</code></p><h3 id="判断key是否过期"><a href="#判断key是否过期" class="headerlink" title="判断key是否过期"></a>判断key是否过期</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断key是否过期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isExpire</span>(<span class="params"><span class="variable">$key</span></span>): <span class="title">bool</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">ttl</span>(<span class="variable">$key</span>) &gt; <span class="number">0</span> ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Homestead 配置Xdebug</title>
      <link href="/2022/02/11/Homestead-%E9%85%8D%E7%BD%AEXdebug/"/>
      <url>/2022/02/11/Homestead-%E9%85%8D%E7%BD%AEXdebug/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>修改xdebug配置</p><p><code>sudo vim /etc/php/7.x/fpm/conf.d/20-xdebug.ini</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">zend_extension=xdebug.so</span><br><span class="line">xdebug.remote_enable = 1</span><br><span class="line">xdebug.remote_connect_back = 1</span><br><span class="line">xdebug.remote_port = 9000</span><br><span class="line">xdebug.max_nesting_level = 512</span><br></pre></td></tr></table></figure><p>改成如下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">zend_extension=xdebug.so</span><br><span class="line">xdebug.remote_enable = 1</span><br><span class="line">xdebug.remote_connect_back = 1</span><br><span class="line">xdebug.remote_port = 9000</span><br><span class="line">xdebug.max_nesting_level = 512</span><br><span class="line">xdebug.remote_handler = dbgp</span><br><span class="line">xdebug.idekey = PHPSTORM</span><br><span class="line">xdebug.remote_log = /tmp/xdebug.log</span><br></pre></td></tr></table></figure><p>修改保存后重启 php-fpm 服务。</p><p><code>service php7.4-fpm restart</code></p><p>这里会让你输入ssh密码：</p><p>我没改过homestead密码所以是：<code>vagrant</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  fpm service php7.4-fpm restart</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</span><br><span class="line">Authentication is required to restart &#x27;php7.4-fpm.service&#x27;.</span><br><span class="line">Authenticating as: vagrant,,, (vagrant)</span><br><span class="line">Password:</span><br></pre></td></tr></table></figure><p>输出<code>phpinfo();</code>可以看到已经成功了</p><p><img src="/images/homestead_xdebug_1.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP 常用文件目录常用操作</title>
      <link href="/2022/02/11/PHP-%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/02/11/PHP-%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="basename"><a href="#basename" class="headerlink" title="basename()"></a>basename()</h3><p>basename()函数返回路径中的文件名部分。</p><p>语法：</p><p><code>basename(path, suffix)</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="language-bash">path = <span class="string">&quot;/testweb/home.php&quot;</span>;</span></span><br><span class="line"></span><br><span class="line">//显示带有文件扩展名的文件名</span><br><span class="line">echo basename($path);</span><br><span class="line"></span><br><span class="line">//显示不带有文件扩展名的文件名</span><br><span class="line">echo basename($path,&quot;.php&quot;);</span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure><h3 id="dirname"><a href="#dirname" class="headerlink" title="dirname()"></a>dirname()</h3><p>dirname() 函数返回路径中的目录部分。</p><p>语法：</p><p><code>dirname(path)</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo dirname(&quot;c:/testweb/home.php&quot;);</span><br><span class="line">echo dirname(&quot;/testweb/home.php&quot;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">Output</span><br><span class="line"></span><br><span class="line">c:/testweb</span><br><span class="line">/testweb</span><br></pre></td></tr></table></figure><h3 id="pathinfo"><a href="#pathinfo" class="headerlink" title="pathinfo()"></a>pathinfo()</h3><p>pathinfo() 函数以数组的形式返回文件路径的信息。</p><p>语法：</p><p><code>pathinfo(path, options)</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">print_r(pathinfo(&quot;/testweb/test.txt&quot;));</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">Output</span><br><span class="line"></span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [dirname] =&gt; /testweb</span><br><span class="line">    [basename] =&gt; test.txt</span><br><span class="line">    [extension] =&gt; txt</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">print_r(pathinfo(&quot;/testweb/test.txt&quot;,PATHINFO_BASENAME));</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">Output</span><br><span class="line"></span><br><span class="line">test.txt</span><br></pre></td></tr></table></figure><h3 id="目录分隔符号"><a href="#目录分隔符号" class="headerlink" title="目录分隔符号"></a>目录分隔符号</h3><div class="table-container"><table><thead><tr><th>系统</th><th>分隔符号</th></tr></thead><tbody><tr><td>windows</td><td>\ or /</td></tr><tr><td>linux</td><td>/</td></tr></tbody></table></div><p><code>DIRECTORY_SEPARATOR</code></p><p>在windows上返回<code>&quot;&quot;</code>，而在linux或者类unix上返回<code>&quot;/&quot;</code>;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Sketch 操作大全</title>
      <link href="/2022/02/11/Sketch-%E6%93%8D%E4%BD%9C%E5%A4%A7%E5%85%A8/"/>
      <url>/2022/02/11/Sketch-%E6%93%8D%E4%BD%9C%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="图片置入到形状"><a href="#图片置入到形状" class="headerlink" title="图片置入到形状"></a>图片置入到形状</h3><p>场景：用户头像图片置入到圆形形状中</p><p>选中图片圆形形状，快捷键<code>Control+Command+M</code>。</p><h3 id="编组快捷键"><a href="#编组快捷键" class="headerlink" title="编组快捷键"></a>编组快捷键</h3><p><code>Command+G</code></p><h3 id="距离测算"><a href="#距离测算" class="headerlink" title="距离测算"></a>距离测算</h3><p>按住Option键+移动鼠标</p><h3 id="快速复制"><a href="#快速复制" class="headerlink" title="快速复制"></a>快速复制</h3><p>按住<code>Option</code>键，点击要复制的元素拖动，再按<code>Command+D</code>重复以上操作</p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><div class="table-container"><table><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>新建画板</td><td>【A】</td></tr><tr><td>切片</td><td>【S】</td></tr><tr><td>矩形</td><td>【R】</td></tr><tr><td>圆角矩形</td><td>【U】</td></tr><tr><td>圆形</td><td>【O】</td></tr><tr><td>直线</td><td>【L】</td></tr><tr><td>钢笔</td><td>【V】</td></tr><tr><td>笔</td><td>【P】</td></tr><tr><td>文字</td><td>【T】</td></tr></tbody></table></div><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.jianshu.com/p/bac4ef58c3a6">Sketch技巧（一）常用快捷键</a></p><p><a href="http://www.sucaijishi.com/articles-51-128-1.html">Sketch设计提速10个使用技巧</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>开发中如何清除公众号页面授权及缓存</title>
      <link href="/2022/02/11/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%85%AC%E4%BC%97%E5%8F%B7%E9%A1%B5%E9%9D%A2%E6%8E%88%E6%9D%83%E5%8F%8A%E7%BC%93%E5%AD%98/"/>
      <url>/2022/02/11/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E5%85%AC%E4%BC%97%E5%8F%B7%E9%A1%B5%E9%9D%A2%E6%8E%88%E6%9D%83%E5%8F%8A%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>以下方法不保证一定有用：</p><p>按操作容易程序排列</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">debugx5.qq.com</span><br><span class="line">debugtbs.qq.com</span><br><span class="line">debugmm.qq.com/?forcex5=true</span><br></pre></td></tr></table></figure><ul><li>Android 应用管理中清除应用缓存</li><li>重新登录微信</li><li>删除微信</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 微信开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信支付：H5支付</title>
      <link href="/2022/02/11/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-H5%E6%94%AF%E4%BB%98/"/>
      <url>/2022/02/11/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-H5%E6%94%AF%E4%BB%98/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>产品中心-我的产品-H5支付</p><p>添加H5支付域名</p><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_3_1.shtml">H5支付</a></p><p><a href="https://cloud.tencent.com/developer/article/1135035">一个PHP文件搞定微信H5支付</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 微信开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信支付 </tag>
            
            <tag> H5支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos8 Supervisor安装与使用</title>
      <link href="/2022/02/10/Centos8-Supervisor%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/02/10/Centos8-Supervisor%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Supervisor</li><li>CentOS Linux release 8.3.2011</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>yum安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo su - #切换为root用户</span><br><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y supervisor</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>生成配置</p><p><code>echo_supervisord_conf &gt; /etc/supervisord.conf</code></p><p>设置开机启动</p><p><code>systemctl enable supervisord</code></p><p>开启服务</p><p><code>systemctl start supervisord</code></p><p>查看supervisord服务状态</p><p><code>systemctl status supervisord</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# systemctl status supervisord</span><br><span class="line">● supervisord.service - Process Monitoring and Control Daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/supervisord.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Thu 2021-04-29 16:07:29 CST; 6min ago</span><br><span class="line">  Process: 53851 ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 53885 (supervisord)</span><br><span class="line">    Tasks: 1 (limit: 47779)</span><br><span class="line">   Memory: 16.3M</span><br><span class="line">   CGroup: /system.slice/supervisord.service</span><br><span class="line">           └─53885 /usr/bin/python3.6 /usr/bin/supervisord -c /etc/supervisord.conf</span><br><span class="line"></span><br><span class="line">Apr 29 16:07:29 iZbp14vt99zpj8dde2fdlmZ systemd[1]: Starting Process Monitoring and Control Daemon...</span><br><span class="line">Apr 29 16:07:29 iZbp14vt99zpj8dde2fdlmZ systemd[1]: Started Process Monitoring and Control Daemon.</span><br></pre></td></tr></table></figure><p>修改配置</p><p><code>vim /etc/supervisord.conf</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">;port=127.0.0.1:9001        ; ip_address:port specifier, *:port for all iface</span><br><span class="line">;username=user              ; default is no username (open server)</span><br><span class="line">;password=123               ; default is no password (open server)</span><br><span class="line">改</span><br><span class="line">[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">port=*:端口号        ; ip_address:port specifier, *:port for all iface</span><br><span class="line">username=账号              ; default is no username (open server)</span><br><span class="line">password=密码  ; default is no password (open server)</span><br></pre></td></tr></table></figure><blockquote><p>注：以上 端口 与 账号密码 按需配置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;[include]</span><br><span class="line">;files = relative/directory/*.ini</span><br><span class="line">改</span><br><span class="line">[include]</span><br><span class="line">files = supervisord.d/*.ini</span><br></pre></td></tr></table></figure><blockquote><p>注：目录按需配置</p></blockquote><p>修改完配置后重启</p><p><code>systemctl restart supervisord.service</code></p><p>输入你的服务地址，或你本地测试地址加配置中的端口号</p><p><img src="/images/centos_supervisor_1.png" alt=""></p><blockquote><p>注：如果是阿里云，需要配置安全组端口开放</p></blockquote><p>登录进去后，效果如下</p><p><img src="/images/centos_supervisor_2.png" alt=""></p><h4 id="监听配置"><a href="#监听配置" class="headerlink" title="监听配置"></a>监听配置</h4><p>我这里贴一下我的监听配置文件（仅供参考）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 程序名称</span><br><span class="line">[program:TaskExpire]</span><br><span class="line"># 执行命令</span><br><span class="line">command = php think task_expire</span><br><span class="line"># 启动个数</span><br><span class="line">numprocs = 1</span><br><span class="line"># 程序路径</span><br><span class="line">directory = /home/wwwroot/www.axinblog.com/</span><br><span class="line"># 自动开始</span><br><span class="line">autostart = true</span><br><span class="line"># 自动重启</span><br><span class="line">autorestart = true</span><br><span class="line"># 进程启动后运行秒钟，才被认定为成功启动</span><br><span class="line">startsecs = 10</span><br><span class="line"># 启动失败自动重试次数</span><br><span class="line">startretries = 3</span><br><span class="line"># 进程退出码</span><br><span class="line">exitcodes = 0</span><br><span class="line"># 进程停止信号</span><br><span class="line">stopsignal = KILL</span><br><span class="line"># 向子进程发送stopsignal信号后，到系统返回信息给supervisord，所等待的最大时间</span><br><span class="line">stopwaitsecs = 10</span><br><span class="line"># 日志输出</span><br><span class="line">stderr_logfile = /home/wwwroot/www.axinblog.com/log/task_expire_stderr.log</span><br><span class="line">stdout_logfile = /home/wwwroot/www.axinblog.com/log/task_expire_stdout.log</span><br><span class="line"># 把stderr重定向到stdout，默认 false</span><br><span class="line">redirect_stderr = true</span><br><span class="line"># stdout日志文件大小，默认 50MB</span><br><span class="line">stdout_logfile_maxbytes = 20MB</span><br><span class="line"># stdout日志文件备份数</span><br><span class="line">stdout_logfile_backups = 20</span><br></pre></td></tr></table></figure><p>把命令配置文件保存到上方supervisord.conf配置中的include目录下</p><p>例：我的监听配置目录为</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[include]</span><br><span class="line">files = supervisord.d/*.ini</span><br></pre></td></tr></table></figure><p>重启服务</p><p><code>supervisorctl reload</code> 或 <code>systemctl restart supervisord.service</code></p><p>效果如下</p><p><img src="/images/centos_supervisor_3.png" alt=""></p><blockquote><p>监听配置详解</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; The sample eventlistener section below shows all possible eventlistener</span><br><span class="line">; subsection values.  Create one or more &#x27;real&#x27; eventlistener: sections to be</span><br><span class="line">; able to handle event notifications sent by supervisord.</span><br><span class="line"></span><br><span class="line">;[eventlistener:theeventlistenername]</span><br><span class="line">;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)</span><br><span class="line">;process_name=%(program_name)s ; process_name expr (default %(program_name)s)</span><br><span class="line">;numprocs=1                    ; number of processes copies to start (def 1)</span><br><span class="line">;events=EVENT                  ; event notif. types to subscribe to (req&#x27;d)</span><br><span class="line">;buffer_size=10                ; event buffer queue size (default 10)</span><br><span class="line">;directory=/tmp                ; directory to cwd to before exec (def no cwd)</span><br><span class="line">;umask=022                     ; umask for process (default None)</span><br><span class="line">;priority=-1                   ; the relative start priority (default -1)</span><br><span class="line">;autostart=true                ; start at supervisord start (default: true)</span><br><span class="line">;startsecs=1                   ; # of secs prog must stay up to be running (def. 1)</span><br><span class="line">;startretries=3                ; max # of serial start failures when starting (default 3)</span><br><span class="line">;autorestart=unexpected        ; autorestart if exited after running (def: unexpected)</span><br><span class="line">;exitcodes=0                   ; &#x27;expected&#x27; exit codes used with autorestart (default 0)</span><br><span class="line">;stopsignal=QUIT               ; signal used to kill process (default TERM)</span><br><span class="line">;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">;stopasgroup=false             ; send stop signal to the UNIX process group (default false)</span><br><span class="line">;killasgroup=false             ; SIGKILL the UNIX process group (def false)</span><br><span class="line">;user=chrism                   ; setuid to this UNIX account to run the program</span><br><span class="line">;redirect_stderr=false         ; redirect_stderr=true is not allowed for eventlisteners</span><br><span class="line">;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO</span><br><span class="line">;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)</span><br><span class="line">;stdout_events_enabled=false   ; emit events on stdout writes (default false)</span><br><span class="line">;stdout_syslog=false           ; send stdout to syslog with process name (default false)</span><br><span class="line">;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO</span><br><span class="line">;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">;stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)</span><br><span class="line">;stderr_events_enabled=false   ; emit events on stderr writes (default false)</span><br><span class="line">;stderr_syslog=false           ; send stderr to syslog with process name (default false)</span><br><span class="line">;environment=A=&quot;1&quot;,B=&quot;2&quot;       ; process environment additions</span><br><span class="line">;serverurl=AUTO                ; override serverurl computation (childutils)</span><br></pre></td></tr></table></figure><h4 id="命令扩展"><a href="#命令扩展" class="headerlink" title="命令扩展"></a>命令扩展</h4><p>supervisor 、supervisord、supervisorctl</p><pre><code>supervisor：要安装的软件的名称。supervisord：supervisor的守护进程（一般结尾是d的都是守护进程）装好supervisor后，supervisord用于启动supervisor服务。supervisorctl：用于管理supervisor配置文件中的各种其他进程。</code></pre><p>输出版本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">supervisord -v</span><br><span class="line">4.2.1</span><br></pre></td></tr></table></figure><p>重启</p><p><code>supervisorctl reload</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# supervisorctl reload</span><br><span class="line">Restarted supervisord</span><br></pre></td></tr></table></figure><p>查看所有监听状态</p><p><code>supervisorctl status</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# supervisorctl status</span><br><span class="line">ReviewExpire                     RUNNING   pid 89060, uptime 18:49:53</span><br><span class="line">SubmitExpire                     RUNNING   pid 89061, uptime 18:49:53</span><br><span class="line">TaskExpire                       RUNNING   pid 89062, uptime 18:49:53</span><br></pre></td></tr></table></figure><p>停止监听</p><p><code>supervisorctl stop &lt;监听配置中program的名称&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# supervisorctl stop</span><br><span class="line">Error: stop requires a process name</span><br><span class="line">stop &lt;name&gt;             Stop a process</span><br><span class="line">stop &lt;gname&gt;:*          Stop all processes in a group</span><br><span class="line">stop &lt;name&gt; &lt;name&gt;      Stop multiple processes or groups</span><br><span class="line">stop all                Stop all processes</span><br></pre></td></tr></table></figure><p>启动监听</p><p><code>supervisorctl start &lt;监听配置中program的名称&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ ~]# supervisorctl start</span><br><span class="line">Error: start requires a process name</span><br><span class="line">start &lt;name&gt;            Start a process</span><br><span class="line">start &lt;gname&gt;:*         Start all processes in a group</span><br><span class="line">start &lt;name&gt; &lt;name&gt;     Start multiple processes or groups</span><br><span class="line">start all               Start all processes</span><br></pre></td></tr></table></figure><p>监听配置文件修改后使用该命令加载新的配置</p><p><code>supervisorctl update</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ supervisord.d]# supervisorctl update</span><br><span class="line">DtRankSettle: added process group</span><br><span class="line">DtRobotJoin: added process group</span><br></pre></td></tr></table></figure><p>查看supervisord进程</p><p><code>ps -ef | grep supervisord</code></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Supervisor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql No space left on device</title>
      <link href="/2022/02/10/Mysql-No-space-left-on-device/"/>
      <url>/2022/02/10/Mysql-No-space-left-on-device/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos 8</li><li>Mysql</li></ul><h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><p>接口报错：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQLSTATE[HY000]: General error: 1 Can&#x27;t create/write to file &#x27;/tmp/#sql_f189b_0.MYI&#x27; (Errcode: 28 - No space left on device)</span><br></pre></td></tr></table></figure><p>登录shell：</p><p><code>wwwr-bash: cannot create temp file for here-document: No space left on device</code></p><h3 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h3><p>测试服务器cli程序bug一直写日志，把服务器磁盘写满了。</p><p>改程序bug，删除日志。</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql 索引</title>
      <link href="/2022/02/10/Mysql-%E7%B4%A2%E5%BC%95/"/>
      <url>/2022/02/10/Mysql-%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h3 id="场景说明"><a href="#场景说明" class="headerlink" title="场景说明"></a>场景说明</h3><p>用户邀请表如下</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `cd_member_invite` (</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">`invite_id` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;邀请人ID&#x27;</span>,</span><br><span class="line">`to_invite_id` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;被邀请人ID&#x27;</span>,</span><br><span class="line">`create_time` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">`update_time` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line"><span class="keyword">UNIQUE</span> KEY `invite_id_to_invite_id` (`invite_id`,`to_invite_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">15</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br></pre></td></tr></table></figure><p>需要保证invite_id与to_invite_id确定唯一的邀请记录</p><h3 id="索引示例"><a href="#索引示例" class="headerlink" title="索引示例"></a>索引示例</h3><h4 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h4><p><code>show index from `table_name`;</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">show index from cd_member_invite;</span></span><br><span class="line">+------------------+------------+------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><br><span class="line">| Table            | Non_unique | Key_name               | Seq_in_index | Column_name  | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |</span><br><span class="line">+------------------+------------+------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><br><span class="line">| cd_member_invite |          0 | PRIMARY                |            1 | id           | A         |           0 | NULL     | NULL   |      | BTREE      |         |               |</span><br><span class="line">| cd_member_invite |          0 | invite_id_to_invite_id |            1 | invite_id    | A         |           0 | NULL     | NULL   | YES  | BTREE      |         |               |</span><br><span class="line">| cd_member_invite |          0 | invite_id_to_invite_id |            2 | to_invite_id | A         |           0 | NULL     | NULL   | YES  | BTREE      |         |               |</span><br><span class="line">+------------------+------------+------------------------+--------------+--------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span><br><span class="line">3 rows in set (0.03 sec)</span><br></pre></td></tr></table></figure><h4 id="主键索引"><a href="#主键索引" class="headerlink" title="主键索引"></a>主键索引</h4><p><code>ALTER TABLE `table_name` ADD PRIMARY KEY ( `column` );</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">ALTER TABLE `cd_member_invite` ADD PRIMARY KEY ( `<span class="built_in">id</span>` );</span></span><br><span class="line">Query OK, 0 rows affected (0.07 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><p><code>ALTER TABLE `table_name` ADD UNIQUE ( `column` );</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">ALTER TABLE `cd_member_invite` ADD UNIQUE ( `invite_id` );</span></span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h4><p><code>ALTER TABLE `table_name` ADD INDEX ( `column` );</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">ALTER TABLE `cd_member_invite` ADD INDEX ( `to_invite_id` );</span></span><br><span class="line">Query OK, 0 rows affected (0.06 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h4><p><code>ALTER TABLE `table_name` ADD FULLTEXT ( `column` );</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">ALTER TABLE `cd_article` ADD FULLTEXT ( `content` );</span></span><br><span class="line">Query OK, 0 rows affected (0.26 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 1</span><br></pre></td></tr></table></figure><h4 id="多列索引"><a href="#多列索引" class="headerlink" title="多列索引"></a>多列索引</h4><p><code>ALTER TABLE `table_name` ADD INDEX index_name ( `column1`, `column2`, `column3` );</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">ALTER TABLE `cd_member_invite` ADD INDEX invite_id_to_invite_id ( `invite_id`, `to_invite_id`);</span></span><br><span class="line">Query OK, 0 rows affected (0.10 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h4 id="联合唯一索引"><a href="#联合唯一索引" class="headerlink" title="联合唯一索引"></a>联合唯一索引</h4><ul><li>UNIQUE INDEX</li></ul><p><code>ALTER TABLE `table_name` ADD UNIQUE INDEX (`column1`, `column2`)</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt; </span><span class="language-bash">ALTER TABLE `cd_member_invite` ADD UNIQUE INDEX (`invite_id`, `to_invite_id`);</span></span><br><span class="line">Query OK, 0 rows affected (0.09 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><ul><li>UNIQUE INDEX INDEXNAME</li></ul><p><code>ALTER TABLE `table_name` ADD UNIQUE INDEX index_name (`column1`, `column2`);</code></p><ul><li>UNIQUE KEY</li></ul><p><code>ALTER TABLE `table_name` ADD UNIQUE KEY key_name (`column1`, `column2`);</code></p><h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p>概念</p><ul><li>定义字符串的一部分作为索引。如果不指定前缀索引，那么索引就是整个字符串。</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">User</span> <span class="keyword">add</span> index idx_email(email);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">User</span> <span class="keyword">add</span> index idx_email(email(<span class="number">6</span>));</span><br></pre></td></tr></table></figure><p>优点</p><ul><li>定义好的长度，既能节省空间，也不会增加太多的查询成本</li></ul><p>缺点</p><ul><li>使用前缀索引后，不能使用覆盖索引</li></ul><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><h4 id="查询重复数据"><a href="#查询重复数据" class="headerlink" title="查询重复数据"></a>查询重复数据</h4><p>根据两个字段 查询重复</p><p><code>SELECT id FROM dp_test GROUP BY issue, member_id HAVING count( id ) &gt; 1</code></p><p>删除重复</p><p><code>DELETE FROM dp_test WHERE id IN (SELECT id FROM (SELECT id FROM dp_test GROUP BY issue, member_id HAVING count( id ) &gt; 1) ids)</code></p><blockquote><p>注：这里只是测试数据，我这随便删除。</p></blockquote><h4 id="已经存在联合索引，单列上是否还要加索引？"><a href="#已经存在联合索引，单列上是否还要加索引？" class="headerlink" title="已经存在联合索引，单列上是否还要加索引？"></a>已经存在联合索引，单列上是否还要加索引？</h4><p>如果联合索引idx(a, b)，那么a列上的索引就没必要了，但是如果结合业务查询，确实需要b列上的索引，那就建。<br>另外，如果需要联合idx(a,b)，同时a和b列上都需要有索引，那就看a和b哪一列单独建索引更高效，来决定idx(a,b)里a,b的顺序。例如a是int类型，b是varchar(100)，那么就建idx(b,a),idx_a(a)。这里idx_a(a)，就比idx_b(b)好。<br>如果单独索引是复合索引的第一个，就不需要了，其他位置的就需要单独建<br>比如idx(a,b)<br>此时a就不需要单独建索引了，因为在匹配的时候始终会先去匹配a列的索引。而当a失效时，b不会生效，需要匹配单独的索引</p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 7 语法整理</title>
      <link href="/2022/02/10/PHP-7-%E8%AF%AD%E6%B3%95%E6%95%B4%E7%90%86/"/>
      <url>/2022/02/10/PHP-7-%E8%AF%AD%E6%B3%95%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="函数参数传递对象为null解决示例"><a href="#函数参数传递对象为null解决示例" class="headerlink" title="函数参数传递对象为null解决示例"></a>函数参数传递对象为null解决示例</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户状态与提示</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Member $member</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getStatusTips</span>(<span class="params">Member <span class="variable">$member</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不加空安全，会报以下错误</p><p><code>must be an instance of app\model\Member, null given</code></p><p>改为以下即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取用户状态与提示</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> Member|null $member</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getStatusTips</span>(<span class="params">?Member <span class="variable">$member</span></span>): <span class="title">array</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://www.php.net/manual/zh/functions.arguments.php">PHP手册</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP命令行出现MySQL server has gone away</title>
      <link href="/2022/02/10/ThinkPHP%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%87%BA%E7%8E%B0MySQL_server_has_gone_away/"/>
      <url>/2022/02/10/ThinkPHP%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%87%BA%E7%8E%B0MySQL_server_has_gone_away/</url>
      
        <content type="html"><![CDATA[<h3 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">[think\exception\<span class="built_in">ErrorException</span>]            </span><br><span class="line"><span class="title class_">PDO</span>::<span class="title function_ invoke__">prepare</span>(): MySQL server has gone away</span><br></pre></td></tr></table></figure><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p><code>database.php</code> 文件修改</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 是否需要断线重连</span></span><br><span class="line"><span class="string">&#x27;break_reconnect&#x27;</span>   =&gt; <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">改为</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否需要断线重连</span></span><br><span class="line"><span class="string">&#x27;break_reconnect&#x27;</span>   =&gt; <span class="literal">true</span>,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VMWare 虚拟机克隆，创建多台Centos 7</title>
      <link href="/2022/02/10/VMWare%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%8B%E9%9A%86%EF%BC%8C%E5%88%9B%E5%BB%BA%E5%A4%9A%E5%8F%B0Centos%207/"/>
      <url>/2022/02/10/VMWare%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%8B%E9%9A%86%EF%BC%8C%E5%88%9B%E5%BB%BA%E5%A4%9A%E5%8F%B0Centos%207/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Centos 7</li><li>VMWare 14</li><li>Win10</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p><img src="/images/vmware_centos_clone_1.png" alt=""></p><blockquote><p>虚拟机-&gt;管理-&gt;克隆</p></blockquote><p><img src="/images/vmware_centos_clone_2.png" alt=""></p><blockquote><p>下一步</p></blockquote><p><img src="/images/vmware_centos_clone_3.png" alt=""></p><blockquote><p>选择“虚拟机中的当前状态”-&gt;下一步</p></blockquote><p><img src="/images/vmware_centos_clone_4.png" alt=""></p><blockquote><p>选择“创建完整克隆”-&gt;下一步</p></blockquote><p><img src="/images/vmware_centos_clone_5.png" alt=""></p><blockquote><p>输入新虚拟机的名称-&gt;点完成</p></blockquote><p><img src="/images/vmware_centos_clone_6.png" alt=""></p><blockquote><p>等待一会就可以看到克隆的虚拟机了</p></blockquote><p><img src="/images/vmware_centos_clone_7.png" alt=""></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>因为克隆的虚拟机IP是一样的，所以还要改下每台虚拟机的IP</p><p>修改Centos 7网络配置</p><p><code>vim /etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>以下为我的配置（根据自己的网络修改）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BOOTPROTO=static</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.50.100（其他两台Centos网络配置：IPADDR=192.168.50.101，IPADDR=192.168.50.102）</span><br><span class="line">NETMASH=255.255.255.0</span><br><span class="line">GATEWAY=192.168.50.1</span><br></pre></td></tr></table></figure><p>wq 保存如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=733f76f6-d10d-44ca-8441-7593fa913b0b</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.50.100</span><br><span class="line">NETMASH=255.255.255.0</span><br><span class="line">GATEWAY=192.168.50.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> VMWare 克隆 </tag>
            
            <tag> 虚拟机克隆 </tag>
            
            <tag> Centos 7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微博批量取消关注脚本</title>
      <link href="/2022/02/10/%E5%BE%AE%E5%8D%9A%E6%89%B9%E9%87%8F%E5%8F%96%E6%B6%88%E5%85%B3%E6%B3%A8%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/02/10/%E5%BE%AE%E5%8D%9A%E6%89%B9%E9%87%8F%E5%8F%96%E6%B6%88%E5%85%B3%E6%B3%A8%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><p>进入关注的页面，选择未分组，不用点批量删除，F12打开控制台，粘贴下面的代码，回车执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function qxgz()</span><br><span class="line">&#123;</span><br><span class="line">    document.getElementsByClassName(&quot;btn_link S_txt1&quot;)[0].click();</span><br><span class="line">    var arrs = document.getElementsByClassName(&quot;member_li S_bg1 &quot;);</span><br><span class="line">    for(var i = 0;i&lt;arrs.length;i++)&#123;arrs[i].click();&#125;</span><br><span class="line">    document.getElementsByClassName(&quot;W_btn_a&quot;)[1].click();</span><br><span class="line">    document.getElementsByClassName(&quot;W_btn_a btn_34px&quot;)[0].click();</span><br><span class="line">&#125;</span><br><span class="line">self.setInterval(&quot;qxgz()&quot;,60000);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>随心散文</title>
      <link href="/2022/02/09/%E9%9A%8F%E5%BF%83%E6%95%A3%E6%96%87/"/>
      <url>/2022/02/09/%E9%9A%8F%E5%BF%83%E6%95%A3%E6%96%87/</url>
      
        <content type="html"><![CDATA[<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">我曾踏足山巅，也曾进入低谷，二者都让我受益良多。</span><br><span class="line">—— 瓦罗兰之盾塔里克 《英雄联盟》</span><br><span class="line"></span><br><span class="line">同行</span><br><span class="line">檐前早课声，淡然又七年。</span><br><span class="line">少壮能几时，醉酒笑谈情。</span><br><span class="line">兄弟齐心力，前行路自平。</span><br><span class="line">今朝任风雨，暮年不悔心。</span><br><span class="line">—— axin www.axinblog.com</span><br><span class="line"></span><br><span class="line">业精于勤，荒于嬉；行成于思，毁于随。</span><br><span class="line">——（唐）韩愈《进学解》</span><br><span class="line"></span><br><span class="line">等我完成了今生的任务，将来送走了父母，将我生的儿女抚养大了，那个时候了无牵挂，</span><br><span class="line">我就去流浪，不给孩子们添麻烦，走那是那，死那算那！因为这一生太苦太累了，世界</span><br><span class="line">无论多少美好，下辈子再也不来了</span><br><span class="line">—— 抖音@风吹帽儿落</span><br><span class="line"></span><br><span class="line">适应者生存，管他漫身伤痕。</span><br><span class="line">—— axin www.axinblog.com</span><br><span class="line"></span><br><span class="line">    征途</span><br><span class="line">铜锈路，长漫漫。</span><br><span class="line">恍然间，悄梦碎。</span><br><span class="line">撕留恋，淡安然。</span><br><span class="line">霸之愚，虞泪殇。</span><br><span class="line">漫身痕，适者存。</span><br><span class="line">笑应世，躬立行。</span><br><span class="line">—— axin www.axinblog.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">忠言逆耳利于行，良药苦口利于病。有的人真诚指出错误你不听，有的人口蜜腹剑你却高兴。</span><br><span class="line">——人性的弱点</span><br><span class="line"></span><br><span class="line">人之患在好为人师，</span><br><span class="line">但，</span><br><span class="line">人生如海，病蚌成珠。</span><br><span class="line">如果你因为我的话感谢我，我也愿你戴上这珍珠后，美丽庄重，宛若画中人。</span><br><span class="line">—— 知乎</span><br><span class="line"></span><br><span class="line">独在异乡为异客，每逢佳节倍思亲。</span><br><span class="line">——出自唐代[王维]的《九月九日忆山东兄弟》</span><br><span class="line"></span><br><span class="line">我们可以仰望星空，但也要学会理解尘埃</span><br><span class="line">——[Seasee Youl]知乎</span><br><span class="line"></span><br><span class="line">随着年纪越来越大，能和别人说的心里话越少。你身上的担子和面具越来越多，越来越重，你也越来越放不下他们。不是你不愿放下，而且戴久了，他们已经成了你的一部分。</span><br><span class="line"></span><br><span class="line">花有重开日，人无再少年。</span><br><span class="line">相逢拌酩酊，何必备芳鲜。</span><br><span class="line"></span><br><span class="line">良心比得过房价？</span><br><span class="line"></span><br><span class="line">996对年轻人一点都不残酷，残酷的是你不可能一直年轻！</span><br><span class="line"></span><br><span class="line">伤害其实是自己对自己的失望。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos8 安装Docker&amp;Docker Compose</title>
      <link href="/2022/02/09/Centos8_%E5%AE%89%E8%A3%85Docker_Docker_Compose/"/>
      <url>/2022/02/09/Centos8_%E5%AE%89%E8%A3%85Docker_Docker_Compose/</url>
      
        <content type="html"><![CDATA[<h3 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h3><ul><li>Docker version 20.10.7, build f0df350</li><li>CentOS Linux release 8.3.2011</li></ul><h3 id="步骤说明"><a href="#步骤说明" class="headerlink" title="步骤说明"></a>步骤说明</h3><h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><p>安装命令</p><p><code>curl -sSL https://get.daocloud.io/docker | sh</code></p><h4 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h4><p>安装命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>安装过程</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ workspace]# curl -L https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta">% </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   423  100   423    0     0    500      0 --:--:-- --:--:-- --:--:--   500</span><br><span class="line">100 12.1M  100 12.1M    0     0  9702k      0  0:00:01  0:00:01 --:--:-- 36.3M</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ workspace]# chmod +x /usr/local/bin/docker-compose</span><br><span class="line">[root@iZbp14vt99zpj8dde2fdlmZ workspace]# docker-compose version</span><br><span class="line">docker-compose version 1.29.2, build 5becea4c</span><br><span class="line">docker-py version: 5.0.0</span><br><span class="line">CPython version: 3.7.10</span><br><span class="line">OpenSSL version: OpenSSL 1.1.0l  10 Sep 2019</span><br></pre></td></tr></table></figure><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><p><a href="https://get.daocloud.io/#install-compose">在 Linux上 安装 Docker</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
          <category> Centos </category>
          
          <category> Docker </category>
          
          <category> DockerCompose </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Docker </tag>
            
            <tag> DockerCompose </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
